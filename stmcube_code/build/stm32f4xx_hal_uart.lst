ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB174:
  26              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins (TX as alternate function pull-up, RX as alternate func
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 2


  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 3


  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 4


 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 5


 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 6


 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 7


 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6.
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Except for STM32F446xx devices, that is available for USART1, USART2, USART3, USART6, UART4 
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     */
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 8


 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 9


 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 10


 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 11


 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 12


 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 13


 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 14


 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 15


 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 16


 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 17


 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 18


 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 19


1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 20


1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 21


1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 22


1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 23


1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 24


1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 25


1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA stream */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 26


1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 27


1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 28


1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 29


1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 30


1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 31


1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 32


1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 33


1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 34


1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 35


1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 36


1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 37


2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 38


2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 39


2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 40


2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 41


2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 42


2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 43


2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 44


2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 45


2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 46


2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 47


2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 48


2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 49


2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  27              		.loc 1 2721 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 2723 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 D368     		ldr	r3, [r2, #12]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 D360     		str	r3, [r2, #12]
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  38              		.loc 1 2726 0
  39 000a 2023     		movs	r3, #32
  40 000c 80F83930 		strb	r3, [r0, #57]
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
  41              		.loc 1 2727 0
  42 0010 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE174:
  46              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	UART_EndRxTransfer:
  54              	.LFB175:
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  55              		.loc 1 2735 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL1:
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 50


2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  61              		.loc 1 2737 0
  62 0000 0268     		ldr	r2, [r0]
  63 0002 D368     		ldr	r3, [r2, #12]
  64 0004 23F49073 		bic	r3, r3, #288
  65 0008 D360     		str	r3, [r2, #12]
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  66              		.loc 1 2738 0
  67 000a 0268     		ldr	r2, [r0]
  68 000c 5369     		ldr	r3, [r2, #20]
  69 000e 23F00103 		bic	r3, r3, #1
  70 0012 5361     		str	r3, [r2, #20]
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  71              		.loc 1 2741 0
  72 0014 2023     		movs	r3, #32
  73 0016 80F83A30 		strb	r3, [r0, #58]
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
  74              		.loc 1 2742 0
  75 001a 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE175:
  79              		.section	.text.UART_Transmit_IT,"ax",%progbits
  80              		.align	1
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv4-sp-d16
  86              	UART_Transmit_IT:
  87              	.LFB181:
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 51


2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 52


2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 53


2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  88              		.loc 1 2919 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL2:
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  94              		.loc 1 2923 0
  95 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
  96 0004 DBB2     		uxtb	r3, r3
  97 0006 212B     		cmp	r3, #33
  98 0008 2AD1     		bne	.L8
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
  99              		.loc 1 2925 0
 100 000a 8368     		ldr	r3, [r0, #8]
 101 000c B3F5805F 		cmp	r3, #4096
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 54


 102 0010 16D0     		beq	.L10
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 103              		.loc 1 2940 0
 104 0012 036A     		ldr	r3, [r0, #32]
 105 0014 5A1C     		adds	r2, r3, #1
 106 0016 0262     		str	r2, [r0, #32]
 107 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 108 001a 0368     		ldr	r3, [r0]
 109 001c 5A60     		str	r2, [r3, #4]
 110              	.L7:
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 111              		.loc 1 2943 0
 112 001e C38C     		ldrh	r3, [r0, #38]
 113 0020 013B     		subs	r3, r3, #1
 114 0022 9BB2     		uxth	r3, r3
 115 0024 C384     		strh	r3, [r0, #38]	@ movhi
 116 0026 EBB9     		cbnz	r3, .L9
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 117              		.loc 1 2946 0
 118 0028 0268     		ldr	r2, [r0]
 119 002a D368     		ldr	r3, [r2, #12]
 120 002c 23F08003 		bic	r3, r3, #128
 121 0030 D360     		str	r3, [r2, #12]
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 122              		.loc 1 2949 0
 123 0032 0268     		ldr	r2, [r0]
 124 0034 D368     		ldr	r3, [r2, #12]
 125 0036 43F04003 		orr	r3, r3, #64
 126 003a D360     		str	r3, [r2, #12]
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 127              		.loc 1 2951 0
 128 003c 0020     		movs	r0, #0
 129              	.LVL3:
 130 003e 7047     		bx	lr
 131              	.LVL4:
 132              	.L10:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 55


2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 133              		.loc 1 2927 0
 134 0040 036A     		ldr	r3, [r0, #32]
 135              	.LVL5:
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 136              		.loc 1 2928 0
 137 0042 1B88     		ldrh	r3, [r3]
 138              	.LVL6:
 139 0044 0268     		ldr	r2, [r0]
 140 0046 C3F30803 		ubfx	r3, r3, #0, #9
 141 004a 5360     		str	r3, [r2, #4]
 142              	.LVL7:
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 143              		.loc 1 2929 0
 144 004c 0369     		ldr	r3, [r0, #16]
 145 004e 1BB9     		cbnz	r3, .L6
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 146              		.loc 1 2931 0
 147 0050 036A     		ldr	r3, [r0, #32]
 148 0052 0233     		adds	r3, r3, #2
 149 0054 0362     		str	r3, [r0, #32]
 150 0056 E2E7     		b	.L7
 151              	.L6:
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 152              		.loc 1 2935 0
 153 0058 036A     		ldr	r3, [r0, #32]
 154 005a 0133     		adds	r3, r3, #1
 155 005c 0362     		str	r3, [r0, #32]
 156 005e DEE7     		b	.L7
 157              	.L8:
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 158              		.loc 1 2955 0
 159 0060 0220     		movs	r0, #2
 160              	.LVL8:
 161 0062 7047     		bx	lr
 162              	.LVL9:
 163              	.L9:
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 164              		.loc 1 2951 0
 165 0064 0020     		movs	r0, #0
 166              	.LVL10:
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 167              		.loc 1 2957 0
 168 0066 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE181:
 172              		.global	__aeabi_uldivmod
 173              		.section	.text.UART_SetConfig,"ax",%progbits
 174              		.align	1
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 56


 180              	UART_SetConfig:
 181              	.LFB184:
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr;
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 57


3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 182              		.loc 1 3062 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              	.LVL11:
 187 0000 2DE9F04B 		push	{r4, r5, r6, r7, r8, r9, fp, lr}
 188              	.LCFI0:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 58


 189              		.cfi_def_cfa_offset 32
 190              		.cfi_offset 4, -32
 191              		.cfi_offset 5, -28
 192              		.cfi_offset 6, -24
 193              		.cfi_offset 7, -20
 194              		.cfi_offset 8, -16
 195              		.cfi_offset 9, -12
 196              		.cfi_offset 11, -8
 197              		.cfi_offset 14, -4
 198 0004 0446     		mov	r4, r0
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t pclk;
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 199              		.loc 1 3075 0
 200 0006 0268     		ldr	r2, [r0]
 201 0008 1369     		ldr	r3, [r2, #16]
 202 000a 23F44053 		bic	r3, r3, #12288
 203 000e C168     		ldr	r1, [r0, #12]
 204 0010 0B43     		orrs	r3, r3, r1
 205 0012 1361     		str	r3, [r2, #16]
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 206              		.loc 1 3084 0
 207 0014 8368     		ldr	r3, [r0, #8]
 208 0016 0269     		ldr	r2, [r0, #16]
 209 0018 1343     		orrs	r3, r3, r2
 210 001a 4269     		ldr	r2, [r0, #20]
 211 001c 1343     		orrs	r3, r3, r2
 212 001e C269     		ldr	r2, [r0, #28]
 213 0020 1A43     		orrs	r2, r2, r3
 214              	.LVL12:
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 215              		.loc 1 3085 0
 216 0022 0168     		ldr	r1, [r0]
 217 0024 CB68     		ldr	r3, [r1, #12]
 218 0026 23F41643 		bic	r3, r3, #38400
 219 002a 23F00C03 		bic	r3, r3, #12
 220 002e 1343     		orrs	r3, r3, r2
 221 0030 CB60     		str	r3, [r1, #12]
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 59


3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 222              		.loc 1 3091 0
 223 0032 0268     		ldr	r2, [r0]
 224              	.LVL13:
 225 0034 5369     		ldr	r3, [r2, #20]
 226 0036 23F44073 		bic	r3, r3, #768
 227 003a 8169     		ldr	r1, [r0, #24]
 228 003c 0B43     		orrs	r3, r3, r1
 229 003e 5361     		str	r3, [r2, #20]
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 230              		.loc 1 3094 0
 231 0040 C369     		ldr	r3, [r0, #28]
 232 0042 B3F5004F 		cmp	r3, #32768
 233 0046 3BD0     		beq	.L19
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 60


3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 234              		.loc 1 3132 0
 235 0048 0368     		ldr	r3, [r0]
 236 004a 714A     		ldr	r2, .L20
 237 004c 9342     		cmp	r3, r2
 238 004e 00F0AB80 		beq	.L16
 239              		.loc 1 3132 0 is_stmt 0 discriminator 1
 240 0052 02F58062 		add	r2, r2, #1024
 241 0056 9342     		cmp	r3, r2
 242 0058 00F0A680 		beq	.L16
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 243              		.loc 1 3146 0 is_stmt 1
 244 005c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 245              	.LVL14:
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 246              		.loc 1 3147 0
 247 0060 4FF00009 		mov	r9, #0
 248 0064 0618     		adds	r6, r0, r0
 249 0066 49EB0907 		adc	r7, r9, r9
 250 006a 16EB000B 		adds	fp, r6, r0
 251 006e 47EB090C 		adc	ip, r7, r9
 252 0072 4FEACC03 		lsl	r3, ip, #3
 253 0076 43EA5B73 		orr	r3, r3, fp, lsr #29
 254 007a 4FEACB02 		lsl	r2, fp, #3
 255 007e 9346     		mov	fp, r2
 256 0080 9C46     		mov	ip, r3
 257 0082 6368     		ldr	r3, [r4, #4]
 258 0084 9A00     		lsls	r2, r3, #2
 259 0086 9B0F     		lsrs	r3, r3, #30
 260 0088 10EB0B00 		adds	r0, r0, fp
 261              	.LVL15:
 262 008c 49EB0C01 		adc	r1, r9, ip
 263 0090 FFF7FEFF 		bl	__aeabi_uldivmod
 264              	.LVL16:
 265 0094 5F4D     		ldr	r5, .L20+4
 266 0096 A5FB0032 		umull	r3, r2, r5, r0
 267 009a 5109     		lsrs	r1, r2, #5
 268 009c 6422     		movs	r2, #100
 269 009e 02FB1102 		mls	r2, r2, r1, r0
 270 00a2 1301     		lsls	r3, r2, #4
 271 00a4 3233     		adds	r3, r3, #50
 272 00a6 A5FB0323 		umull	r2, r3, r5, r3
 273 00aa 5B09     		lsrs	r3, r3, #5
 274 00ac 03F0F002 		and	r2, r3, #240
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 61


 275 00b0 02EB0112 		add	r2, r2, r1, lsl #4
 276 00b4 03F00F03 		and	r3, r3, #15
 277 00b8 2168     		ldr	r1, [r4]
 278 00ba 1344     		add	r3, r3, r2
 279 00bc 8B60     		str	r3, [r1, #8]
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 280              		.loc 1 3150 0
 281 00be A4E0     		b	.L11
 282              	.LVL17:
 283              	.L19:
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 284              		.loc 1 3104 0
 285 00c0 0368     		ldr	r3, [r0]
 286 00c2 534A     		ldr	r2, .L20
 287 00c4 9342     		cmp	r3, r2
 288 00c6 39D0     		beq	.L13
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 289              		.loc 1 3104 0 is_stmt 0 discriminator 1
 290 00c8 02F58062 		add	r2, r2, #1024
 291 00cc 9342     		cmp	r3, r2
 292 00ce 35D0     		beq	.L13
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 293              		.loc 1 3118 0 is_stmt 1
 294 00d0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 295              	.LVL18:
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 296              		.loc 1 3119 0
 297 00d4 8346     		mov	fp, r0
 298 00d6 4FF0000C 		mov	ip, #0
 299 00da 0618     		adds	r6, r0, r0
 300 00dc 4CEB0C07 		adc	r7, ip, ip
 301 00e0 16EB0008 		adds	r8, r6, r0
 302 00e4 47EB0C09 		adc	r9, r7, ip
 303 00e8 4FEAC903 		lsl	r3, r9, #3
 304 00ec 43EA5873 		orr	r3, r3, r8, lsr #29
 305 00f0 4FEAC802 		lsl	r2, r8, #3
 306 00f4 9046     		mov	r8, r2
 307 00f6 9946     		mov	r9, r3
 308 00f8 6268     		ldr	r2, [r4, #4]
 309 00fa 0021     		movs	r1, #0
 310 00fc 9218     		adds	r2, r2, r2
 311 00fe 41EB0103 		adc	r3, r1, r1
 312 0102 1BEB0800 		adds	r0, fp, r8
 313              	.LVL19:
 314 0106 4CEB0901 		adc	r1, ip, r9
 315 010a FFF7FEFF 		bl	__aeabi_uldivmod
 316              	.LVL20:
 317 010e 414D     		ldr	r5, .L20+4
 318 0110 A5FB0032 		umull	r3, r2, r5, r0
 319 0114 5109     		lsrs	r1, r2, #5
 320 0116 6422     		movs	r2, #100
 321 0118 02FB1102 		mls	r2, r2, r1, r0
 322 011c D300     		lsls	r3, r2, #3
 323 011e 3233     		adds	r3, r3, #50
 324 0120 A5FB0323 		umull	r2, r3, r5, r3
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 62


 325 0124 5B09     		lsrs	r3, r3, #5
 326 0126 5A00     		lsls	r2, r3, #1
 327 0128 02F4F872 		and	r2, r2, #496
 328 012c 02EB0112 		add	r2, r2, r1, lsl #4
 329 0130 03F00703 		and	r3, r3, #7
 330 0134 2168     		ldr	r1, [r4]
 331 0136 1344     		add	r3, r3, r2
 332 0138 8B60     		str	r3, [r1, #8]
 333 013a 66E0     		b	.L11
 334              	.LVL21:
 335              	.L13:
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 336              		.loc 1 3106 0
 337 013c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 338              	.LVL22:
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 339              		.loc 1 3107 0
 340 0140 8046     		mov	r8, r0
 341 0142 4FF00009 		mov	r9, #0
 342 0146 0618     		adds	r6, r0, r0
 343 0148 49EB0907 		adc	r7, r9, r9
 344 014c 16EB000B 		adds	fp, r6, r0
 345 0150 47EB090C 		adc	ip, r7, r9
 346 0154 4FEACC03 		lsl	r3, ip, #3
 347 0158 43EA5B73 		orr	r3, r3, fp, lsr #29
 348 015c 4FEACB02 		lsl	r2, fp, #3
 349 0160 9346     		mov	fp, r2
 350 0162 9C46     		mov	ip, r3
 351 0164 6268     		ldr	r2, [r4, #4]
 352 0166 0021     		movs	r1, #0
 353 0168 9218     		adds	r2, r2, r2
 354 016a 41EB0103 		adc	r3, r1, r1
 355 016e 18EB0B00 		adds	r0, r8, fp
 356              	.LVL23:
 357 0172 49EB0C01 		adc	r1, r9, ip
 358 0176 FFF7FEFF 		bl	__aeabi_uldivmod
 359              	.LVL24:
 360 017a 264D     		ldr	r5, .L20+4
 361 017c A5FB0032 		umull	r3, r2, r5, r0
 362 0180 5109     		lsrs	r1, r2, #5
 363 0182 6422     		movs	r2, #100
 364 0184 02FB1102 		mls	r2, r2, r1, r0
 365 0188 D300     		lsls	r3, r2, #3
 366 018a 3233     		adds	r3, r3, #50
 367 018c A5FB0323 		umull	r2, r3, r5, r3
 368 0190 5B09     		lsrs	r3, r3, #5
 369 0192 5A00     		lsls	r2, r3, #1
 370 0194 02F4F872 		and	r2, r2, #496
 371 0198 02EB0112 		add	r2, r2, r1, lsl #4
 372 019c 03F00703 		and	r3, r3, #7
 373 01a0 2168     		ldr	r1, [r4]
 374 01a2 1344     		add	r3, r3, r2
 375 01a4 8B60     		str	r3, [r1, #8]
 376 01a6 30E0     		b	.L11
 377              	.LVL25:
 378              	.L16:
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 63


 379              		.loc 1 3134 0
 380 01a8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 381              	.LVL26:
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 382              		.loc 1 3135 0
 383 01ac 4FF00009 		mov	r9, #0
 384 01b0 0618     		adds	r6, r0, r0
 385 01b2 49EB0907 		adc	r7, r9, r9
 386 01b6 16EB000B 		adds	fp, r6, r0
 387 01ba 47EB090C 		adc	ip, r7, r9
 388 01be 4FEACC03 		lsl	r3, ip, #3
 389 01c2 43EA5B73 		orr	r3, r3, fp, lsr #29
 390 01c6 4FEACB02 		lsl	r2, fp, #3
 391 01ca 9346     		mov	fp, r2
 392 01cc 9C46     		mov	ip, r3
 393 01ce 6368     		ldr	r3, [r4, #4]
 394 01d0 9A00     		lsls	r2, r3, #2
 395 01d2 9B0F     		lsrs	r3, r3, #30
 396 01d4 10EB0B00 		adds	r0, r0, fp
 397              	.LVL27:
 398 01d8 49EB0C01 		adc	r1, r9, ip
 399 01dc FFF7FEFF 		bl	__aeabi_uldivmod
 400              	.LVL28:
 401 01e0 0C4D     		ldr	r5, .L20+4
 402 01e2 A5FB0032 		umull	r3, r2, r5, r0
 403 01e6 5109     		lsrs	r1, r2, #5
 404 01e8 6422     		movs	r2, #100
 405 01ea 02FB1102 		mls	r2, r2, r1, r0
 406 01ee 1301     		lsls	r3, r2, #4
 407 01f0 3233     		adds	r3, r3, #50
 408 01f2 A5FB0323 		umull	r2, r3, r5, r3
 409 01f6 5B09     		lsrs	r3, r3, #5
 410 01f8 03F0F002 		and	r2, r3, #240
 411 01fc 02EB0112 		add	r2, r2, r1, lsl #4
 412 0200 03F00F03 		and	r3, r3, #15
 413 0204 2168     		ldr	r1, [r4]
 414 0206 1344     		add	r3, r3, r2
 415 0208 8B60     		str	r3, [r1, #8]
 416              	.L11:
 417              		.loc 1 3150 0
 418 020a BDE8F08B 		pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 419              	.LVL29:
 420              	.L21:
 421 020e 00BF     		.align	2
 422              	.L20:
 423 0210 00100140 		.word	1073811456
 424 0214 1F85EB51 		.word	1374389535
 425              		.cfi_endproc
 426              	.LFE184:
 428              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 429              		.align	1
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv4-sp-d16
 435              	UART_WaitOnFlagUntilTimeout:
 436              	.LFB173:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 64


2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
 437              		.loc 1 2689 0
 438              		.cfi_startproc
 439              		@ args = 4, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              	.LVL30:
 442 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 443              	.LCFI1:
 444              		.cfi_def_cfa_offset 24
 445              		.cfi_offset 4, -24
 446              		.cfi_offset 5, -20
 447              		.cfi_offset 6, -16
 448              		.cfi_offset 7, -12
 449              		.cfi_offset 8, -8
 450              		.cfi_offset 14, -4
 451 0004 0546     		mov	r5, r0
 452 0006 0F46     		mov	r7, r1
 453 0008 1646     		mov	r6, r2
 454 000a 9846     		mov	r8, r3
 455 000c 069C     		ldr	r4, [sp, #24]
 456              	.LVL31:
 457              	.L24:
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 458              		.loc 1 2691 0
 459 000e 2B68     		ldr	r3, [r5]
 460 0010 1B68     		ldr	r3, [r3]
 461 0012 37EA0303 		bics	r3, r7, r3
 462 0016 0CBF     		ite	eq
 463 0018 0123     		moveq	r3, #1
 464 001a 0023     		movne	r3, #0
 465 001c B342     		cmp	r3, r6
 466 001e 1DD1     		bne	.L29
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 467              		.loc 1 2694 0
 468 0020 B4F1FF3F 		cmp	r4, #-1
 469 0024 F3D0     		beq	.L24
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 470              		.loc 1 2696 0
 471 0026 2CB1     		cbz	r4, .L25
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 472              		.loc 1 2696 0 is_stmt 0 discriminator 1
 473 0028 FFF7FEFF 		bl	HAL_GetTick
 474              	.LVL32:
 475 002c A0EB0800 		sub	r0, r0, r8
 476 0030 A042     		cmp	r0, r4
 477 0032 ECD9     		bls	.L24
 478              	.L25:
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 479              		.loc 1 2699 0 is_stmt 1
 480 0034 2A68     		ldr	r2, [r5]
 481 0036 D368     		ldr	r3, [r2, #12]
 482 0038 23F4D073 		bic	r3, r3, #416
 483 003c D360     		str	r3, [r2, #12]
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 484              		.loc 1 2700 0
 485 003e 2A68     		ldr	r2, [r5]
 486 0040 5369     		ldr	r3, [r2, #20]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 65


 487 0042 23F00103 		bic	r3, r3, #1
 488 0046 5361     		str	r3, [r2, #20]
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 489              		.loc 1 2702 0
 490 0048 2023     		movs	r3, #32
 491 004a 85F83930 		strb	r3, [r5, #57]
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 492              		.loc 1 2703 0
 493 004e 85F83A30 		strb	r3, [r5, #58]
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 494              		.loc 1 2706 0
 495 0052 0023     		movs	r3, #0
 496 0054 85F83830 		strb	r3, [r5, #56]
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 497              		.loc 1 2708 0
 498 0058 0320     		movs	r0, #3
 499 005a 00E0     		b	.L26
 500              	.L29:
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 501              		.loc 1 2712 0
 502 005c 0020     		movs	r0, #0
 503              	.L26:
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 504              		.loc 1 2713 0
 505 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 506              		.cfi_endproc
 507              	.LFE173:
 509              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 510              		.align	1
 511              		.weak	HAL_UART_MspInit
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu fpv4-sp-d16
 517              	HAL_UART_MspInit:
 518              	.LFB135:
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 519              		.loc 1 670 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524              	.LVL33:
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 525              		.loc 1 676 0
 526 0000 7047     		bx	lr
 527              		.cfi_endproc
 528              	.LFE135:
 530              		.section	.text.HAL_UART_Init,"ax",%progbits
 531              		.align	1
 532              		.global	HAL_UART_Init
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv4-sp-d16
 538              	HAL_UART_Init:
 539              	.LFB130:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 66


 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 540              		.loc 1 318 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              	.LVL34:
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 545              		.loc 1 320 0
 546 0000 58B3     		cbz	r0, .L34
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 547              		.loc 1 318 0
 548 0002 10B5     		push	{r4, lr}
 549              	.LCFI2:
 550              		.cfi_def_cfa_offset 8
 551              		.cfi_offset 4, -8
 552              		.cfi_offset 14, -4
 553 0004 0446     		mov	r4, r0
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 554              		.loc 1 341 0
 555 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 556 000a 0BB3     		cbz	r3, .L39
 557              	.LVL35:
 558              	.L33:
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 559              		.loc 1 362 0
 560 000c 2423     		movs	r3, #36
 561 000e 84F83930 		strb	r3, [r4, #57]
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 562              		.loc 1 365 0
 563 0012 2268     		ldr	r2, [r4]
 564 0014 D368     		ldr	r3, [r2, #12]
 565 0016 23F40053 		bic	r3, r3, #8192
 566 001a D360     		str	r3, [r2, #12]
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 567              		.loc 1 368 0
 568 001c 2046     		mov	r0, r4
 569 001e FFF7FEFF 		bl	UART_SetConfig
 570              	.LVL36:
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 571              		.loc 1 373 0
 572 0022 2268     		ldr	r2, [r4]
 573 0024 1369     		ldr	r3, [r2, #16]
 574 0026 23F49043 		bic	r3, r3, #18432
 575 002a 1361     		str	r3, [r2, #16]
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 576              		.loc 1 374 0
 577 002c 2268     		ldr	r2, [r4]
 578 002e 5369     		ldr	r3, [r2, #20]
 579 0030 23F02A03 		bic	r3, r3, #42
 580 0034 5361     		str	r3, [r2, #20]
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 581              		.loc 1 377 0
 582 0036 2268     		ldr	r2, [r4]
 583 0038 D368     		ldr	r3, [r2, #12]
 584 003a 43F40053 		orr	r3, r3, #8192
 585 003e D360     		str	r3, [r2, #12]
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 67


 586              		.loc 1 380 0
 587 0040 0020     		movs	r0, #0
 588 0042 E063     		str	r0, [r4, #60]
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 589              		.loc 1 381 0
 590 0044 2023     		movs	r3, #32
 591 0046 84F83930 		strb	r3, [r4, #57]
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 592              		.loc 1 382 0
 593 004a 84F83A30 		strb	r3, [r4, #58]
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 594              		.loc 1 385 0
 595 004e 10BD     		pop	{r4, pc}
 596              	.LVL37:
 597              	.L39:
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 598              		.loc 1 344 0
 599 0050 80F83830 		strb	r3, [r0, #56]
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 600              		.loc 1 358 0
 601 0054 FFF7FEFF 		bl	HAL_UART_MspInit
 602              	.LVL38:
 603 0058 D8E7     		b	.L33
 604              	.LVL39:
 605              	.L34:
 606              	.LCFI3:
 607              		.cfi_def_cfa_offset 0
 608              		.cfi_restore 4
 609              		.cfi_restore 14
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 610              		.loc 1 322 0
 611 005a 0120     		movs	r0, #1
 612              	.LVL40:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 613              		.loc 1 385 0
 614 005c 7047     		bx	lr
 615              		.cfi_endproc
 616              	.LFE130:
 618              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 619              		.align	1
 620              		.global	HAL_HalfDuplex_Init
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 624              		.fpu fpv4-sp-d16
 626              	HAL_HalfDuplex_Init:
 627              	.LFB131:
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 628              		.loc 1 395 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              	.LVL41:
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 633              		.loc 1 397 0
 634 0000 0028     		cmp	r0, #0
 635 0002 30D0     		beq	.L43
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 68


 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 636              		.loc 1 395 0
 637 0004 10B5     		push	{r4, lr}
 638              	.LCFI4:
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 4, -8
 641              		.cfi_offset 14, -4
 642 0006 0446     		mov	r4, r0
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 643              		.loc 1 407 0
 644 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 645 000c 33B3     		cbz	r3, .L48
 646              	.LVL42:
 647              	.L42:
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 648              		.loc 1 428 0
 649 000e 2423     		movs	r3, #36
 650 0010 84F83930 		strb	r3, [r4, #57]
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 651              		.loc 1 431 0
 652 0014 2268     		ldr	r2, [r4]
 653 0016 D368     		ldr	r3, [r2, #12]
 654 0018 23F40053 		bic	r3, r3, #8192
 655 001c D360     		str	r3, [r2, #12]
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 656              		.loc 1 434 0
 657 001e 2046     		mov	r0, r4
 658 0020 FFF7FEFF 		bl	UART_SetConfig
 659              	.LVL43:
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 660              		.loc 1 439 0
 661 0024 2268     		ldr	r2, [r4]
 662 0026 1369     		ldr	r3, [r2, #16]
 663 0028 23F49043 		bic	r3, r3, #18432
 664 002c 1361     		str	r3, [r2, #16]
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 665              		.loc 1 440 0
 666 002e 2268     		ldr	r2, [r4]
 667 0030 5369     		ldr	r3, [r2, #20]
 668 0032 23F02203 		bic	r3, r3, #34
 669 0036 5361     		str	r3, [r2, #20]
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 670              		.loc 1 443 0
 671 0038 2268     		ldr	r2, [r4]
 672 003a 5369     		ldr	r3, [r2, #20]
 673 003c 43F00803 		orr	r3, r3, #8
 674 0040 5361     		str	r3, [r2, #20]
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 675              		.loc 1 446 0
 676 0042 2268     		ldr	r2, [r4]
 677 0044 D368     		ldr	r3, [r2, #12]
 678 0046 43F40053 		orr	r3, r3, #8192
 679 004a D360     		str	r3, [r2, #12]
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 680              		.loc 1 449 0
 681 004c 0020     		movs	r0, #0
 682 004e E063     		str	r0, [r4, #60]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 69


 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 683              		.loc 1 450 0
 684 0050 2023     		movs	r3, #32
 685 0052 84F83930 		strb	r3, [r4, #57]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 686              		.loc 1 451 0
 687 0056 84F83A30 		strb	r3, [r4, #58]
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 688              		.loc 1 454 0
 689 005a 10BD     		pop	{r4, pc}
 690              	.LVL44:
 691              	.L48:
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 692              		.loc 1 410 0
 693 005c 80F83830 		strb	r3, [r0, #56]
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 694              		.loc 1 424 0
 695 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 696              	.LVL45:
 697 0064 D3E7     		b	.L42
 698              	.LVL46:
 699              	.L43:
 700              	.LCFI5:
 701              		.cfi_def_cfa_offset 0
 702              		.cfi_restore 4
 703              		.cfi_restore 14
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 704              		.loc 1 399 0
 705 0066 0120     		movs	r0, #1
 706              	.LVL47:
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 707              		.loc 1 454 0
 708 0068 7047     		bx	lr
 709              		.cfi_endproc
 710              	.LFE131:
 712              		.section	.text.HAL_LIN_Init,"ax",%progbits
 713              		.align	1
 714              		.global	HAL_LIN_Init
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 718              		.fpu fpv4-sp-d16
 720              	HAL_LIN_Init:
 721              	.LFB132:
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 722              		.loc 1 468 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              	.LVL48:
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 727              		.loc 1 470 0
 728 0000 0028     		cmp	r0, #0
 729 0002 3BD0     		beq	.L52
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 730              		.loc 1 468 0
 731 0004 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 70


 732              	.LCFI6:
 733              		.cfi_def_cfa_offset 16
 734              		.cfi_offset 3, -16
 735              		.cfi_offset 4, -12
 736              		.cfi_offset 5, -8
 737              		.cfi_offset 14, -4
 738 0006 0446     		mov	r4, r0
 739 0008 0D46     		mov	r5, r1
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 740              		.loc 1 483 0
 741 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 742 000e 002B     		cmp	r3, #0
 743 0010 2FD0     		beq	.L57
 744              	.LVL49:
 745              	.L51:
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 746              		.loc 1 504 0
 747 0012 2423     		movs	r3, #36
 748 0014 84F83930 		strb	r3, [r4, #57]
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 749              		.loc 1 507 0
 750 0018 2268     		ldr	r2, [r4]
 751 001a D368     		ldr	r3, [r2, #12]
 752 001c 23F40053 		bic	r3, r3, #8192
 753 0020 D360     		str	r3, [r2, #12]
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 754              		.loc 1 510 0
 755 0022 2046     		mov	r0, r4
 756 0024 FFF7FEFF 		bl	UART_SetConfig
 757              	.LVL50:
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 758              		.loc 1 515 0
 759 0028 2268     		ldr	r2, [r4]
 760 002a 1369     		ldr	r3, [r2, #16]
 761 002c 23F40063 		bic	r3, r3, #2048
 762 0030 1361     		str	r3, [r2, #16]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 763              		.loc 1 516 0
 764 0032 2268     		ldr	r2, [r4]
 765 0034 5369     		ldr	r3, [r2, #20]
 766 0036 23F02A03 		bic	r3, r3, #42
 767 003a 5361     		str	r3, [r2, #20]
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 768              		.loc 1 519 0
 769 003c 2268     		ldr	r2, [r4]
 770 003e 1369     		ldr	r3, [r2, #16]
 771 0040 43F48043 		orr	r3, r3, #16384
 772 0044 1361     		str	r3, [r2, #16]
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 773              		.loc 1 522 0
 774 0046 2268     		ldr	r2, [r4]
 775 0048 1369     		ldr	r3, [r2, #16]
 776 004a 23F02003 		bic	r3, r3, #32
 777 004e 1361     		str	r3, [r2, #16]
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 778              		.loc 1 523 0
 779 0050 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 71


 780 0052 1969     		ldr	r1, [r3, #16]
 781 0054 0D43     		orrs	r5, r5, r1
 782              	.LVL51:
 783 0056 1D61     		str	r5, [r3, #16]
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 784              		.loc 1 526 0
 785 0058 2268     		ldr	r2, [r4]
 786 005a D368     		ldr	r3, [r2, #12]
 787 005c 43F40053 		orr	r3, r3, #8192
 788 0060 D360     		str	r3, [r2, #12]
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 789              		.loc 1 529 0
 790 0062 0020     		movs	r0, #0
 791 0064 E063     		str	r0, [r4, #60]
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 792              		.loc 1 530 0
 793 0066 2023     		movs	r3, #32
 794 0068 84F83930 		strb	r3, [r4, #57]
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 795              		.loc 1 531 0
 796 006c 84F83A30 		strb	r3, [r4, #58]
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 797              		.loc 1 534 0
 798 0070 38BD     		pop	{r3, r4, r5, pc}
 799              	.LVL52:
 800              	.L57:
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 801              		.loc 1 486 0
 802 0072 80F83830 		strb	r3, [r0, #56]
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 803              		.loc 1 500 0
 804 0076 FFF7FEFF 		bl	HAL_UART_MspInit
 805              	.LVL53:
 806 007a CAE7     		b	.L51
 807              	.LVL54:
 808              	.L52:
 809              	.LCFI7:
 810              		.cfi_def_cfa_offset 0
 811              		.cfi_restore 3
 812              		.cfi_restore 4
 813              		.cfi_restore 5
 814              		.cfi_restore 14
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 815              		.loc 1 472 0
 816 007c 0120     		movs	r0, #1
 817              	.LVL55:
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 818              		.loc 1 534 0
 819 007e 7047     		bx	lr
 820              		.cfi_endproc
 821              	.LFE132:
 823              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 824              		.align	1
 825              		.global	HAL_MultiProcessor_Init
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 72


 829              		.fpu fpv4-sp-d16
 831              	HAL_MultiProcessor_Init:
 832              	.LFB133:
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 833              		.loc 1 549 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              	.LVL56:
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 838              		.loc 1 551 0
 839 0000 0028     		cmp	r0, #0
 840 0002 40D0     		beq	.L61
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 841              		.loc 1 549 0
 842 0004 70B5     		push	{r4, r5, r6, lr}
 843              	.LCFI8:
 844              		.cfi_def_cfa_offset 16
 845              		.cfi_offset 4, -16
 846              		.cfi_offset 5, -12
 847              		.cfi_offset 6, -8
 848              		.cfi_offset 14, -4
 849 0006 0446     		mov	r4, r0
 850 0008 1646     		mov	r6, r2
 851 000a 0D46     		mov	r5, r1
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 852              		.loc 1 565 0
 853 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 854 0010 002B     		cmp	r3, #0
 855 0012 33D0     		beq	.L66
 856              	.LVL57:
 857              	.L60:
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 858              		.loc 1 586 0
 859 0014 2423     		movs	r3, #36
 860 0016 84F83930 		strb	r3, [r4, #57]
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 861              		.loc 1 589 0
 862 001a 2268     		ldr	r2, [r4]
 863 001c D368     		ldr	r3, [r2, #12]
 864 001e 23F40053 		bic	r3, r3, #8192
 865 0022 D360     		str	r3, [r2, #12]
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 866              		.loc 1 592 0
 867 0024 2046     		mov	r0, r4
 868 0026 FFF7FEFF 		bl	UART_SetConfig
 869              	.LVL58:
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 870              		.loc 1 597 0
 871 002a 2268     		ldr	r2, [r4]
 872 002c 1369     		ldr	r3, [r2, #16]
 873 002e 23F49043 		bic	r3, r3, #18432
 874 0032 1361     		str	r3, [r2, #16]
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 875              		.loc 1 598 0
 876 0034 2268     		ldr	r2, [r4]
 877 0036 5369     		ldr	r3, [r2, #20]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 73


 878 0038 23F02A03 		bic	r3, r3, #42
 879 003c 5361     		str	r3, [r2, #20]
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 880              		.loc 1 601 0
 881 003e 2268     		ldr	r2, [r4]
 882 0040 1369     		ldr	r3, [r2, #16]
 883 0042 23F00F03 		bic	r3, r3, #15
 884 0046 1361     		str	r3, [r2, #16]
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 885              		.loc 1 602 0
 886 0048 2368     		ldr	r3, [r4]
 887 004a 1969     		ldr	r1, [r3, #16]
 888 004c 0D43     		orrs	r5, r5, r1
 889 004e 1D61     		str	r5, [r3, #16]
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 890              		.loc 1 605 0
 891 0050 2268     		ldr	r2, [r4]
 892 0052 D368     		ldr	r3, [r2, #12]
 893 0054 23F40063 		bic	r3, r3, #2048
 894 0058 D360     		str	r3, [r2, #12]
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 895              		.loc 1 606 0
 896 005a 2168     		ldr	r1, [r4]
 897 005c CB68     		ldr	r3, [r1, #12]
 898 005e 3343     		orrs	r3, r3, r6
 899 0060 CB60     		str	r3, [r1, #12]
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 900              		.loc 1 609 0
 901 0062 2268     		ldr	r2, [r4]
 902 0064 D368     		ldr	r3, [r2, #12]
 903 0066 43F40053 		orr	r3, r3, #8192
 904 006a D360     		str	r3, [r2, #12]
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 905              		.loc 1 612 0
 906 006c 0020     		movs	r0, #0
 907 006e E063     		str	r0, [r4, #60]
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 908              		.loc 1 613 0
 909 0070 2023     		movs	r3, #32
 910 0072 84F83930 		strb	r3, [r4, #57]
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 911              		.loc 1 614 0
 912 0076 84F83A30 		strb	r3, [r4, #58]
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 913              		.loc 1 617 0
 914 007a 70BD     		pop	{r4, r5, r6, pc}
 915              	.LVL59:
 916              	.L66:
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 917              		.loc 1 568 0
 918 007c 80F83830 		strb	r3, [r0, #56]
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 919              		.loc 1 582 0
 920 0080 FFF7FEFF 		bl	HAL_UART_MspInit
 921              	.LVL60:
 922 0084 C6E7     		b	.L60
 923              	.LVL61:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 74


 924              	.L61:
 925              	.LCFI9:
 926              		.cfi_def_cfa_offset 0
 927              		.cfi_restore 4
 928              		.cfi_restore 5
 929              		.cfi_restore 6
 930              		.cfi_restore 14
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 931              		.loc 1 553 0
 932 0086 0120     		movs	r0, #1
 933              	.LVL62:
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 934              		.loc 1 617 0
 935 0088 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE133:
 939              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 940              		.align	1
 941              		.weak	HAL_UART_MspDeInit
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu fpv4-sp-d16
 947              	HAL_UART_MspDeInit:
 948              	.LFB136:
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 949              		.loc 1 685 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 0
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953              		@ link register save eliminated.
 954              	.LVL63:
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 955              		.loc 1 691 0
 956 0000 7047     		bx	lr
 957              		.cfi_endproc
 958              	.LFE136:
 960              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 961              		.align	1
 962              		.global	HAL_UART_DeInit
 963              		.syntax unified
 964              		.thumb
 965              		.thumb_func
 966              		.fpu fpv4-sp-d16
 968              	HAL_UART_DeInit:
 969              	.LFB134:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 970              		.loc 1 626 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974              	.LVL64:
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 975              		.loc 1 628 0
 976 0000 A0B1     		cbz	r0, .L70
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 977              		.loc 1 626 0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 75


 978 0002 10B5     		push	{r4, lr}
 979              	.LCFI10:
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 4, -8
 982              		.cfi_offset 14, -4
 983 0004 0446     		mov	r4, r0
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 984              		.loc 1 636 0
 985 0006 2423     		movs	r3, #36
 986 0008 80F83930 		strb	r3, [r0, #57]
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 987              		.loc 1 639 0
 988 000c 0268     		ldr	r2, [r0]
 989 000e D368     		ldr	r3, [r2, #12]
 990 0010 23F40053 		bic	r3, r3, #8192
 991 0014 D360     		str	r3, [r2, #12]
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 992              		.loc 1 650 0
 993 0016 FFF7FEFF 		bl	HAL_UART_MspDeInit
 994              	.LVL65:
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 995              		.loc 1 653 0
 996 001a 0020     		movs	r0, #0
 997 001c E063     		str	r0, [r4, #60]
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 998              		.loc 1 654 0
 999 001e 84F83900 		strb	r0, [r4, #57]
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1000              		.loc 1 655 0
 1001 0022 84F83A00 		strb	r0, [r4, #58]
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1002              		.loc 1 658 0
 1003 0026 84F83800 		strb	r0, [r4, #56]
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1004              		.loc 1 661 0
 1005 002a 10BD     		pop	{r4, pc}
 1006              	.LVL66:
 1007              	.L70:
 1008              	.LCFI11:
 1009              		.cfi_def_cfa_offset 0
 1010              		.cfi_restore 4
 1011              		.cfi_restore 14
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1012              		.loc 1 630 0
 1013 002c 0120     		movs	r0, #1
 1014              	.LVL67:
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1015              		.loc 1 661 0
 1016 002e 7047     		bx	lr
 1017              		.cfi_endproc
 1018              	.LFE134:
 1020              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1021              		.align	1
 1022              		.global	HAL_UART_Transmit
 1023              		.syntax unified
 1024              		.thumb
 1025              		.thumb_func
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 76


 1026              		.fpu fpv4-sp-d16
 1028              	HAL_UART_Transmit:
 1029              	.LFB137:
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
 1030              		.loc 1 1025 0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034              	.LVL68:
 1035 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1036              	.LCFI12:
 1037              		.cfi_def_cfa_offset 28
 1038              		.cfi_offset 4, -28
 1039              		.cfi_offset 5, -24
 1040              		.cfi_offset 6, -20
 1041              		.cfi_offset 7, -16
 1042              		.cfi_offset 8, -12
 1043              		.cfi_offset 9, -8
 1044              		.cfi_offset 14, -4
 1045 0004 83B0     		sub	sp, sp, #12
 1046              	.LCFI13:
 1047              		.cfi_def_cfa_offset 40
 1048 0006 1E46     		mov	r6, r3
 1049              	.LVL69:
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1050              		.loc 1 1030 0
 1051 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1052              	.LVL70:
 1053 000c DBB2     		uxtb	r3, r3
 1054 000e 202B     		cmp	r3, #32
 1055 0010 56D1     		bne	.L82
 1056 0012 0446     		mov	r4, r0
 1057 0014 0D46     		mov	r5, r1
 1058 0016 9046     		mov	r8, r2
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1059              		.loc 1 1032 0
 1060 0018 0029     		cmp	r1, #0
 1061 001a 56D0     		beq	.L83
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1062              		.loc 1 1032 0 is_stmt 0 discriminator 1
 1063 001c 002A     		cmp	r2, #0
 1064 001e 56D0     		beq	.L84
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1065              		.loc 1 1038 0 is_stmt 1
 1066 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1067 0024 012B     		cmp	r3, #1
 1068 0026 54D0     		beq	.L85
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1069              		.loc 1 1038 0 is_stmt 0 discriminator 2
 1070 0028 0123     		movs	r3, #1
 1071 002a 80F83830 		strb	r3, [r0, #56]
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1072              		.loc 1 1040 0 is_stmt 1 discriminator 2
 1073 002e 4FF00009 		mov	r9, #0
 1074 0032 C0F83C90 		str	r9, [r0, #60]
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1075              		.loc 1 1041 0 discriminator 2
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 77


 1076 0036 2123     		movs	r3, #33
 1077 0038 80F83930 		strb	r3, [r0, #57]
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1078              		.loc 1 1044 0 discriminator 2
 1079 003c FFF7FEFF 		bl	HAL_GetTick
 1080              	.LVL71:
 1081 0040 0746     		mov	r7, r0
 1082              	.LVL72:
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1083              		.loc 1 1046 0 discriminator 2
 1084 0042 A4F82480 		strh	r8, [r4, #36]	@ movhi
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1085              		.loc 1 1047 0 discriminator 2
 1086 0046 A4F82680 		strh	r8, [r4, #38]	@ movhi
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1087              		.loc 1 1050 0 discriminator 2
 1088 004a 84F83890 		strb	r9, [r4, #56]
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1089              		.loc 1 1052 0 discriminator 2
 1090 004e 10E0     		b	.L77
 1091              	.LVL73:
 1092              	.L91:
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1093              		.loc 1 1057 0
 1094 0050 0096     		str	r6, [sp]
 1095 0052 3B46     		mov	r3, r7
 1096 0054 0022     		movs	r2, #0
 1097 0056 8021     		movs	r1, #128
 1098 0058 2046     		mov	r0, r4
 1099 005a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1100              	.LVL74:
 1101 005e 0028     		cmp	r0, #0
 1102 0060 39D1     		bne	.L86
 1103              	.LVL75:
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1104              		.loc 1 1062 0
 1105 0062 2B88     		ldrh	r3, [r5]
 1106 0064 2268     		ldr	r2, [r4]
 1107 0066 C3F30803 		ubfx	r3, r3, #0, #9
 1108 006a 5360     		str	r3, [r2, #4]
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1109              		.loc 1 1063 0
 1110 006c 2369     		ldr	r3, [r4, #16]
 1111 006e C3B9     		cbnz	r3, .L79
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1112              		.loc 1 1065 0
 1113 0070 0235     		adds	r5, r5, #2
 1114              	.LVL76:
 1115              	.L77:
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1116              		.loc 1 1052 0
 1117 0072 E38C     		ldrh	r3, [r4, #38]
 1118 0074 9BB2     		uxth	r3, r3
 1119 0076 B3B1     		cbz	r3, .L90
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 1120              		.loc 1 1054 0
 1121 0078 E38C     		ldrh	r3, [r4, #38]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 78


 1122 007a 013B     		subs	r3, r3, #1
 1123 007c 9BB2     		uxth	r3, r3
 1124 007e E384     		strh	r3, [r4, #38]	@ movhi
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1125              		.loc 1 1055 0
 1126 0080 A368     		ldr	r3, [r4, #8]
 1127 0082 B3F5805F 		cmp	r3, #4096
 1128 0086 E3D0     		beq	.L91
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1129              		.loc 1 1074 0
 1130 0088 0096     		str	r6, [sp]
 1131 008a 3B46     		mov	r3, r7
 1132 008c 0022     		movs	r2, #0
 1133 008e 8021     		movs	r1, #128
 1134 0090 2046     		mov	r0, r4
 1135 0092 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1136              	.LVL77:
 1137 0096 00BB     		cbnz	r0, .L87
 1138              	.LVL78:
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 1139              		.loc 1 1078 0
 1140 0098 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1141 009a 2368     		ldr	r3, [r4]
 1142 009c 5A60     		str	r2, [r3, #4]
 1143 009e 0135     		adds	r5, r5, #1
 1144              	.LVL79:
 1145 00a0 E7E7     		b	.L77
 1146              	.LVL80:
 1147              	.L79:
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1148              		.loc 1 1069 0
 1149 00a2 0135     		adds	r5, r5, #1
 1150              	.LVL81:
 1151 00a4 E5E7     		b	.L77
 1152              	.LVL82:
 1153              	.L90:
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1154              		.loc 1 1082 0
 1155 00a6 0096     		str	r6, [sp]
 1156 00a8 3B46     		mov	r3, r7
 1157 00aa 0022     		movs	r2, #0
 1158 00ac 4021     		movs	r1, #64
 1159 00ae 2046     		mov	r0, r4
 1160 00b0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1161              	.LVL83:
 1162 00b4 0346     		mov	r3, r0
 1163 00b6 90B9     		cbnz	r0, .L88
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1164              		.loc 1 1088 0
 1165 00b8 2022     		movs	r2, #32
 1166 00ba 84F83920 		strb	r2, [r4, #57]
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1167              		.loc 1 1090 0
 1168 00be 00E0     		b	.L76
 1169              	.LVL84:
 1170              	.L82:
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 79


 1171              		.loc 1 1094 0
 1172 00c0 0223     		movs	r3, #2
 1173              	.LVL85:
 1174              	.L76:
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1175              		.loc 1 1096 0
 1176 00c2 1846     		mov	r0, r3
 1177 00c4 03B0     		add	sp, sp, #12
 1178              	.LCFI14:
 1179              		.cfi_remember_state
 1180              		.cfi_def_cfa_offset 28
 1181              		@ sp needed
 1182 00c6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1183              	.LVL86:
 1184              	.L83:
 1185              	.LCFI15:
 1186              		.cfi_restore_state
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1187              		.loc 1 1034 0
 1188 00ca 0123     		movs	r3, #1
 1189 00cc F9E7     		b	.L76
 1190              	.L84:
 1191 00ce 0123     		movs	r3, #1
 1192 00d0 F7E7     		b	.L76
 1193              	.L85:
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1194              		.loc 1 1038 0
 1195 00d2 0223     		movs	r3, #2
 1196 00d4 F5E7     		b	.L76
 1197              	.LVL87:
 1198              	.L86:
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1199              		.loc 1 1059 0
 1200 00d6 0323     		movs	r3, #3
 1201 00d8 F3E7     		b	.L76
 1202              	.L87:
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1203              		.loc 1 1076 0
 1204 00da 0323     		movs	r3, #3
 1205 00dc F1E7     		b	.L76
 1206              	.L88:
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1207              		.loc 1 1084 0
 1208 00de 0323     		movs	r3, #3
 1209 00e0 EFE7     		b	.L76
 1210              		.cfi_endproc
 1211              	.LFE137:
 1213              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1214              		.align	1
 1215              		.global	HAL_UART_Receive
 1216              		.syntax unified
 1217              		.thumb
 1218              		.thumb_func
 1219              		.fpu fpv4-sp-d16
 1221              	HAL_UART_Receive:
 1222              	.LFB138:
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 80


 1223              		.loc 1 1111 0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 0
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
 1227              	.LVL88:
 1228 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1229              	.LCFI16:
 1230              		.cfi_def_cfa_offset 28
 1231              		.cfi_offset 4, -28
 1232              		.cfi_offset 5, -24
 1233              		.cfi_offset 6, -20
 1234              		.cfi_offset 7, -16
 1235              		.cfi_offset 8, -12
 1236              		.cfi_offset 9, -8
 1237              		.cfi_offset 14, -4
 1238 0004 83B0     		sub	sp, sp, #12
 1239              	.LCFI17:
 1240              		.cfi_def_cfa_offset 40
 1241 0006 1E46     		mov	r6, r3
 1242              	.LVL89:
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1243              		.loc 1 1116 0
 1244 0008 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1245              	.LVL90:
 1246 000c DBB2     		uxtb	r3, r3
 1247 000e 202B     		cmp	r3, #32
 1248 0010 5CD1     		bne	.L100
 1249 0012 0446     		mov	r4, r0
 1250 0014 0D46     		mov	r5, r1
 1251 0016 9046     		mov	r8, r2
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1252              		.loc 1 1118 0
 1253 0018 0029     		cmp	r1, #0
 1254 001a 5BD0     		beq	.L101
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1255              		.loc 1 1118 0 is_stmt 0 discriminator 1
 1256 001c 002A     		cmp	r2, #0
 1257 001e 5BD0     		beq	.L102
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1258              		.loc 1 1124 0 is_stmt 1
 1259 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1260 0024 012B     		cmp	r3, #1
 1261 0026 59D0     		beq	.L103
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1262              		.loc 1 1124 0 is_stmt 0 discriminator 2
 1263 0028 0123     		movs	r3, #1
 1264 002a 80F83830 		strb	r3, [r0, #56]
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1265              		.loc 1 1126 0 is_stmt 1 discriminator 2
 1266 002e 4FF00009 		mov	r9, #0
 1267 0032 C0F83C90 		str	r9, [r0, #60]
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1268              		.loc 1 1127 0 discriminator 2
 1269 0036 2223     		movs	r3, #34
 1270 0038 80F83A30 		strb	r3, [r0, #58]
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1271              		.loc 1 1130 0 discriminator 2
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 81


 1272 003c FFF7FEFF 		bl	HAL_GetTick
 1273              	.LVL91:
 1274 0040 0746     		mov	r7, r0
 1275              	.LVL92:
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1276              		.loc 1 1132 0 discriminator 2
 1277 0042 A4F82C80 		strh	r8, [r4, #44]	@ movhi
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1278              		.loc 1 1133 0 discriminator 2
 1279 0046 A4F82E80 		strh	r8, [r4, #46]	@ movhi
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1280              		.loc 1 1136 0 discriminator 2
 1281 004a 84F83890 		strb	r9, [r4, #56]
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1282              		.loc 1 1139 0 discriminator 2
 1283 004e 1DE0     		b	.L94
 1284              	.LVL93:
 1285              	.L108:
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1286              		.loc 1 1144 0
 1287 0050 0096     		str	r6, [sp]
 1288 0052 3B46     		mov	r3, r7
 1289 0054 0022     		movs	r2, #0
 1290 0056 2021     		movs	r1, #32
 1291 0058 2046     		mov	r0, r4
 1292 005a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1293              	.LVL94:
 1294 005e 0028     		cmp	r0, #0
 1295 0060 3ED1     		bne	.L104
 1296              	.LVL95:
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1297              		.loc 1 1149 0
 1298 0062 2369     		ldr	r3, [r4, #16]
 1299 0064 33B9     		cbnz	r3, .L96
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
 1300              		.loc 1 1151 0
 1301 0066 2368     		ldr	r3, [r4]
 1302 0068 5B68     		ldr	r3, [r3, #4]
 1303 006a C3F30803 		ubfx	r3, r3, #0, #9
 1304 006e 25F8023B 		strh	r3, [r5], #2	@ movhi
 1305              	.LVL96:
 1306 0072 0BE0     		b	.L94
 1307              	.LVL97:
 1308              	.L96:
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
 1309              		.loc 1 1156 0
 1310 0074 2368     		ldr	r3, [r4]
 1311 0076 5B68     		ldr	r3, [r3, #4]
 1312 0078 DBB2     		uxtb	r3, r3
 1313 007a 25F8013B 		strh	r3, [r5], #1	@ movhi
 1314              	.LVL98:
 1315 007e 05E0     		b	.L94
 1316              	.LVL99:
 1317              	.L98:
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1318              		.loc 1 1173 0
 1319 0080 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 82


 1320 0082 5B68     		ldr	r3, [r3, #4]
 1321              	.LVL100:
 1322 0084 03F07F03 		and	r3, r3, #127
 1323 0088 2B70     		strb	r3, [r5]
 1324 008a 0135     		adds	r5, r5, #1
 1325              	.LVL101:
 1326              	.L94:
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1327              		.loc 1 1139 0
 1328 008c E38D     		ldrh	r3, [r4, #46]
 1329 008e 9BB2     		uxth	r3, r3
 1330 0090 BBB1     		cbz	r3, .L107
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 1331              		.loc 1 1141 0
 1332 0092 E38D     		ldrh	r3, [r4, #46]
 1333 0094 013B     		subs	r3, r3, #1
 1334 0096 9BB2     		uxth	r3, r3
 1335 0098 E385     		strh	r3, [r4, #46]	@ movhi
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1336              		.loc 1 1142 0
 1337 009a A368     		ldr	r3, [r4, #8]
 1338 009c B3F5805F 		cmp	r3, #4096
 1339 00a0 D6D0     		beq	.L108
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1340              		.loc 1 1163 0
 1341 00a2 0096     		str	r6, [sp]
 1342 00a4 3B46     		mov	r3, r7
 1343 00a6 0022     		movs	r2, #0
 1344 00a8 2021     		movs	r1, #32
 1345 00aa 2046     		mov	r0, r4
 1346 00ac FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1347              	.LVL102:
 1348 00b0 C0B9     		cbnz	r0, .L105
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1349              		.loc 1 1167 0
 1350 00b2 2369     		ldr	r3, [r4, #16]
 1351 00b4 002B     		cmp	r3, #0
 1352 00b6 E3D1     		bne	.L98
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1353              		.loc 1 1169 0
 1354 00b8 2368     		ldr	r3, [r4]
 1355 00ba 5B68     		ldr	r3, [r3, #4]
 1356              	.LVL103:
 1357 00bc 2B70     		strb	r3, [r5]
 1358 00be 0135     		adds	r5, r5, #1
 1359              	.LVL104:
 1360 00c0 E4E7     		b	.L94
 1361              	.L107:
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1362              		.loc 1 1180 0
 1363 00c2 2023     		movs	r3, #32
 1364 00c4 84F83A30 		strb	r3, [r4, #58]
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1365              		.loc 1 1182 0
 1366 00c8 0020     		movs	r0, #0
 1367 00ca 00E0     		b	.L93
 1368              	.LVL105:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 83


 1369              	.L100:
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1370              		.loc 1 1186 0
 1371 00cc 0220     		movs	r0, #2
 1372              	.LVL106:
 1373              	.L93:
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1374              		.loc 1 1188 0
 1375 00ce 03B0     		add	sp, sp, #12
 1376              	.LCFI18:
 1377              		.cfi_remember_state
 1378              		.cfi_def_cfa_offset 28
 1379              		@ sp needed
 1380 00d0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1381              	.LVL107:
 1382              	.L101:
 1383              	.LCFI19:
 1384              		.cfi_restore_state
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1385              		.loc 1 1120 0
 1386 00d4 0120     		movs	r0, #1
 1387              	.LVL108:
 1388 00d6 FAE7     		b	.L93
 1389              	.LVL109:
 1390              	.L102:
 1391 00d8 0120     		movs	r0, #1
 1392              	.LVL110:
 1393 00da F8E7     		b	.L93
 1394              	.LVL111:
 1395              	.L103:
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1396              		.loc 1 1124 0
 1397 00dc 0220     		movs	r0, #2
 1398              	.LVL112:
 1399 00de F6E7     		b	.L93
 1400              	.LVL113:
 1401              	.L104:
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1402              		.loc 1 1146 0
 1403 00e0 0320     		movs	r0, #3
 1404 00e2 F4E7     		b	.L93
 1405              	.L105:
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1406              		.loc 1 1165 0
 1407 00e4 0320     		movs	r0, #3
 1408 00e6 F2E7     		b	.L93
 1409              		.cfi_endproc
 1410              	.LFE138:
 1412              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1413              		.align	1
 1414              		.global	HAL_UART_Transmit_IT
 1415              		.syntax unified
 1416              		.thumb
 1417              		.thumb_func
 1418              		.fpu fpv4-sp-d16
 1420              	HAL_UART_Transmit_IT:
 1421              	.LFB139:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 84


1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1422              		.loc 1 1202 0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 0
 1425              		@ frame_needed = 0, uses_anonymous_args = 0
 1426              		@ link register save eliminated.
 1427              	.LVL114:
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1428              		.loc 1 1204 0
 1429 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1430 0004 DBB2     		uxtb	r3, r3
 1431 0006 202B     		cmp	r3, #32
 1432 0008 16D1     		bne	.L111
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1433              		.loc 1 1206 0
 1434 000a B9B1     		cbz	r1, .L112
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1435              		.loc 1 1206 0 is_stmt 0 discriminator 1
 1436 000c C2B1     		cbz	r2, .L113
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1437              		.loc 1 1212 0 is_stmt 1
 1438 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1439 0012 012B     		cmp	r3, #1
 1440 0014 16D0     		beq	.L114
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1441              		.loc 1 1214 0 discriminator 2
 1442 0016 0162     		str	r1, [r0, #32]
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1443              		.loc 1 1215 0 discriminator 2
 1444 0018 8284     		strh	r2, [r0, #36]	@ movhi
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1445              		.loc 1 1216 0 discriminator 2
 1446 001a C284     		strh	r2, [r0, #38]	@ movhi
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1447              		.loc 1 1218 0 discriminator 2
 1448 001c 0023     		movs	r3, #0
 1449 001e C363     		str	r3, [r0, #60]
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1450              		.loc 1 1219 0 discriminator 2
 1451 0020 2122     		movs	r2, #33
 1452              	.LVL115:
 1453 0022 80F83920 		strb	r2, [r0, #57]
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1454              		.loc 1 1222 0 discriminator 2
 1455 0026 80F83830 		strb	r3, [r0, #56]
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1456              		.loc 1 1225 0 discriminator 2
 1457 002a 0168     		ldr	r1, [r0]
 1458              	.LVL116:
 1459 002c CA68     		ldr	r2, [r1, #12]
 1460 002e 42F08002 		orr	r2, r2, #128
 1461 0032 CA60     		str	r2, [r1, #12]
 1462              	.LVL117:
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1463              		.loc 1 1227 0 discriminator 2
 1464 0034 1846     		mov	r0, r3
 1465              	.LVL118:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 85


 1466 0036 7047     		bx	lr
 1467              	.LVL119:
 1468              	.L111:
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1469              		.loc 1 1231 0
 1470 0038 0220     		movs	r0, #2
 1471              	.LVL120:
 1472 003a 7047     		bx	lr
 1473              	.LVL121:
 1474              	.L112:
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1475              		.loc 1 1208 0
 1476 003c 0120     		movs	r0, #1
 1477              	.LVL122:
 1478 003e 7047     		bx	lr
 1479              	.LVL123:
 1480              	.L113:
 1481 0040 0120     		movs	r0, #1
 1482              	.LVL124:
 1483 0042 7047     		bx	lr
 1484              	.LVL125:
 1485              	.L114:
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1486              		.loc 1 1212 0
 1487 0044 0220     		movs	r0, #2
 1488              	.LVL126:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1489              		.loc 1 1233 0
 1490 0046 7047     		bx	lr
 1491              		.cfi_endproc
 1492              	.LFE139:
 1494              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1495              		.align	1
 1496              		.global	HAL_UART_Receive_IT
 1497              		.syntax unified
 1498              		.thumb
 1499              		.thumb_func
 1500              		.fpu fpv4-sp-d16
 1502              	HAL_UART_Receive_IT:
 1503              	.LFB140:
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 1504              		.loc 1 1247 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 0
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508              		@ link register save eliminated.
 1509              	.LVL127:
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1510              		.loc 1 1249 0
 1511 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1512 0004 DBB2     		uxtb	r3, r3
 1513 0006 202B     		cmp	r3, #32
 1514 0008 20D1     		bne	.L117
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1515              		.loc 1 1251 0
 1516 000a 09B3     		cbz	r1, .L118
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 86


 1517              		.loc 1 1251 0 is_stmt 0 discriminator 1
 1518 000c 12B3     		cbz	r2, .L119
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1519              		.loc 1 1257 0 is_stmt 1
 1520 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1521 0012 012B     		cmp	r3, #1
 1522 0014 20D0     		beq	.L120
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1523              		.loc 1 1259 0 discriminator 2
 1524 0016 8162     		str	r1, [r0, #40]
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1525              		.loc 1 1260 0 discriminator 2
 1526 0018 8285     		strh	r2, [r0, #44]	@ movhi
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1527              		.loc 1 1261 0 discriminator 2
 1528 001a C285     		strh	r2, [r0, #46]	@ movhi
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1529              		.loc 1 1263 0 discriminator 2
 1530 001c 0023     		movs	r3, #0
 1531 001e C363     		str	r3, [r0, #60]
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1532              		.loc 1 1264 0 discriminator 2
 1533 0020 2222     		movs	r2, #34
 1534              	.LVL128:
 1535 0022 80F83A20 		strb	r2, [r0, #58]
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1536              		.loc 1 1267 0 discriminator 2
 1537 0026 80F83830 		strb	r3, [r0, #56]
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1538              		.loc 1 1270 0 discriminator 2
 1539 002a 0168     		ldr	r1, [r0]
 1540              	.LVL129:
 1541 002c CA68     		ldr	r2, [r1, #12]
 1542 002e 42F48072 		orr	r2, r2, #256
 1543 0032 CA60     		str	r2, [r1, #12]
 1544              	.LVL130:
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1545              		.loc 1 1273 0 discriminator 2
 1546 0034 0168     		ldr	r1, [r0]
 1547 0036 4A69     		ldr	r2, [r1, #20]
 1548 0038 42F00102 		orr	r2, r2, #1
 1549 003c 4A61     		str	r2, [r1, #20]
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1550              		.loc 1 1276 0 discriminator 2
 1551 003e 0168     		ldr	r1, [r0]
 1552 0040 CA68     		ldr	r2, [r1, #12]
 1553 0042 42F02002 		orr	r2, r2, #32
 1554 0046 CA60     		str	r2, [r1, #12]
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1555              		.loc 1 1278 0 discriminator 2
 1556 0048 1846     		mov	r0, r3
 1557              	.LVL131:
 1558 004a 7047     		bx	lr
 1559              	.LVL132:
 1560              	.L117:
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1561              		.loc 1 1282 0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 87


 1562 004c 0220     		movs	r0, #2
 1563              	.LVL133:
 1564 004e 7047     		bx	lr
 1565              	.LVL134:
 1566              	.L118:
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1567              		.loc 1 1253 0
 1568 0050 0120     		movs	r0, #1
 1569              	.LVL135:
 1570 0052 7047     		bx	lr
 1571              	.LVL136:
 1572              	.L119:
 1573 0054 0120     		movs	r0, #1
 1574              	.LVL137:
 1575 0056 7047     		bx	lr
 1576              	.LVL138:
 1577              	.L120:
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1578              		.loc 1 1257 0
 1579 0058 0220     		movs	r0, #2
 1580              	.LVL139:
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1581              		.loc 1 1284 0
 1582 005a 7047     		bx	lr
 1583              		.cfi_endproc
 1584              	.LFE140:
 1586              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1587              		.align	1
 1588              		.global	HAL_UART_Transmit_DMA
 1589              		.syntax unified
 1590              		.thumb
 1591              		.thumb_func
 1592              		.fpu fpv4-sp-d16
 1594              	HAL_UART_Transmit_DMA:
 1595              	.LFB141:
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 1596              		.loc 1 1298 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 0
 1599              		@ frame_needed = 0, uses_anonymous_args = 0
 1600              	.LVL140:
 1601 0000 38B5     		push	{r3, r4, r5, lr}
 1602              	.LCFI20:
 1603              		.cfi_def_cfa_offset 16
 1604              		.cfi_offset 3, -16
 1605              		.cfi_offset 4, -12
 1606              		.cfi_offset 5, -8
 1607              		.cfi_offset 14, -4
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1608              		.loc 1 1302 0
 1609 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1610 0006 E4B2     		uxtb	r4, r4
 1611 0008 202C     		cmp	r4, #32
 1612 000a 31D1     		bne	.L123
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1613              		.loc 1 1304 0
 1614 000c 0029     		cmp	r1, #0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 88


 1615 000e 31D0     		beq	.L124
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1616              		.loc 1 1304 0 is_stmt 0 discriminator 1
 1617 0010 002A     		cmp	r2, #0
 1618 0012 31D0     		beq	.L125
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1619              		.loc 1 1310 0 is_stmt 1
 1620 0014 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1621 0018 012B     		cmp	r3, #1
 1622 001a 2FD0     		beq	.L126
 1623 001c 1346     		mov	r3, r2
 1624 001e 0446     		mov	r4, r0
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1625              		.loc 1 1310 0 is_stmt 0 discriminator 2
 1626 0020 0122     		movs	r2, #1
 1627              	.LVL141:
 1628 0022 80F83820 		strb	r2, [r0, #56]
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1629              		.loc 1 1312 0 is_stmt 1 discriminator 2
 1630 0026 0162     		str	r1, [r0, #32]
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1631              		.loc 1 1313 0 discriminator 2
 1632 0028 8384     		strh	r3, [r0, #36]	@ movhi
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1633              		.loc 1 1314 0 discriminator 2
 1634 002a C384     		strh	r3, [r0, #38]	@ movhi
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1635              		.loc 1 1316 0 discriminator 2
 1636 002c 0025     		movs	r5, #0
 1637 002e C563     		str	r5, [r0, #60]
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1638              		.loc 1 1317 0 discriminator 2
 1639 0030 2122     		movs	r2, #33
 1640 0032 80F83920 		strb	r2, [r0, #57]
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1641              		.loc 1 1320 0 discriminator 2
 1642 0036 026B     		ldr	r2, [r0, #48]
 1643 0038 1148     		ldr	r0, .L128
 1644              	.LVL142:
 1645 003a D063     		str	r0, [r2, #60]
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1646              		.loc 1 1323 0 discriminator 2
 1647 003c 226B     		ldr	r2, [r4, #48]
 1648 003e 1148     		ldr	r0, .L128+4
 1649 0040 1064     		str	r0, [r2, #64]
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1650              		.loc 1 1326 0 discriminator 2
 1651 0042 226B     		ldr	r2, [r4, #48]
 1652 0044 1048     		ldr	r0, .L128+8
 1653 0046 D064     		str	r0, [r2, #76]
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1654              		.loc 1 1329 0 discriminator 2
 1655 0048 226B     		ldr	r2, [r4, #48]
 1656 004a 1565     		str	r5, [r2, #80]
 1657              	.LVL143:
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1658              		.loc 1 1333 0 discriminator 2
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 89


 1659 004c 2268     		ldr	r2, [r4]
 1660 004e 0432     		adds	r2, r2, #4
 1661 0050 206B     		ldr	r0, [r4, #48]
 1662 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1663              	.LVL144:
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1664              		.loc 1 1336 0 discriminator 2
 1665 0056 2368     		ldr	r3, [r4]
 1666 0058 6FF04002 		mvn	r2, #64
 1667 005c 1A60     		str	r2, [r3]
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1668              		.loc 1 1339 0 discriminator 2
 1669 005e 84F83850 		strb	r5, [r4, #56]
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1670              		.loc 1 1343 0 discriminator 2
 1671 0062 2268     		ldr	r2, [r4]
 1672 0064 5369     		ldr	r3, [r2, #20]
 1673 0066 43F08003 		orr	r3, r3, #128
 1674 006a 5361     		str	r3, [r2, #20]
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1675              		.loc 1 1345 0 discriminator 2
 1676 006c 2846     		mov	r0, r5
 1677 006e 00E0     		b	.L122
 1678              	.LVL145:
 1679              	.L123:
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1680              		.loc 1 1349 0
 1681 0070 0220     		movs	r0, #2
 1682              	.LVL146:
 1683              	.L122:
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1684              		.loc 1 1351 0
 1685 0072 38BD     		pop	{r3, r4, r5, pc}
 1686              	.LVL147:
 1687              	.L124:
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1688              		.loc 1 1306 0
 1689 0074 0120     		movs	r0, #1
 1690              	.LVL148:
 1691 0076 FCE7     		b	.L122
 1692              	.LVL149:
 1693              	.L125:
 1694 0078 0120     		movs	r0, #1
 1695              	.LVL150:
 1696 007a FAE7     		b	.L122
 1697              	.LVL151:
 1698              	.L126:
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1699              		.loc 1 1310 0
 1700 007c 0220     		movs	r0, #2
 1701              	.LVL152:
 1702 007e F8E7     		b	.L122
 1703              	.L129:
 1704              		.align	2
 1705              	.L128:
 1706 0080 00000000 		.word	UART_DMATransmitCplt
 1707 0084 00000000 		.word	UART_DMATxHalfCplt
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 90


 1708 0088 00000000 		.word	UART_DMAError
 1709              		.cfi_endproc
 1710              	.LFE141:
 1712              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1713              		.align	1
 1714              		.global	HAL_UART_Receive_DMA
 1715              		.syntax unified
 1716              		.thumb
 1717              		.thumb_func
 1718              		.fpu fpv4-sp-d16
 1720              	HAL_UART_Receive_DMA:
 1721              	.LFB142:
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 1722              		.loc 1 1366 0
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 8
 1725              		@ frame_needed = 0, uses_anonymous_args = 0
 1726              	.LVL153:
 1727 0000 30B5     		push	{r4, r5, lr}
 1728              	.LCFI21:
 1729              		.cfi_def_cfa_offset 12
 1730              		.cfi_offset 4, -12
 1731              		.cfi_offset 5, -8
 1732              		.cfi_offset 14, -4
 1733 0002 83B0     		sub	sp, sp, #12
 1734              	.LCFI22:
 1735              		.cfi_def_cfa_offset 24
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1736              		.loc 1 1370 0
 1737 0004 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 1738 0008 E4B2     		uxtb	r4, r4
 1739 000a 202C     		cmp	r4, #32
 1740 000c 3DD1     		bne	.L132
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1741              		.loc 1 1372 0
 1742 000e 0029     		cmp	r1, #0
 1743 0010 3ED0     		beq	.L133
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1744              		.loc 1 1372 0 is_stmt 0 discriminator 1
 1745 0012 002A     		cmp	r2, #0
 1746 0014 3ED0     		beq	.L134
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1747              		.loc 1 1378 0 is_stmt 1
 1748 0016 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1749 001a 012B     		cmp	r3, #1
 1750 001c 3CD0     		beq	.L135
 1751 001e 1346     		mov	r3, r2
 1752 0020 0A46     		mov	r2, r1
 1753              	.LVL154:
 1754 0022 0446     		mov	r4, r0
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1755              		.loc 1 1378 0 is_stmt 0 discriminator 2
 1756 0024 0121     		movs	r1, #1
 1757              	.LVL155:
 1758 0026 80F83810 		strb	r1, [r0, #56]
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1759              		.loc 1 1380 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 91


 1760 002a 8262     		str	r2, [r0, #40]
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1761              		.loc 1 1381 0 discriminator 2
 1762 002c 8385     		strh	r3, [r0, #44]	@ movhi
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1763              		.loc 1 1383 0 discriminator 2
 1764 002e 0025     		movs	r5, #0
 1765 0030 C563     		str	r5, [r0, #60]
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1766              		.loc 1 1384 0 discriminator 2
 1767 0032 2221     		movs	r1, #34
 1768 0034 80F83A10 		strb	r1, [r0, #58]
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1769              		.loc 1 1387 0 discriminator 2
 1770 0038 416B     		ldr	r1, [r0, #52]
 1771 003a 1848     		ldr	r0, .L137
 1772              	.LVL156:
 1773 003c C863     		str	r0, [r1, #60]
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1774              		.loc 1 1390 0 discriminator 2
 1775 003e 616B     		ldr	r1, [r4, #52]
 1776 0040 1748     		ldr	r0, .L137+4
 1777 0042 0864     		str	r0, [r1, #64]
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1778              		.loc 1 1393 0 discriminator 2
 1779 0044 616B     		ldr	r1, [r4, #52]
 1780 0046 1748     		ldr	r0, .L137+8
 1781 0048 C864     		str	r0, [r1, #76]
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1782              		.loc 1 1396 0 discriminator 2
 1783 004a 616B     		ldr	r1, [r4, #52]
 1784 004c 0D65     		str	r5, [r1, #80]
 1785              	.LVL157:
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1786              		.loc 1 1400 0 discriminator 2
 1787 004e 2168     		ldr	r1, [r4]
 1788 0050 0431     		adds	r1, r1, #4
 1789 0052 606B     		ldr	r0, [r4, #52]
 1790 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1791              	.LVL158:
 1792              	.LBB2:
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1793              		.loc 1 1403 0 discriminator 2
 1794 0058 0195     		str	r5, [sp, #4]
 1795 005a 2368     		ldr	r3, [r4]
 1796 005c 1A68     		ldr	r2, [r3]
 1797 005e 0192     		str	r2, [sp, #4]
 1798 0060 5A68     		ldr	r2, [r3, #4]
 1799 0062 0192     		str	r2, [sp, #4]
 1800 0064 019A     		ldr	r2, [sp, #4]
 1801              	.LBE2:
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1802              		.loc 1 1406 0 discriminator 2
 1803 0066 84F83850 		strb	r5, [r4, #56]
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1804              		.loc 1 1409 0 discriminator 2
 1805 006a DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 92


 1806 006c 42F48072 		orr	r2, r2, #256
 1807 0070 DA60     		str	r2, [r3, #12]
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1808              		.loc 1 1412 0 discriminator 2
 1809 0072 2268     		ldr	r2, [r4]
 1810 0074 5369     		ldr	r3, [r2, #20]
 1811 0076 43F00103 		orr	r3, r3, #1
 1812 007a 5361     		str	r3, [r2, #20]
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1813              		.loc 1 1416 0 discriminator 2
 1814 007c 2268     		ldr	r2, [r4]
 1815 007e 5369     		ldr	r3, [r2, #20]
 1816 0080 43F04003 		orr	r3, r3, #64
 1817 0084 5361     		str	r3, [r2, #20]
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1818              		.loc 1 1418 0 discriminator 2
 1819 0086 2846     		mov	r0, r5
 1820 0088 00E0     		b	.L131
 1821              	.LVL159:
 1822              	.L132:
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1823              		.loc 1 1422 0
 1824 008a 0220     		movs	r0, #2
 1825              	.LVL160:
 1826              	.L131:
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1827              		.loc 1 1424 0
 1828 008c 03B0     		add	sp, sp, #12
 1829              	.LCFI23:
 1830              		.cfi_remember_state
 1831              		.cfi_def_cfa_offset 12
 1832              		@ sp needed
 1833 008e 30BD     		pop	{r4, r5, pc}
 1834              	.LVL161:
 1835              	.L133:
 1836              	.LCFI24:
 1837              		.cfi_restore_state
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1838              		.loc 1 1374 0
 1839 0090 0120     		movs	r0, #1
 1840              	.LVL162:
 1841 0092 FBE7     		b	.L131
 1842              	.LVL163:
 1843              	.L134:
 1844 0094 0120     		movs	r0, #1
 1845              	.LVL164:
 1846 0096 F9E7     		b	.L131
 1847              	.LVL165:
 1848              	.L135:
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1849              		.loc 1 1378 0
 1850 0098 0220     		movs	r0, #2
 1851              	.LVL166:
 1852 009a F7E7     		b	.L131
 1853              	.L138:
 1854              		.align	2
 1855              	.L137:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 93


 1856 009c 00000000 		.word	UART_DMAReceiveCplt
 1857 00a0 00000000 		.word	UART_DMARxHalfCplt
 1858 00a4 00000000 		.word	UART_DMAError
 1859              		.cfi_endproc
 1860              	.LFE142:
 1862              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1863              		.align	1
 1864              		.global	HAL_UART_DMAPause
 1865              		.syntax unified
 1866              		.thumb
 1867              		.thumb_func
 1868              		.fpu fpv4-sp-d16
 1870              	HAL_UART_DMAPause:
 1871              	.LFB143:
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1872              		.loc 1 1433 0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 0
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
 1876              		@ link register save eliminated.
 1877              	.LVL167:
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1878              		.loc 1 1437 0
 1879 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1880 0004 012B     		cmp	r3, #1
 1881 0006 31D0     		beq	.L143
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1882              		.loc 1 1437 0 is_stmt 0 discriminator 2
 1883 0008 0123     		movs	r3, #1
 1884 000a 80F83830 		strb	r3, [r0, #56]
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1885              		.loc 1 1439 0 is_stmt 1 discriminator 2
 1886 000e 0168     		ldr	r1, [r0]
 1887 0010 4A69     		ldr	r2, [r1, #20]
 1888 0012 02F08002 		and	r2, r2, #128
 1889              	.LVL168:
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1890              		.loc 1 1440 0 discriminator 2
 1891 0016 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1892 001a DBB2     		uxtb	r3, r3
 1893 001c 212B     		cmp	r3, #33
 1894 001e 0DD0     		beq	.L144
 1895              	.L141:
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1896              		.loc 1 1446 0
 1897 0020 0168     		ldr	r1, [r0]
 1898 0022 4A69     		ldr	r2, [r1, #20]
 1899              	.LVL169:
 1900 0024 02F04002 		and	r2, r2, #64
 1901              	.LVL170:
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1902              		.loc 1 1447 0
 1903 0028 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1904 002c DBB2     		uxtb	r3, r3
 1905 002e 222B     		cmp	r3, #34
 1906 0030 0BD0     		beq	.L145
 1907              	.LVL171:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 94


 1908              	.L142:
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1909              		.loc 1 1458 0
 1910 0032 0023     		movs	r3, #0
 1911 0034 80F83830 		strb	r3, [r0, #56]
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1912              		.loc 1 1460 0
 1913 0038 1846     		mov	r0, r3
 1914              	.LVL172:
 1915 003a 7047     		bx	lr
 1916              	.LVL173:
 1917              	.L144:
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1918              		.loc 1 1440 0 discriminator 1
 1919 003c 002A     		cmp	r2, #0
 1920 003e EFD0     		beq	.L141
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1921              		.loc 1 1443 0
 1922 0040 4B69     		ldr	r3, [r1, #20]
 1923 0042 23F08003 		bic	r3, r3, #128
 1924 0046 4B61     		str	r3, [r1, #20]
 1925 0048 EAE7     		b	.L141
 1926              	.L145:
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1927              		.loc 1 1447 0 discriminator 1
 1928 004a 002A     		cmp	r2, #0
 1929 004c F1D0     		beq	.L142
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1930              		.loc 1 1450 0
 1931 004e CB68     		ldr	r3, [r1, #12]
 1932 0050 23F48073 		bic	r3, r3, #256
 1933 0054 CB60     		str	r3, [r1, #12]
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1934              		.loc 1 1451 0
 1935 0056 0268     		ldr	r2, [r0]
 1936              	.LVL174:
 1937 0058 5369     		ldr	r3, [r2, #20]
 1938 005a 23F00103 		bic	r3, r3, #1
 1939 005e 5361     		str	r3, [r2, #20]
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1940              		.loc 1 1454 0
 1941 0060 0268     		ldr	r2, [r0]
 1942 0062 5369     		ldr	r3, [r2, #20]
 1943 0064 23F04003 		bic	r3, r3, #64
 1944 0068 5361     		str	r3, [r2, #20]
 1945 006a E2E7     		b	.L142
 1946              	.LVL175:
 1947              	.L143:
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1948              		.loc 1 1437 0
 1949 006c 0220     		movs	r0, #2
 1950              	.LVL176:
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1951              		.loc 1 1461 0
 1952 006e 7047     		bx	lr
 1953              		.cfi_endproc
 1954              	.LFE143:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 95


 1956              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1957              		.align	1
 1958              		.global	HAL_UART_DMAResume
 1959              		.syntax unified
 1960              		.thumb
 1961              		.thumb_func
 1962              		.fpu fpv4-sp-d16
 1964              	HAL_UART_DMAResume:
 1965              	.LFB144:
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 1966              		.loc 1 1470 0
 1967              		.cfi_startproc
 1968              		@ args = 0, pretend = 0, frame = 8
 1969              		@ frame_needed = 0, uses_anonymous_args = 0
 1970              		@ link register save eliminated.
 1971              	.LVL177:
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1972              		.loc 1 1472 0
 1973 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1974 0004 012B     		cmp	r3, #1
 1975 0006 34D0     		beq	.L150
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1976              		.loc 1 1472 0 is_stmt 0 discriminator 2
 1977 0008 0123     		movs	r3, #1
 1978 000a 80F83830 		strb	r3, [r0, #56]
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1979              		.loc 1 1474 0 is_stmt 1 discriminator 2
 1980 000e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1981 0012 DBB2     		uxtb	r3, r3
 1982 0014 212B     		cmp	r3, #33
 1983 0016 09D0     		beq	.L156
 1984              	.L148:
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1985              		.loc 1 1480 0
 1986 0018 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1987 001c DBB2     		uxtb	r3, r3
 1988 001e 222B     		cmp	r3, #34
 1989 0020 0AD0     		beq	.L157
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1990              		.loc 1 1494 0
 1991 0022 0023     		movs	r3, #0
 1992 0024 80F83830 		strb	r3, [r0, #56]
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1993              		.loc 1 1496 0
 1994 0028 1846     		mov	r0, r3
 1995              	.LVL178:
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1996              		.loc 1 1497 0
 1997 002a 7047     		bx	lr
 1998              	.LVL179:
 1999              	.L156:
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2000              		.loc 1 1477 0
 2001 002c 0268     		ldr	r2, [r0]
 2002 002e 5369     		ldr	r3, [r2, #20]
 2003 0030 43F08003 		orr	r3, r3, #128
 2004 0034 5361     		str	r3, [r2, #20]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 96


 2005 0036 EFE7     		b	.L148
 2006              	.L157:
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 2007              		.loc 1 1470 0
 2008 0038 82B0     		sub	sp, sp, #8
 2009              	.LCFI25:
 2010              		.cfi_def_cfa_offset 8
 2011              	.LBB3:
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2012              		.loc 1 1483 0
 2013 003a 0023     		movs	r3, #0
 2014 003c 0193     		str	r3, [sp, #4]
 2015 003e 0368     		ldr	r3, [r0]
 2016 0040 1A68     		ldr	r2, [r3]
 2017 0042 0192     		str	r2, [sp, #4]
 2018 0044 5A68     		ldr	r2, [r3, #4]
 2019 0046 0192     		str	r2, [sp, #4]
 2020 0048 019A     		ldr	r2, [sp, #4]
 2021              	.LBE3:
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2022              		.loc 1 1486 0
 2023 004a DA68     		ldr	r2, [r3, #12]
 2024 004c 42F48072 		orr	r2, r2, #256
 2025 0050 DA60     		str	r2, [r3, #12]
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2026              		.loc 1 1487 0
 2027 0052 0268     		ldr	r2, [r0]
 2028 0054 5369     		ldr	r3, [r2, #20]
 2029 0056 43F00103 		orr	r3, r3, #1
 2030 005a 5361     		str	r3, [r2, #20]
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2031              		.loc 1 1490 0
 2032 005c 0268     		ldr	r2, [r0]
 2033 005e 5369     		ldr	r3, [r2, #20]
 2034 0060 43F04003 		orr	r3, r3, #64
 2035 0064 5361     		str	r3, [r2, #20]
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2036              		.loc 1 1494 0
 2037 0066 0023     		movs	r3, #0
 2038 0068 80F83830 		strb	r3, [r0, #56]
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2039              		.loc 1 1496 0
 2040 006c 1846     		mov	r0, r3
 2041              	.LVL180:
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2042              		.loc 1 1497 0
 2043 006e 02B0     		add	sp, sp, #8
 2044              	.LCFI26:
 2045              		.cfi_def_cfa_offset 0
 2046              		@ sp needed
 2047 0070 7047     		bx	lr
 2048              	.LVL181:
 2049              	.L150:
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2050              		.loc 1 1472 0
 2051 0072 0220     		movs	r0, #2
 2052              	.LVL182:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 97


 2053 0074 7047     		bx	lr
 2054              		.cfi_endproc
 2055              	.LFE144:
 2057              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2058              		.align	1
 2059              		.global	HAL_UART_DMAStop
 2060              		.syntax unified
 2061              		.thumb
 2062              		.thumb_func
 2063              		.fpu fpv4-sp-d16
 2065              	HAL_UART_DMAStop:
 2066              	.LFB145:
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2067              		.loc 1 1506 0
 2068              		.cfi_startproc
 2069              		@ args = 0, pretend = 0, frame = 0
 2070              		@ frame_needed = 0, uses_anonymous_args = 0
 2071              	.LVL183:
 2072 0000 10B5     		push	{r4, lr}
 2073              	.LCFI27:
 2074              		.cfi_def_cfa_offset 8
 2075              		.cfi_offset 4, -8
 2076              		.cfi_offset 14, -4
 2077 0002 0446     		mov	r4, r0
 2078              	.LVL184:
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2079              		.loc 1 1515 0
 2080 0004 0168     		ldr	r1, [r0]
 2081 0006 4A69     		ldr	r2, [r1, #20]
 2082              	.LVL185:
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2083              		.loc 1 1516 0
 2084 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2085 000c DBB2     		uxtb	r3, r3
 2086 000e 212B     		cmp	r3, #33
 2087 0010 0AD0     		beq	.L164
 2088              	.LVL186:
 2089              	.L159:
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2090              		.loc 1 1529 0
 2091 0012 2168     		ldr	r1, [r4]
 2092 0014 4A69     		ldr	r2, [r1, #20]
 2093 0016 02F04002 		and	r2, r2, #64
 2094              	.LVL187:
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2095              		.loc 1 1530 0
 2096 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2097 001e DBB2     		uxtb	r3, r3
 2098 0020 222B     		cmp	r3, #34
 2099 0022 11D0     		beq	.L165
 2100              	.LVL188:
 2101              	.L161:
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2102              		.loc 1 1543 0
 2103 0024 0020     		movs	r0, #0
 2104 0026 10BD     		pop	{r4, pc}
 2105              	.LVL189:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 98


 2106              	.L164:
 2107 0028 02F08002 		and	r2, r2, #128
 2108              	.LVL190:
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2109              		.loc 1 1516 0 discriminator 1
 2110 002c 002A     		cmp	r2, #0
 2111 002e F0D0     		beq	.L159
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2112              		.loc 1 1518 0
 2113 0030 4B69     		ldr	r3, [r1, #20]
 2114 0032 23F08003 		bic	r3, r3, #128
 2115 0036 4B61     		str	r3, [r1, #20]
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2116              		.loc 1 1521 0
 2117 0038 006B     		ldr	r0, [r0, #48]
 2118              	.LVL191:
 2119 003a 08B1     		cbz	r0, .L160
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2120              		.loc 1 1523 0
 2121 003c FFF7FEFF 		bl	HAL_DMA_Abort
 2122              	.LVL192:
 2123              	.L160:
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2124              		.loc 1 1525 0
 2125 0040 2046     		mov	r0, r4
 2126 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 2127              	.LVL193:
 2128 0046 E4E7     		b	.L159
 2129              	.LVL194:
 2130              	.L165:
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2131              		.loc 1 1530 0 discriminator 1
 2132 0048 002A     		cmp	r2, #0
 2133 004a EBD0     		beq	.L161
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2134              		.loc 1 1532 0
 2135 004c 4B69     		ldr	r3, [r1, #20]
 2136 004e 23F04003 		bic	r3, r3, #64
 2137 0052 4B61     		str	r3, [r1, #20]
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2138              		.loc 1 1535 0
 2139 0054 606B     		ldr	r0, [r4, #52]
 2140 0056 08B1     		cbz	r0, .L162
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2141              		.loc 1 1537 0
 2142 0058 FFF7FEFF 		bl	HAL_DMA_Abort
 2143              	.LVL195:
 2144              	.L162:
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2145              		.loc 1 1539 0
 2146 005c 2046     		mov	r0, r4
 2147 005e FFF7FEFF 		bl	UART_EndRxTransfer
 2148              	.LVL196:
 2149 0062 DFE7     		b	.L161
 2150              		.cfi_endproc
 2151              	.LFE145:
 2153              		.section	.text.HAL_UART_Abort,"ax",%progbits
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 99


 2154              		.align	1
 2155              		.global	HAL_UART_Abort
 2156              		.syntax unified
 2157              		.thumb
 2158              		.thumb_func
 2159              		.fpu fpv4-sp-d16
 2161              	HAL_UART_Abort:
 2162              	.LFB146:
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2163              		.loc 1 1558 0
 2164              		.cfi_startproc
 2165              		@ args = 0, pretend = 0, frame = 0
 2166              		@ frame_needed = 0, uses_anonymous_args = 0
 2167              	.LVL197:
 2168 0000 10B5     		push	{r4, lr}
 2169              	.LCFI28:
 2170              		.cfi_def_cfa_offset 8
 2171              		.cfi_offset 4, -8
 2172              		.cfi_offset 14, -4
 2173 0002 0446     		mov	r4, r0
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2174              		.loc 1 1560 0
 2175 0004 0268     		ldr	r2, [r0]
 2176 0006 D368     		ldr	r3, [r2, #12]
 2177 0008 23F4F073 		bic	r3, r3, #480
 2178 000c D360     		str	r3, [r2, #12]
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2179              		.loc 1 1561 0
 2180 000e 0268     		ldr	r2, [r0]
 2181 0010 5369     		ldr	r3, [r2, #20]
 2182 0012 23F00103 		bic	r3, r3, #1
 2183 0016 5361     		str	r3, [r2, #20]
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2184              		.loc 1 1564 0
 2185 0018 0368     		ldr	r3, [r0]
 2186 001a 5A69     		ldr	r2, [r3, #20]
 2187 001c 12F0800F 		tst	r2, #128
 2188 0020 0BD0     		beq	.L167
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2189              		.loc 1 1566 0
 2190 0022 5A69     		ldr	r2, [r3, #20]
 2191 0024 22F08002 		bic	r2, r2, #128
 2192 0028 5A61     		str	r2, [r3, #20]
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2193              		.loc 1 1569 0
 2194 002a 036B     		ldr	r3, [r0, #48]
 2195 002c 2BB1     		cbz	r3, .L167
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2196              		.loc 1 1573 0
 2197 002e 0022     		movs	r2, #0
 2198 0030 1A65     		str	r2, [r3, #80]
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2199              		.loc 1 1575 0
 2200 0032 006B     		ldr	r0, [r0, #48]
 2201              	.LVL198:
 2202 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2203              	.LVL199:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 100


 2204 0038 D0B9     		cbnz	r0, .L171
 2205              	.L167:
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2206              		.loc 1 1589 0
 2207 003a 2368     		ldr	r3, [r4]
 2208 003c 5A69     		ldr	r2, [r3, #20]
 2209 003e 12F0400F 		tst	r2, #64
 2210 0042 0BD0     		beq	.L169
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2211              		.loc 1 1591 0
 2212 0044 5A69     		ldr	r2, [r3, #20]
 2213 0046 22F04002 		bic	r2, r2, #64
 2214 004a 5A61     		str	r2, [r3, #20]
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2215              		.loc 1 1594 0
 2216 004c 636B     		ldr	r3, [r4, #52]
 2217 004e 2BB1     		cbz	r3, .L169
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2218              		.loc 1 1598 0
 2219 0050 0022     		movs	r2, #0
 2220 0052 1A65     		str	r2, [r3, #80]
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2221              		.loc 1 1600 0
 2222 0054 606B     		ldr	r0, [r4, #52]
 2223 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 2224              	.LVL200:
 2225 005a 90B9     		cbnz	r0, .L172
 2226              	.L169:
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2227              		.loc 1 1614 0
 2228 005c 0020     		movs	r0, #0
 2229 005e E084     		strh	r0, [r4, #38]	@ movhi
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2230              		.loc 1 1615 0
 2231 0060 E085     		strh	r0, [r4, #46]	@ movhi
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2232              		.loc 1 1618 0
 2233 0062 E063     		str	r0, [r4, #60]
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2234              		.loc 1 1621 0
 2235 0064 2023     		movs	r3, #32
 2236 0066 84F83A30 		strb	r3, [r4, #58]
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2237              		.loc 1 1622 0
 2238 006a 84F83930 		strb	r3, [r4, #57]
 2239              	.L168:
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2240              		.loc 1 1625 0
 2241 006e 10BD     		pop	{r4, pc}
 2242              	.LVL201:
 2243              	.L171:
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2244              		.loc 1 1577 0
 2245 0070 206B     		ldr	r0, [r4, #48]
 2246 0072 FFF7FEFF 		bl	HAL_DMA_GetError
 2247              	.LVL202:
 2248 0076 2028     		cmp	r0, #32
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 101


 2249 0078 DFD1     		bne	.L167
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2250              		.loc 1 1580 0
 2251 007a 1023     		movs	r3, #16
 2252 007c E363     		str	r3, [r4, #60]
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2253              		.loc 1 1582 0
 2254 007e 0320     		movs	r0, #3
 2255 0080 F5E7     		b	.L168
 2256              	.L172:
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2257              		.loc 1 1602 0
 2258 0082 606B     		ldr	r0, [r4, #52]
 2259 0084 FFF7FEFF 		bl	HAL_DMA_GetError
 2260              	.LVL203:
 2261 0088 2028     		cmp	r0, #32
 2262 008a E7D1     		bne	.L169
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2263              		.loc 1 1605 0
 2264 008c 1023     		movs	r3, #16
 2265 008e E363     		str	r3, [r4, #60]
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2266              		.loc 1 1607 0
 2267 0090 0320     		movs	r0, #3
 2268 0092 ECE7     		b	.L168
 2269              		.cfi_endproc
 2270              	.LFE146:
 2272              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2273              		.align	1
 2274              		.global	HAL_UART_AbortTransmit
 2275              		.syntax unified
 2276              		.thumb
 2277              		.thumb_func
 2278              		.fpu fpv4-sp-d16
 2280              	HAL_UART_AbortTransmit:
 2281              	.LFB147:
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2282              		.loc 1 1640 0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 0
 2285              		@ frame_needed = 0, uses_anonymous_args = 0
 2286              	.LVL204:
 2287 0000 10B5     		push	{r4, lr}
 2288              	.LCFI29:
 2289              		.cfi_def_cfa_offset 8
 2290              		.cfi_offset 4, -8
 2291              		.cfi_offset 14, -4
 2292 0002 0446     		mov	r4, r0
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2293              		.loc 1 1642 0
 2294 0004 0268     		ldr	r2, [r0]
 2295 0006 D368     		ldr	r3, [r2, #12]
 2296 0008 23F0C003 		bic	r3, r3, #192
 2297 000c D360     		str	r3, [r2, #12]
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2298              		.loc 1 1645 0
 2299 000e 0368     		ldr	r3, [r0]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 102


 2300 0010 5A69     		ldr	r2, [r3, #20]
 2301 0012 12F0800F 		tst	r2, #128
 2302 0016 0BD0     		beq	.L174
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2303              		.loc 1 1647 0
 2304 0018 5A69     		ldr	r2, [r3, #20]
 2305 001a 22F08002 		bic	r2, r2, #128
 2306 001e 5A61     		str	r2, [r3, #20]
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2307              		.loc 1 1650 0
 2308 0020 036B     		ldr	r3, [r0, #48]
 2309 0022 2BB1     		cbz	r3, .L174
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2310              		.loc 1 1654 0
 2311 0024 0022     		movs	r2, #0
 2312 0026 1A65     		str	r2, [r3, #80]
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2313              		.loc 1 1656 0
 2314 0028 006B     		ldr	r0, [r0, #48]
 2315              	.LVL205:
 2316 002a FFF7FEFF 		bl	HAL_DMA_Abort
 2317              	.LVL206:
 2318 002e 28B9     		cbnz	r0, .L177
 2319              	.L174:
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2320              		.loc 1 1670 0
 2321 0030 0020     		movs	r0, #0
 2322 0032 E084     		strh	r0, [r4, #38]	@ movhi
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2323              		.loc 1 1673 0
 2324 0034 2023     		movs	r3, #32
 2325 0036 84F83930 		strb	r3, [r4, #57]
 2326              	.L175:
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2327              		.loc 1 1676 0
 2328 003a 10BD     		pop	{r4, pc}
 2329              	.LVL207:
 2330              	.L177:
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2331              		.loc 1 1658 0
 2332 003c 206B     		ldr	r0, [r4, #48]
 2333 003e FFF7FEFF 		bl	HAL_DMA_GetError
 2334              	.LVL208:
 2335 0042 2028     		cmp	r0, #32
 2336 0044 F4D1     		bne	.L174
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2337              		.loc 1 1661 0
 2338 0046 1023     		movs	r3, #16
 2339 0048 E363     		str	r3, [r4, #60]
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2340              		.loc 1 1663 0
 2341 004a 0320     		movs	r0, #3
 2342 004c F5E7     		b	.L175
 2343              		.cfi_endproc
 2344              	.LFE147:
 2346              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2347              		.align	1
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 103


 2348              		.global	HAL_UART_AbortReceive
 2349              		.syntax unified
 2350              		.thumb
 2351              		.thumb_func
 2352              		.fpu fpv4-sp-d16
 2354              	HAL_UART_AbortReceive:
 2355              	.LFB148:
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2356              		.loc 1 1691 0
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 0
 2359              		@ frame_needed = 0, uses_anonymous_args = 0
 2360              	.LVL209:
 2361 0000 10B5     		push	{r4, lr}
 2362              	.LCFI30:
 2363              		.cfi_def_cfa_offset 8
 2364              		.cfi_offset 4, -8
 2365              		.cfi_offset 14, -4
 2366 0002 0446     		mov	r4, r0
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2367              		.loc 1 1693 0
 2368 0004 0268     		ldr	r2, [r0]
 2369 0006 D368     		ldr	r3, [r2, #12]
 2370 0008 23F49073 		bic	r3, r3, #288
 2371 000c D360     		str	r3, [r2, #12]
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2372              		.loc 1 1694 0
 2373 000e 0268     		ldr	r2, [r0]
 2374 0010 5369     		ldr	r3, [r2, #20]
 2375 0012 23F00103 		bic	r3, r3, #1
 2376 0016 5361     		str	r3, [r2, #20]
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2377              		.loc 1 1697 0
 2378 0018 0368     		ldr	r3, [r0]
 2379 001a 5A69     		ldr	r2, [r3, #20]
 2380 001c 12F0400F 		tst	r2, #64
 2381 0020 0BD0     		beq	.L179
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2382              		.loc 1 1699 0
 2383 0022 5A69     		ldr	r2, [r3, #20]
 2384 0024 22F04002 		bic	r2, r2, #64
 2385 0028 5A61     		str	r2, [r3, #20]
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2386              		.loc 1 1702 0
 2387 002a 436B     		ldr	r3, [r0, #52]
 2388 002c 2BB1     		cbz	r3, .L179
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2389              		.loc 1 1706 0
 2390 002e 0022     		movs	r2, #0
 2391 0030 1A65     		str	r2, [r3, #80]
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2392              		.loc 1 1708 0
 2393 0032 406B     		ldr	r0, [r0, #52]
 2394              	.LVL210:
 2395 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2396              	.LVL211:
 2397 0038 28B9     		cbnz	r0, .L182
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 104


 2398              	.L179:
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2399              		.loc 1 1722 0
 2400 003a 0020     		movs	r0, #0
 2401 003c E085     		strh	r0, [r4, #46]	@ movhi
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2402              		.loc 1 1725 0
 2403 003e 2023     		movs	r3, #32
 2404 0040 84F83A30 		strb	r3, [r4, #58]
 2405              	.L180:
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2406              		.loc 1 1728 0
 2407 0044 10BD     		pop	{r4, pc}
 2408              	.LVL212:
 2409              	.L182:
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2410              		.loc 1 1710 0
 2411 0046 606B     		ldr	r0, [r4, #52]
 2412 0048 FFF7FEFF 		bl	HAL_DMA_GetError
 2413              	.LVL213:
 2414 004c 2028     		cmp	r0, #32
 2415 004e F4D1     		bne	.L179
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2416              		.loc 1 1713 0
 2417 0050 1023     		movs	r3, #16
 2418 0052 E363     		str	r3, [r4, #60]
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2419              		.loc 1 1715 0
 2420 0054 0320     		movs	r0, #3
 2421 0056 F5E7     		b	.L180
 2422              		.cfi_endproc
 2423              	.LFE148:
 2425              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2426              		.align	1
 2427              		.weak	HAL_UART_TxCpltCallback
 2428              		.syntax unified
 2429              		.thumb
 2430              		.thumb_func
 2431              		.fpu fpv4-sp-d16
 2433              	HAL_UART_TxCpltCallback:
 2434              	.LFB153:
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2435              		.loc 1 2166 0
 2436              		.cfi_startproc
 2437              		@ args = 0, pretend = 0, frame = 0
 2438              		@ frame_needed = 0, uses_anonymous_args = 0
 2439              		@ link register save eliminated.
 2440              	.LVL214:
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2441              		.loc 1 2172 0
 2442 0000 7047     		bx	lr
 2443              		.cfi_endproc
 2444              	.LFE153:
 2446              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2447              		.align	1
 2448              		.syntax unified
 2449              		.thumb
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 105


 2450              		.thumb_func
 2451              		.fpu fpv4-sp-d16
 2453              	UART_DMATransmitCplt:
 2454              	.LFB168:
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2455              		.loc 1 2541 0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 0
 2458              		@ frame_needed = 0, uses_anonymous_args = 0
 2459              	.LVL215:
 2460 0000 08B5     		push	{r3, lr}
 2461              	.LCFI31:
 2462              		.cfi_def_cfa_offset 8
 2463              		.cfi_offset 3, -8
 2464              		.cfi_offset 14, -4
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 2465              		.loc 1 2542 0
 2466 0002 836B     		ldr	r3, [r0, #56]
 2467              	.LVL216:
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2468              		.loc 1 2544 0
 2469 0004 0268     		ldr	r2, [r0]
 2470 0006 1268     		ldr	r2, [r2]
 2471 0008 12F4807F 		tst	r2, #256
 2472 000c 0CD1     		bne	.L185
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2473              		.loc 1 2546 0
 2474 000e 0022     		movs	r2, #0
 2475 0010 DA84     		strh	r2, [r3, #38]	@ movhi
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2476              		.loc 1 2550 0
 2477 0012 1968     		ldr	r1, [r3]
 2478 0014 4A69     		ldr	r2, [r1, #20]
 2479 0016 22F08002 		bic	r2, r2, #128
 2480 001a 4A61     		str	r2, [r1, #20]
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2481              		.loc 1 2553 0
 2482 001c 1A68     		ldr	r2, [r3]
 2483 001e D368     		ldr	r3, [r2, #12]
 2484              	.LVL217:
 2485 0020 43F04003 		orr	r3, r3, #64
 2486 0024 D360     		str	r3, [r2, #12]
 2487              	.LVL218:
 2488              	.L184:
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2489              		.loc 1 2567 0
 2490 0026 08BD     		pop	{r3, pc}
 2491              	.LVL219:
 2492              	.L185:
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2493              		.loc 1 2564 0
 2494 0028 1846     		mov	r0, r3
 2495              	.LVL220:
 2496 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2497              	.LVL221:
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2498              		.loc 1 2567 0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 106


 2499 002e FAE7     		b	.L184
 2500              		.cfi_endproc
 2501              	.LFE168:
 2503              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2504              		.align	1
 2505              		.syntax unified
 2506              		.thumb
 2507              		.thumb_func
 2508              		.fpu fpv4-sp-d16
 2510              	UART_EndTransmit_IT:
 2511              	.LFB182:
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
 2512              		.loc 1 2966 0
 2513              		.cfi_startproc
 2514              		@ args = 0, pretend = 0, frame = 0
 2515              		@ frame_needed = 0, uses_anonymous_args = 0
 2516              	.LVL222:
 2517 0000 08B5     		push	{r3, lr}
 2518              	.LCFI32:
 2519              		.cfi_def_cfa_offset 8
 2520              		.cfi_offset 3, -8
 2521              		.cfi_offset 14, -4
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2522              		.loc 1 2968 0
 2523 0002 0168     		ldr	r1, [r0]
 2524 0004 CB68     		ldr	r3, [r1, #12]
 2525 0006 23F04003 		bic	r3, r3, #64
 2526 000a CB60     		str	r3, [r1, #12]
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2527              		.loc 1 2971 0
 2528 000c 2023     		movs	r3, #32
 2529 000e 80F83930 		strb	r3, [r0, #57]
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2530              		.loc 1 2978 0
 2531 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2532              	.LVL223:
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2533              		.loc 1 2982 0
 2534 0016 0020     		movs	r0, #0
 2535 0018 08BD     		pop	{r3, pc}
 2536              		.cfi_endproc
 2537              	.LFE182:
 2539              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2540              		.align	1
 2541              		.weak	HAL_UART_TxHalfCpltCallback
 2542              		.syntax unified
 2543              		.thumb
 2544              		.thumb_func
 2545              		.fpu fpv4-sp-d16
 2547              	HAL_UART_TxHalfCpltCallback:
 2548              	.LFB154:
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2549              		.loc 1 2181 0
 2550              		.cfi_startproc
 2551              		@ args = 0, pretend = 0, frame = 0
 2552              		@ frame_needed = 0, uses_anonymous_args = 0
 2553              		@ link register save eliminated.
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 107


 2554              	.LVL224:
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2555              		.loc 1 2187 0
 2556 0000 7047     		bx	lr
 2557              		.cfi_endproc
 2558              	.LFE154:
 2560              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2561              		.align	1
 2562              		.syntax unified
 2563              		.thumb
 2564              		.thumb_func
 2565              		.fpu fpv4-sp-d16
 2567              	UART_DMATxHalfCplt:
 2568              	.LFB169:
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2569              		.loc 1 2576 0
 2570              		.cfi_startproc
 2571              		@ args = 0, pretend = 0, frame = 0
 2572              		@ frame_needed = 0, uses_anonymous_args = 0
 2573              	.LVL225:
 2574 0000 08B5     		push	{r3, lr}
 2575              	.LCFI33:
 2576              		.cfi_def_cfa_offset 8
 2577              		.cfi_offset 3, -8
 2578              		.cfi_offset 14, -4
 2579              	.LVL226:
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2580              		.loc 1 2584 0
 2581 0002 806B     		ldr	r0, [r0, #56]
 2582              	.LVL227:
 2583 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2584              	.LVL228:
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2585              		.loc 1 2586 0
 2586 0008 08BD     		pop	{r3, pc}
 2587              		.cfi_endproc
 2588              	.LFE169:
 2590              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2591              		.align	1
 2592              		.weak	HAL_UART_RxCpltCallback
 2593              		.syntax unified
 2594              		.thumb
 2595              		.thumb_func
 2596              		.fpu fpv4-sp-d16
 2598              	HAL_UART_RxCpltCallback:
 2599              	.LFB155:
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2600              		.loc 1 2196 0
 2601              		.cfi_startproc
 2602              		@ args = 0, pretend = 0, frame = 0
 2603              		@ frame_needed = 0, uses_anonymous_args = 0
 2604              		@ link register save eliminated.
 2605              	.LVL229:
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2606              		.loc 1 2202 0
 2607 0000 7047     		bx	lr
 2608              		.cfi_endproc
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 108


 2609              	.LFE155:
 2611              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2612              		.align	1
 2613              		.syntax unified
 2614              		.thumb
 2615              		.thumb_func
 2616              		.fpu fpv4-sp-d16
 2618              	UART_DMAReceiveCplt:
 2619              	.LFB170:
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2620              		.loc 1 2595 0
 2621              		.cfi_startproc
 2622              		@ args = 0, pretend = 0, frame = 0
 2623              		@ frame_needed = 0, uses_anonymous_args = 0
 2624              	.LVL230:
 2625 0000 08B5     		push	{r3, lr}
 2626              	.LCFI34:
 2627              		.cfi_def_cfa_offset 8
 2628              		.cfi_offset 3, -8
 2629              		.cfi_offset 14, -4
2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 2630              		.loc 1 2596 0
 2631 0002 836B     		ldr	r3, [r0, #56]
 2632              	.LVL231:
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2633              		.loc 1 2598 0
 2634 0004 0268     		ldr	r2, [r0]
 2635 0006 1268     		ldr	r2, [r2]
 2636 0008 12F4807F 		tst	r2, #256
 2637 000c 13D1     		bne	.L195
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2638              		.loc 1 2600 0
 2639 000e 0022     		movs	r2, #0
 2640 0010 DA85     		strh	r2, [r3, #46]	@ movhi
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2641              		.loc 1 2603 0
 2642 0012 1968     		ldr	r1, [r3]
 2643 0014 CA68     		ldr	r2, [r1, #12]
 2644 0016 22F48072 		bic	r2, r2, #256
 2645 001a CA60     		str	r2, [r1, #12]
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2646              		.loc 1 2604 0
 2647 001c 1968     		ldr	r1, [r3]
 2648 001e 4A69     		ldr	r2, [r1, #20]
 2649 0020 22F00102 		bic	r2, r2, #1
 2650 0024 4A61     		str	r2, [r1, #20]
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2651              		.loc 1 2608 0
 2652 0026 1968     		ldr	r1, [r3]
 2653 0028 4A69     		ldr	r2, [r1, #20]
 2654 002a 22F04002 		bic	r2, r2, #64
 2655 002e 4A61     		str	r2, [r1, #20]
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2656              		.loc 1 2611 0
 2657 0030 2022     		movs	r2, #32
 2658 0032 83F83A20 		strb	r2, [r3, #58]
 2659              	.L195:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 109


2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2660              		.loc 1 2618 0
 2661 0036 1846     		mov	r0, r3
 2662              	.LVL232:
 2663 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2664              	.LVL233:
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2665              		.loc 1 2620 0
 2666 003c 08BD     		pop	{r3, pc}
 2667              		.cfi_endproc
 2668              	.LFE170:
 2670              		.section	.text.UART_Receive_IT,"ax",%progbits
 2671              		.align	1
 2672              		.syntax unified
 2673              		.thumb
 2674              		.thumb_func
 2675              		.fpu fpv4-sp-d16
 2677              	UART_Receive_IT:
 2678              	.LFB183:
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
 2679              		.loc 1 2991 0
 2680              		.cfi_startproc
 2681              		@ args = 0, pretend = 0, frame = 0
 2682              		@ frame_needed = 0, uses_anonymous_args = 0
 2683              	.LVL234:
 2684 0000 08B5     		push	{r3, lr}
 2685              	.LCFI35:
 2686              		.cfi_def_cfa_offset 8
 2687              		.cfi_offset 3, -8
 2688              		.cfi_offset 14, -4
2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2689              		.loc 1 2995 0
 2690 0002 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2691 0006 DBB2     		uxtb	r3, r3
 2692 0008 222B     		cmp	r3, #34
 2693 000a 45D1     		bne	.L203
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2694              		.loc 1 2997 0
 2695 000c 8368     		ldr	r3, [r0, #8]
 2696 000e B3F5805F 		cmp	r3, #4096
 2697 0012 0ED0     		beq	.L206
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2698              		.loc 1 3013 0
 2699 0014 0369     		ldr	r3, [r0, #16]
 2700 0016 03BB     		cbnz	r3, .L202
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2701              		.loc 1 3015 0
 2702 0018 0368     		ldr	r3, [r0]
 2703 001a 5A68     		ldr	r2, [r3, #4]
 2704 001c 836A     		ldr	r3, [r0, #40]
 2705 001e 591C     		adds	r1, r3, #1
 2706 0020 8162     		str	r1, [r0, #40]
 2707 0022 1A70     		strb	r2, [r3]
 2708              	.L201:
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2709              		.loc 1 3023 0
 2710 0024 C38D     		ldrh	r3, [r0, #46]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 110


 2711 0026 013B     		subs	r3, r3, #1
 2712 0028 9BB2     		uxth	r3, r3
 2713 002a C385     		strh	r3, [r0, #46]	@ movhi
 2714 002c F3B1     		cbz	r3, .L207
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2715              		.loc 1 3047 0
 2716 002e 0020     		movs	r0, #0
 2717              	.LVL235:
 2718 0030 33E0     		b	.L198
 2719              	.LVL236:
 2720              	.L206:
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 2721              		.loc 1 2999 0
 2722 0032 826A     		ldr	r2, [r0, #40]
 2723              	.LVL237:
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2724              		.loc 1 3000 0
 2725 0034 0369     		ldr	r3, [r0, #16]
 2726 0036 43B9     		cbnz	r3, .L200
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 2727              		.loc 1 3002 0
 2728 0038 0368     		ldr	r3, [r0]
 2729 003a 5B68     		ldr	r3, [r3, #4]
 2730 003c C3F30803 		ubfx	r3, r3, #0, #9
 2731 0040 1380     		strh	r3, [r2]	@ movhi
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2732              		.loc 1 3003 0
 2733 0042 836A     		ldr	r3, [r0, #40]
 2734 0044 0233     		adds	r3, r3, #2
 2735 0046 8362     		str	r3, [r0, #40]
 2736 0048 ECE7     		b	.L201
 2737              	.L200:
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 2738              		.loc 1 3007 0
 2739 004a 0368     		ldr	r3, [r0]
 2740 004c 5B68     		ldr	r3, [r3, #4]
 2741 004e DBB2     		uxtb	r3, r3
 2742 0050 1380     		strh	r3, [r2]	@ movhi
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2743              		.loc 1 3008 0
 2744 0052 836A     		ldr	r3, [r0, #40]
 2745 0054 0133     		adds	r3, r3, #1
 2746 0056 8362     		str	r3, [r0, #40]
 2747 0058 E4E7     		b	.L201
 2748              	.LVL238:
 2749              	.L202:
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2750              		.loc 1 3019 0
 2751 005a 0368     		ldr	r3, [r0]
 2752 005c 5B68     		ldr	r3, [r3, #4]
 2753 005e 826A     		ldr	r2, [r0, #40]
 2754 0060 511C     		adds	r1, r2, #1
 2755 0062 8162     		str	r1, [r0, #40]
 2756 0064 03F07F03 		and	r3, r3, #127
 2757 0068 1370     		strb	r3, [r2]
 2758 006a DBE7     		b	.L201
 2759              	.L207:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 111


3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2760              		.loc 1 3026 0
 2761 006c 0268     		ldr	r2, [r0]
 2762 006e D368     		ldr	r3, [r2, #12]
 2763 0070 23F02003 		bic	r3, r3, #32
 2764 0074 D360     		str	r3, [r2, #12]
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2765              		.loc 1 3029 0
 2766 0076 0268     		ldr	r2, [r0]
 2767 0078 D368     		ldr	r3, [r2, #12]
 2768 007a 23F48073 		bic	r3, r3, #256
 2769 007e D360     		str	r3, [r2, #12]
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2770              		.loc 1 3032 0
 2771 0080 0268     		ldr	r2, [r0]
 2772 0082 5369     		ldr	r3, [r2, #20]
 2773 0084 23F00103 		bic	r3, r3, #1
 2774 0088 5361     		str	r3, [r2, #20]
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2775              		.loc 1 3035 0
 2776 008a 2023     		movs	r3, #32
 2777 008c 80F83A30 		strb	r3, [r0, #58]
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2778              		.loc 1 3042 0
 2779 0090 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2780              	.LVL239:
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2781              		.loc 1 3045 0
 2782 0094 0020     		movs	r0, #0
 2783 0096 00E0     		b	.L198
 2784              	.LVL240:
 2785              	.L203:
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2786              		.loc 1 3051 0
 2787 0098 0220     		movs	r0, #2
 2788              	.LVL241:
 2789              	.L198:
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2790              		.loc 1 3053 0
 2791 009a 08BD     		pop	{r3, pc}
 2792              		.cfi_endproc
 2793              	.LFE183:
 2795              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2796              		.align	1
 2797              		.weak	HAL_UART_RxHalfCpltCallback
 2798              		.syntax unified
 2799              		.thumb
 2800              		.thumb_func
 2801              		.fpu fpv4-sp-d16
 2803              	HAL_UART_RxHalfCpltCallback:
 2804              	.LFB156:
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2805              		.loc 1 2211 0
 2806              		.cfi_startproc
 2807              		@ args = 0, pretend = 0, frame = 0
 2808              		@ frame_needed = 0, uses_anonymous_args = 0
 2809              		@ link register save eliminated.
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 112


 2810              	.LVL242:
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2811              		.loc 1 2217 0
 2812 0000 7047     		bx	lr
 2813              		.cfi_endproc
 2814              	.LFE156:
 2816              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2817              		.align	1
 2818              		.syntax unified
 2819              		.thumb
 2820              		.thumb_func
 2821              		.fpu fpv4-sp-d16
 2823              	UART_DMARxHalfCplt:
 2824              	.LFB171:
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2825              		.loc 1 2629 0
 2826              		.cfi_startproc
 2827              		@ args = 0, pretend = 0, frame = 0
 2828              		@ frame_needed = 0, uses_anonymous_args = 0
 2829              	.LVL243:
 2830 0000 08B5     		push	{r3, lr}
 2831              	.LCFI36:
 2832              		.cfi_def_cfa_offset 8
 2833              		.cfi_offset 3, -8
 2834              		.cfi_offset 14, -4
 2835              	.LVL244:
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2836              		.loc 1 2637 0
 2837 0002 806B     		ldr	r0, [r0, #56]
 2838              	.LVL245:
 2839 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2840              	.LVL246:
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2841              		.loc 1 2639 0
 2842 0008 08BD     		pop	{r3, pc}
 2843              		.cfi_endproc
 2844              	.LFE171:
 2846              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2847              		.align	1
 2848              		.weak	HAL_UART_ErrorCallback
 2849              		.syntax unified
 2850              		.thumb
 2851              		.thumb_func
 2852              		.fpu fpv4-sp-d16
 2854              	HAL_UART_ErrorCallback:
 2855              	.LFB157:
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2856              		.loc 1 2226 0
 2857              		.cfi_startproc
 2858              		@ args = 0, pretend = 0, frame = 0
 2859              		@ frame_needed = 0, uses_anonymous_args = 0
 2860              		@ link register save eliminated.
 2861              	.LVL247:
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2862              		.loc 1 2232 0
 2863 0000 7047     		bx	lr
 2864              		.cfi_endproc
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 113


 2865              	.LFE157:
 2867              		.section	.text.UART_DMAError,"ax",%progbits
 2868              		.align	1
 2869              		.syntax unified
 2870              		.thumb
 2871              		.thumb_func
 2872              		.fpu fpv4-sp-d16
 2874              	UART_DMAError:
 2875              	.LFB172:
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2876              		.loc 1 2648 0
 2877              		.cfi_startproc
 2878              		@ args = 0, pretend = 0, frame = 0
 2879              		@ frame_needed = 0, uses_anonymous_args = 0
 2880              	.LVL248:
 2881 0000 10B5     		push	{r4, lr}
 2882              	.LCFI37:
 2883              		.cfi_def_cfa_offset 8
 2884              		.cfi_offset 4, -8
 2885              		.cfi_offset 14, -4
 2886              	.LVL249:
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2887              		.loc 1 2650 0
 2888 0002 846B     		ldr	r4, [r0, #56]
 2889              	.LVL250:
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2890              		.loc 1 2653 0
 2891 0004 2368     		ldr	r3, [r4]
 2892 0006 5A69     		ldr	r2, [r3, #20]
 2893              	.LVL251:
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2894              		.loc 1 2654 0
 2895 0008 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 2896 000c DBB2     		uxtb	r3, r3
 2897 000e 212B     		cmp	r3, #33
 2898 0010 10D0     		beq	.L216
 2899              	.LVL252:
 2900              	.L213:
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2901              		.loc 1 2661 0
 2902 0012 2368     		ldr	r3, [r4]
 2903 0014 5A69     		ldr	r2, [r3, #20]
 2904 0016 02F04002 		and	r2, r2, #64
 2905              	.LVL253:
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2906              		.loc 1 2662 0
 2907 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2908 001e DBB2     		uxtb	r3, r3
 2909 0020 222B     		cmp	r3, #34
 2910 0022 11D0     		beq	.L217
 2911              	.LVL254:
 2912              	.L214:
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 2913              		.loc 1 2668 0
 2914 0024 E36B     		ldr	r3, [r4, #60]
 2915 0026 43F01003 		orr	r3, r3, #16
 2916 002a E363     		str	r3, [r4, #60]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 114


2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2917              		.loc 1 2674 0
 2918 002c 2046     		mov	r0, r4
 2919 002e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2920              	.LVL255:
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2921              		.loc 1 2676 0
 2922 0032 10BD     		pop	{r4, pc}
 2923              	.LVL256:
 2924              	.L216:
 2925 0034 02F08002 		and	r2, r2, #128
 2926              	.LVL257:
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2927              		.loc 1 2654 0 discriminator 1
 2928 0038 002A     		cmp	r2, #0
 2929 003a EAD0     		beq	.L213
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2930              		.loc 1 2656 0
 2931 003c 0023     		movs	r3, #0
 2932 003e E384     		strh	r3, [r4, #38]	@ movhi
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2933              		.loc 1 2657 0
 2934 0040 2046     		mov	r0, r4
 2935              	.LVL258:
 2936 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 2937              	.LVL259:
 2938 0046 E4E7     		b	.L213
 2939              	.LVL260:
 2940              	.L217:
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2941              		.loc 1 2662 0 discriminator 1
 2942 0048 002A     		cmp	r2, #0
 2943 004a EBD0     		beq	.L214
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2944              		.loc 1 2664 0
 2945 004c 0023     		movs	r3, #0
 2946 004e E385     		strh	r3, [r4, #46]	@ movhi
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2947              		.loc 1 2665 0
 2948 0050 2046     		mov	r0, r4
 2949 0052 FFF7FEFF 		bl	UART_EndRxTransfer
 2950              	.LVL261:
 2951 0056 E5E7     		b	.L214
 2952              		.cfi_endproc
 2953              	.LFE172:
 2955              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2956              		.align	1
 2957              		.global	HAL_UART_IRQHandler
 2958              		.syntax unified
 2959              		.thumb
 2960              		.thumb_func
 2961              		.fpu fpv4-sp-d16
 2963              	HAL_UART_IRQHandler:
 2964              	.LFB152:
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2965              		.loc 1 2020 0
 2966              		.cfi_startproc
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 115


 2967              		@ args = 0, pretend = 0, frame = 0
 2968              		@ frame_needed = 0, uses_anonymous_args = 0
 2969              	.LVL262:
 2970 0000 10B5     		push	{r4, lr}
 2971              	.LCFI38:
 2972              		.cfi_def_cfa_offset 8
 2973              		.cfi_offset 4, -8
 2974              		.cfi_offset 14, -4
 2975 0002 0446     		mov	r4, r0
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2976              		.loc 1 2021 0
 2977 0004 0268     		ldr	r2, [r0]
 2978 0006 1368     		ldr	r3, [r2]
 2979              	.LVL263:
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2980              		.loc 1 2022 0
 2981 0008 D168     		ldr	r1, [r2, #12]
 2982              	.LVL264:
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 2983              		.loc 1 2023 0
 2984 000a 5269     		ldr	r2, [r2, #20]
 2985              	.LVL265:
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2986              		.loc 1 2029 0
 2987 000c 13F00F00 		ands	r0, r3, #15
 2988              	.LVL266:
 2989 0010 05D1     		bne	.L219
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2990              		.loc 1 2032 0
 2991 0012 13F0200F 		tst	r3, #32
 2992 0016 02D0     		beq	.L219
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2993              		.loc 1 2032 0 is_stmt 0 discriminator 1
 2994 0018 11F0200F 		tst	r1, #32
 2995 001c 56D1     		bne	.L235
 2996              	.L219:
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2997              		.loc 1 2040 0 is_stmt 1
 2998 001e 0028     		cmp	r0, #0
 2999 0020 6AD0     		beq	.L221
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3000              		.loc 1 2040 0 is_stmt 0 discriminator 1
 3001 0022 12F00102 		ands	r2, r2, #1
 3002              	.LVL267:
 3003 0026 02D1     		bne	.L222
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3004              		.loc 1 2040 0 discriminator 2
 3005 0028 11F4907F 		tst	r1, #288
 3006 002c 64D0     		beq	.L221
 3007              	.L222:
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3008              		.loc 1 2043 0 is_stmt 1
 3009 002e 13F0010F 		tst	r3, #1
 3010 0032 06D0     		beq	.L223
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3011              		.loc 1 2043 0 is_stmt 0 discriminator 1
 3012 0034 11F4807F 		tst	r1, #256
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 116


 3013 0038 03D0     		beq	.L223
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3014              		.loc 1 2045 0 is_stmt 1
 3015 003a E06B     		ldr	r0, [r4, #60]
 3016              	.LVL268:
 3017 003c 40F00100 		orr	r0, r0, #1
 3018 0040 E063     		str	r0, [r4, #60]
 3019              	.L223:
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3020              		.loc 1 2049 0
 3021 0042 13F0040F 		tst	r3, #4
 3022 0046 04D0     		beq	.L224
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3023              		.loc 1 2049 0 is_stmt 0 discriminator 1
 3024 0048 1AB1     		cbz	r2, .L224
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3025              		.loc 1 2051 0 is_stmt 1
 3026 004a E06B     		ldr	r0, [r4, #60]
 3027 004c 40F00200 		orr	r0, r0, #2
 3028 0050 E063     		str	r0, [r4, #60]
 3029              	.L224:
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3030              		.loc 1 2055 0
 3031 0052 13F0020F 		tst	r3, #2
 3032 0056 04D0     		beq	.L225
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3033              		.loc 1 2055 0 is_stmt 0 discriminator 1
 3034 0058 1AB1     		cbz	r2, .L225
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3035              		.loc 1 2057 0 is_stmt 1
 3036 005a E06B     		ldr	r0, [r4, #60]
 3037 005c 40F00400 		orr	r0, r0, #4
 3038 0060 E063     		str	r0, [r4, #60]
 3039              	.L225:
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3040              		.loc 1 2061 0
 3041 0062 13F0080F 		tst	r3, #8
 3042 0066 07D0     		beq	.L226
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3043              		.loc 1 2061 0 is_stmt 0 discriminator 1
 3044 0068 11F0200F 		tst	r1, #32
 3045 006c 00D1     		bne	.L227
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3046              		.loc 1 2061 0 discriminator 2
 3047 006e 1AB1     		cbz	r2, .L226
 3048              	.L227:
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3049              		.loc 1 2063 0 is_stmt 1
 3050 0070 E26B     		ldr	r2, [r4, #60]
 3051 0072 42F00802 		orr	r2, r2, #8
 3052 0076 E263     		str	r2, [r4, #60]
 3053              	.L226:
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3054              		.loc 1 2067 0
 3055 0078 E26B     		ldr	r2, [r4, #60]
 3056 007a 002A     		cmp	r2, #0
 3057 007c 48D0     		beq	.L218
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 117


2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3058              		.loc 1 2070 0
 3059 007e 13F0200F 		tst	r3, #32
 3060 0082 02D0     		beq	.L228
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3061              		.loc 1 2070 0 is_stmt 0 discriminator 1
 3062 0084 11F0200F 		tst	r1, #32
 3063 0088 24D1     		bne	.L236
 3064              	.LVL269:
 3065              	.L228:
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 3066              		.loc 1 2077 0 is_stmt 1
 3067 008a 2368     		ldr	r3, [r4]
 3068 008c 5B69     		ldr	r3, [r3, #20]
 3069 008e 03F04003 		and	r3, r3, #64
 3070              	.LVL270:
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3071              		.loc 1 2078 0
 3072 0092 E26B     		ldr	r2, [r4, #60]
 3073 0094 12F0080F 		tst	r2, #8
 3074 0098 00D1     		bne	.L229
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3075              		.loc 1 2078 0 is_stmt 0 discriminator 1
 3076 009a 3BB3     		cbz	r3, .L230
 3077              	.L229:
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3078              		.loc 1 2083 0 is_stmt 1
 3079 009c 2046     		mov	r0, r4
 3080 009e FFF7FEFF 		bl	UART_EndRxTransfer
 3081              	.LVL271:
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3082              		.loc 1 2086 0
 3083 00a2 2368     		ldr	r3, [r4]
 3084 00a4 5A69     		ldr	r2, [r3, #20]
 3085 00a6 12F0400F 		tst	r2, #64
 3086 00aa 1BD0     		beq	.L231
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3087              		.loc 1 2088 0
 3088 00ac 5A69     		ldr	r2, [r3, #20]
 3089 00ae 22F04002 		bic	r2, r2, #64
 3090 00b2 5A61     		str	r2, [r3, #20]
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 3091              		.loc 1 2091 0
 3092 00b4 636B     		ldr	r3, [r4, #52]
 3093 00b6 8BB1     		cbz	r3, .L232
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3094              		.loc 1 2095 0
 3095 00b8 1A4A     		ldr	r2, .L239
 3096 00ba 1A65     		str	r2, [r3, #80]
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
 3097              		.loc 1 2096 0
 3098 00bc 606B     		ldr	r0, [r4, #52]
 3099 00be FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3100              	.LVL272:
 3101 00c2 28B3     		cbz	r0, .L218
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
 3102              		.loc 1 2099 0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 118


 3103 00c4 606B     		ldr	r0, [r4, #52]
 3104 00c6 036D     		ldr	r3, [r0, #80]
 3105 00c8 9847     		blx	r3
 3106              	.LVL273:
 3107 00ca 21E0     		b	.L218
 3108              	.LVL274:
 3109              	.L235:
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 3110              		.loc 1 2034 0
 3111 00cc 2046     		mov	r0, r4
 3112              	.LVL275:
 3113 00ce FFF7FEFF 		bl	UART_Receive_IT
 3114              	.LVL276:
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3115              		.loc 1 2035 0
 3116 00d2 1DE0     		b	.L218
 3117              	.LVL277:
 3118              	.L236:
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3119              		.loc 1 2072 0
 3120 00d4 2046     		mov	r0, r4
 3121 00d6 FFF7FEFF 		bl	UART_Receive_IT
 3122              	.LVL278:
 3123 00da D6E7     		b	.L228
 3124              	.LVL279:
 3125              	.L232:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3126              		.loc 1 2110 0
 3127 00dc 2046     		mov	r0, r4
 3128 00de FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3129              	.LVL280:
 3130 00e2 15E0     		b	.L218
 3131              	.L231:
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3132              		.loc 1 2122 0
 3133 00e4 2046     		mov	r0, r4
 3134 00e6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3135              	.LVL281:
 3136 00ea 11E0     		b	.L218
 3137              	.LVL282:
 3138              	.L230:
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3139              		.loc 1 2135 0
 3140 00ec 2046     		mov	r0, r4
 3141 00ee FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3142              	.LVL283:
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3143              		.loc 1 2138 0
 3144 00f2 0023     		movs	r3, #0
 3145 00f4 E363     		str	r3, [r4, #60]
 3146 00f6 0BE0     		b	.L218
 3147              	.LVL284:
 3148              	.L221:
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3149              		.loc 1 2145 0
 3150 00f8 13F0800F 		tst	r3, #128
 3151 00fc 02D0     		beq	.L233
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 119


2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3152              		.loc 1 2145 0 is_stmt 0 discriminator 1
 3153 00fe 11F0800F 		tst	r1, #128
 3154 0102 06D1     		bne	.L237
 3155              	.L233:
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3156              		.loc 1 2152 0 is_stmt 1
 3157 0104 13F0400F 		tst	r3, #64
 3158 0108 02D0     		beq	.L218
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3159              		.loc 1 2152 0 is_stmt 0 discriminator 1
 3160 010a 11F0400F 		tst	r1, #64
 3161 010e 04D1     		bne	.L238
 3162              	.LVL285:
 3163              	.L218:
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3164              		.loc 1 2157 0 is_stmt 1
 3165 0110 10BD     		pop	{r4, pc}
 3166              	.LVL286:
 3167              	.L237:
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3168              		.loc 1 2147 0
 3169 0112 2046     		mov	r0, r4
 3170              	.LVL287:
 3171 0114 FFF7FEFF 		bl	UART_Transmit_IT
 3172              	.LVL288:
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3173              		.loc 1 2148 0
 3174 0118 FAE7     		b	.L218
 3175              	.LVL289:
 3176              	.L238:
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3177              		.loc 1 2154 0
 3178 011a 2046     		mov	r0, r4
 3179              	.LVL290:
 3180 011c FFF7FEFF 		bl	UART_EndTransmit_IT
 3181              	.LVL291:
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3182              		.loc 1 2155 0
 3183 0120 F6E7     		b	.L218
 3184              	.L240:
 3185 0122 00BF     		.align	2
 3186              	.L239:
 3187 0124 00000000 		.word	UART_DMAAbortOnError
 3188              		.cfi_endproc
 3189              	.LFE152:
 3191              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3192              		.align	1
 3193              		.syntax unified
 3194              		.thumb
 3195              		.thumb_func
 3196              		.fpu fpv4-sp-d16
 3198              	UART_DMAAbortOnError:
 3199              	.LFB176:
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3200              		.loc 1 2752 0
 3201              		.cfi_startproc
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 120


 3202              		@ args = 0, pretend = 0, frame = 0
 3203              		@ frame_needed = 0, uses_anonymous_args = 0
 3204              	.LVL292:
 3205 0000 08B5     		push	{r3, lr}
 3206              	.LCFI39:
 3207              		.cfi_def_cfa_offset 8
 3208              		.cfi_offset 3, -8
 3209              		.cfi_offset 14, -4
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3210              		.loc 1 2753 0
 3211 0002 806B     		ldr	r0, [r0, #56]
 3212              	.LVL293:
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3213              		.loc 1 2754 0
 3214 0004 0023     		movs	r3, #0
 3215 0006 C385     		strh	r3, [r0, #46]	@ movhi
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3216              		.loc 1 2755 0
 3217 0008 C384     		strh	r3, [r0, #38]	@ movhi
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3218              		.loc 1 2762 0
 3219 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3220              	.LVL294:
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3221              		.loc 1 2764 0
 3222 000e 08BD     		pop	{r3, pc}
 3223              		.cfi_endproc
 3224              	.LFE176:
 3226              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3227              		.align	1
 3228              		.weak	HAL_UART_AbortCpltCallback
 3229              		.syntax unified
 3230              		.thumb
 3231              		.thumb_func
 3232              		.fpu fpv4-sp-d16
 3234              	HAL_UART_AbortCpltCallback:
 3235              	.LFB158:
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3236              		.loc 1 2240 0
 3237              		.cfi_startproc
 3238              		@ args = 0, pretend = 0, frame = 0
 3239              		@ frame_needed = 0, uses_anonymous_args = 0
 3240              		@ link register save eliminated.
 3241              	.LVL295:
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3242              		.loc 1 2247 0
 3243 0000 7047     		bx	lr
 3244              		.cfi_endproc
 3245              	.LFE158:
 3247              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3248              		.align	1
 3249              		.global	HAL_UART_Abort_IT
 3250              		.syntax unified
 3251              		.thumb
 3252              		.thumb_func
 3253              		.fpu fpv4-sp-d16
 3255              	HAL_UART_Abort_IT:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 121


 3256              	.LFB149:
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3257              		.loc 1 1745 0
 3258              		.cfi_startproc
 3259              		@ args = 0, pretend = 0, frame = 0
 3260              		@ frame_needed = 0, uses_anonymous_args = 0
 3261              	.LVL296:
 3262 0000 10B5     		push	{r4, lr}
 3263              	.LCFI40:
 3264              		.cfi_def_cfa_offset 8
 3265              		.cfi_offset 4, -8
 3266              		.cfi_offset 14, -4
 3267 0002 0446     		mov	r4, r0
 3268              	.LVL297:
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3269              		.loc 1 1749 0
 3270 0004 0268     		ldr	r2, [r0]
 3271 0006 D368     		ldr	r3, [r2, #12]
 3272 0008 23F4F073 		bic	r3, r3, #480
 3273 000c D360     		str	r3, [r2, #12]
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3274              		.loc 1 1750 0
 3275 000e 0268     		ldr	r2, [r0]
 3276 0010 5369     		ldr	r3, [r2, #20]
 3277 0012 23F00103 		bic	r3, r3, #1
 3278 0016 5361     		str	r3, [r2, #20]
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3279              		.loc 1 1755 0
 3280 0018 036B     		ldr	r3, [r0, #48]
 3281 001a 33B1     		cbz	r3, .L245
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3282              		.loc 1 1759 0
 3283 001c 0268     		ldr	r2, [r0]
 3284 001e 5269     		ldr	r2, [r2, #20]
 3285 0020 12F0800F 		tst	r2, #128
 3286 0024 1DD0     		beq	.L246
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3287              		.loc 1 1761 0
 3288 0026 254A     		ldr	r2, .L257
 3289 0028 1A65     		str	r2, [r3, #80]
 3290              	.L245:
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3291              		.loc 1 1769 0
 3292 002a 636B     		ldr	r3, [r4, #52]
 3293 002c 33B1     		cbz	r3, .L247
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3294              		.loc 1 1773 0
 3295 002e 2268     		ldr	r2, [r4]
 3296 0030 5269     		ldr	r2, [r2, #20]
 3297 0032 12F0400F 		tst	r2, #64
 3298 0036 17D0     		beq	.L248
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3299              		.loc 1 1775 0
 3300 0038 214A     		ldr	r2, .L257+4
 3301 003a 1A65     		str	r2, [r3, #80]
 3302              	.L247:
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 122


 3303              		.loc 1 1784 0
 3304 003c 2368     		ldr	r3, [r4]
 3305 003e 5A69     		ldr	r2, [r3, #20]
 3306 0040 12F0800F 		tst	r2, #128
 3307 0044 13D0     		beq	.L253
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3308              		.loc 1 1787 0
 3309 0046 5A69     		ldr	r2, [r3, #20]
 3310 0048 22F08002 		bic	r2, r2, #128
 3311 004c 5A61     		str	r2, [r3, #20]
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3312              		.loc 1 1790 0
 3313 004e 206B     		ldr	r0, [r4, #48]
 3314              	.LVL298:
 3315 0050 60B3     		cbz	r0, .L254
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3316              		.loc 1 1796 0
 3317 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3318              	.LVL299:
 3319 0056 58B3     		cbz	r0, .L255
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3320              		.loc 1 1798 0
 3321 0058 236B     		ldr	r3, [r4, #48]
 3322 005a 0022     		movs	r2, #0
 3323 005c 1A65     		str	r2, [r3, #80]
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3324              		.loc 1 1746 0
 3325 005e 0121     		movs	r1, #1
 3326 0060 06E0     		b	.L249
 3327              	.LVL300:
 3328              	.L246:
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3329              		.loc 1 1765 0
 3330 0062 0022     		movs	r2, #0
 3331 0064 1A65     		str	r2, [r3, #80]
 3332 0066 E0E7     		b	.L245
 3333              	.L248:
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3334              		.loc 1 1779 0
 3335 0068 0022     		movs	r2, #0
 3336 006a 1A65     		str	r2, [r3, #80]
 3337 006c E6E7     		b	.L247
 3338              	.L253:
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3339              		.loc 1 1746 0
 3340 006e 0121     		movs	r1, #1
 3341              	.LVL301:
 3342              	.L249:
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3343              		.loc 1 1808 0
 3344 0070 2368     		ldr	r3, [r4]
 3345 0072 5A69     		ldr	r2, [r3, #20]
 3346 0074 12F0400F 		tst	r2, #64
 3347 0078 1CD0     		beq	.L250
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3348              		.loc 1 1810 0
 3349 007a 5A69     		ldr	r2, [r3, #20]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 123


 3350 007c 22F04002 		bic	r2, r2, #64
 3351 0080 5A61     		str	r2, [r3, #20]
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3352              		.loc 1 1813 0
 3353 0082 606B     		ldr	r0, [r4, #52]
 3354 0084 B0B1     		cbz	r0, .L250
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3355              		.loc 1 1819 0
 3356 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3357              	.LVL302:
 3358 008a A8B1     		cbz	r0, .L251
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 3359              		.loc 1 1821 0
 3360 008c 636B     		ldr	r3, [r4, #52]
 3361 008e 0022     		movs	r2, #0
 3362 0090 1A65     		str	r2, [r3, #80]
 3363              	.LVL303:
 3364              	.L252:
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3365              		.loc 1 1835 0
 3366 0092 0023     		movs	r3, #0
 3367 0094 E384     		strh	r3, [r4, #38]	@ movhi
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3368              		.loc 1 1836 0
 3369 0096 E385     		strh	r3, [r4, #46]	@ movhi
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3370              		.loc 1 1839 0
 3371 0098 E363     		str	r3, [r4, #60]
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3372              		.loc 1 1842 0
 3373 009a 2023     		movs	r3, #32
 3374 009c 84F83930 		strb	r3, [r4, #57]
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3375              		.loc 1 1843 0
 3376 00a0 84F83A30 		strb	r3, [r4, #58]
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3377              		.loc 1 1851 0
 3378 00a4 2046     		mov	r0, r4
 3379 00a6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3380              	.LVL304:
 3381 00aa 05E0     		b	.L251
 3382              	.LVL305:
 3383              	.L254:
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3384              		.loc 1 1746 0
 3385 00ac 0121     		movs	r1, #1
 3386 00ae DFE7     		b	.L249
 3387              	.L255:
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3388              		.loc 1 1802 0
 3389 00b0 0021     		movs	r1, #0
 3390 00b2 DDE7     		b	.L249
 3391              	.LVL306:
 3392              	.L250:
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3393              		.loc 1 1832 0
 3394 00b4 0029     		cmp	r1, #0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 124


 3395 00b6 ECD1     		bne	.L252
 3396              	.LVL307:
 3397              	.L251:
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3398              		.loc 1 1856 0
 3399 00b8 0020     		movs	r0, #0
 3400 00ba 10BD     		pop	{r4, pc}
 3401              	.LVL308:
 3402              	.L258:
 3403              		.align	2
 3404              	.L257:
 3405 00bc 00000000 		.word	UART_DMATxAbortCallback
 3406 00c0 00000000 		.word	UART_DMARxAbortCallback
 3407              		.cfi_endproc
 3408              	.LFE149:
 3410              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3411              		.align	1
 3412              		.syntax unified
 3413              		.thumb
 3414              		.thumb_func
 3415              		.fpu fpv4-sp-d16
 3417              	UART_DMARxAbortCallback:
 3418              	.LFB178:
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3419              		.loc 1 2821 0
 3420              		.cfi_startproc
 3421              		@ args = 0, pretend = 0, frame = 0
 3422              		@ frame_needed = 0, uses_anonymous_args = 0
 3423              	.LVL309:
 3424 0000 08B5     		push	{r3, lr}
 3425              	.LCFI41:
 3426              		.cfi_def_cfa_offset 8
 3427              		.cfi_offset 3, -8
 3428              		.cfi_offset 14, -4
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3429              		.loc 1 2822 0
 3430 0002 806B     		ldr	r0, [r0, #56]
 3431              	.LVL310:
2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3432              		.loc 1 2824 0
 3433 0004 436B     		ldr	r3, [r0, #52]
 3434 0006 0022     		movs	r2, #0
 3435 0008 1A65     		str	r2, [r3, #80]
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3436              		.loc 1 2827 0
 3437 000a 036B     		ldr	r3, [r0, #48]
 3438 000c 13B1     		cbz	r3, .L260
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3439              		.loc 1 2829 0
 3440 000e 1B6D     		ldr	r3, [r3, #80]
 3441 0010 03B1     		cbz	r3, .L260
 3442              	.LVL311:
 3443              	.L259:
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3444              		.loc 1 2854 0
 3445 0012 08BD     		pop	{r3, pc}
 3446              	.LVL312:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 125


 3447              	.L260:
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3448              		.loc 1 2836 0
 3449 0014 0023     		movs	r3, #0
 3450 0016 C384     		strh	r3, [r0, #38]	@ movhi
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3451              		.loc 1 2837 0
 3452 0018 C385     		strh	r3, [r0, #46]	@ movhi
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3453              		.loc 1 2840 0
 3454 001a C363     		str	r3, [r0, #60]
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3455              		.loc 1 2843 0
 3456 001c 2023     		movs	r3, #32
 3457 001e 80F83930 		strb	r3, [r0, #57]
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3458              		.loc 1 2844 0
 3459 0022 80F83A30 		strb	r3, [r0, #58]
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3460              		.loc 1 2852 0
 3461 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3462              	.LVL313:
 3463 002a F2E7     		b	.L259
 3464              		.cfi_endproc
 3465              	.LFE178:
 3467              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3468              		.align	1
 3469              		.syntax unified
 3470              		.thumb
 3471              		.thumb_func
 3472              		.fpu fpv4-sp-d16
 3474              	UART_DMATxAbortCallback:
 3475              	.LFB177:
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3476              		.loc 1 2776 0
 3477              		.cfi_startproc
 3478              		@ args = 0, pretend = 0, frame = 0
 3479              		@ frame_needed = 0, uses_anonymous_args = 0
 3480              	.LVL314:
 3481 0000 08B5     		push	{r3, lr}
 3482              	.LCFI42:
 3483              		.cfi_def_cfa_offset 8
 3484              		.cfi_offset 3, -8
 3485              		.cfi_offset 14, -4
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3486              		.loc 1 2777 0
 3487 0002 806B     		ldr	r0, [r0, #56]
 3488              	.LVL315:
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3489              		.loc 1 2779 0
 3490 0004 036B     		ldr	r3, [r0, #48]
 3491 0006 0022     		movs	r2, #0
 3492 0008 1A65     		str	r2, [r3, #80]
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3493              		.loc 1 2782 0
 3494 000a 436B     		ldr	r3, [r0, #52]
 3495 000c 13B1     		cbz	r3, .L264
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 126


2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3496              		.loc 1 2784 0
 3497 000e 1B6D     		ldr	r3, [r3, #80]
 3498 0010 03B1     		cbz	r3, .L264
 3499              	.LVL316:
 3500              	.L263:
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3501              		.loc 1 2809 0
 3502 0012 08BD     		pop	{r3, pc}
 3503              	.LVL317:
 3504              	.L264:
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3505              		.loc 1 2791 0
 3506 0014 0023     		movs	r3, #0
 3507 0016 C384     		strh	r3, [r0, #38]	@ movhi
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3508              		.loc 1 2792 0
 3509 0018 C385     		strh	r3, [r0, #46]	@ movhi
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3510              		.loc 1 2795 0
 3511 001a C363     		str	r3, [r0, #60]
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3512              		.loc 1 2798 0
 3513 001c 2023     		movs	r3, #32
 3514 001e 80F83930 		strb	r3, [r0, #57]
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3515              		.loc 1 2799 0
 3516 0022 80F83A30 		strb	r3, [r0, #58]
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3517              		.loc 1 2807 0
 3518 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3519              	.LVL318:
 3520 002a F2E7     		b	.L263
 3521              		.cfi_endproc
 3522              	.LFE177:
 3524              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3525              		.align	1
 3526              		.weak	HAL_UART_AbortTransmitCpltCallback
 3527              		.syntax unified
 3528              		.thumb
 3529              		.thumb_func
 3530              		.fpu fpv4-sp-d16
 3532              	HAL_UART_AbortTransmitCpltCallback:
 3533              	.LFB159:
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3534              		.loc 1 2255 0
 3535              		.cfi_startproc
 3536              		@ args = 0, pretend = 0, frame = 0
 3537              		@ frame_needed = 0, uses_anonymous_args = 0
 3538              		@ link register save eliminated.
 3539              	.LVL319:
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3540              		.loc 1 2262 0
 3541 0000 7047     		bx	lr
 3542              		.cfi_endproc
 3543              	.LFE159:
 3545              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 127


 3546              		.align	1
 3547              		.global	HAL_UART_AbortTransmit_IT
 3548              		.syntax unified
 3549              		.thumb
 3550              		.thumb_func
 3551              		.fpu fpv4-sp-d16
 3553              	HAL_UART_AbortTransmit_IT:
 3554              	.LFB150:
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3555              		.loc 1 1873 0
 3556              		.cfi_startproc
 3557              		@ args = 0, pretend = 0, frame = 0
 3558              		@ frame_needed = 0, uses_anonymous_args = 0
 3559              	.LVL320:
 3560 0000 10B5     		push	{r4, lr}
 3561              	.LCFI43:
 3562              		.cfi_def_cfa_offset 8
 3563              		.cfi_offset 4, -8
 3564              		.cfi_offset 14, -4
 3565 0002 0446     		mov	r4, r0
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3566              		.loc 1 1875 0
 3567 0004 0268     		ldr	r2, [r0]
 3568 0006 D368     		ldr	r3, [r2, #12]
 3569 0008 23F0C003 		bic	r3, r3, #192
 3570 000c D360     		str	r3, [r2, #12]
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3571              		.loc 1 1878 0
 3572 000e 0368     		ldr	r3, [r0]
 3573 0010 5A69     		ldr	r2, [r3, #20]
 3574 0012 12F0800F 		tst	r2, #128
 3575 0016 18D0     		beq	.L269
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3576              		.loc 1 1880 0
 3577 0018 5A69     		ldr	r2, [r3, #20]
 3578 001a 22F08002 		bic	r2, r2, #128
 3579 001e 5A61     		str	r2, [r3, #20]
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3580              		.loc 1 1883 0
 3581 0020 036B     		ldr	r3, [r0, #48]
 3582 0022 53B1     		cbz	r3, .L270
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3583              		.loc 1 1887 0
 3584 0024 0D4A     		ldr	r2, .L273
 3585 0026 1A65     		str	r2, [r3, #80]
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3586              		.loc 1 1890 0
 3587 0028 006B     		ldr	r0, [r0, #48]
 3588              	.LVL321:
 3589 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3590              	.LVL322:
 3591 002e 10B1     		cbz	r0, .L271
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3592              		.loc 1 1893 0
 3593 0030 206B     		ldr	r0, [r4, #48]
 3594 0032 036D     		ldr	r3, [r0, #80]
 3595 0034 9847     		blx	r3
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 128


 3596              	.LVL323:
 3597              	.L271:
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3598              		.loc 1 1933 0
 3599 0036 0020     		movs	r0, #0
 3600 0038 10BD     		pop	{r4, pc}
 3601              	.LVL324:
 3602              	.L270:
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3603              		.loc 1 1899 0
 3604 003a 0023     		movs	r3, #0
 3605 003c C384     		strh	r3, [r0, #38]	@ movhi
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3606              		.loc 1 1902 0
 3607 003e 2023     		movs	r3, #32
 3608 0040 80F83930 		strb	r3, [r0, #57]
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3609              		.loc 1 1910 0
 3610 0044 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3611              	.LVL325:
 3612 0048 F5E7     		b	.L271
 3613              	.LVL326:
 3614              	.L269:
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3615              		.loc 1 1917 0
 3616 004a 0023     		movs	r3, #0
 3617 004c C384     		strh	r3, [r0, #38]	@ movhi
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3618              		.loc 1 1920 0
 3619 004e 2023     		movs	r3, #32
 3620 0050 80F83930 		strb	r3, [r0, #57]
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3621              		.loc 1 1928 0
 3622 0054 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3623              	.LVL327:
 3624 0058 EDE7     		b	.L271
 3625              	.L274:
 3626 005a 00BF     		.align	2
 3627              	.L273:
 3628 005c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3629              		.cfi_endproc
 3630              	.LFE150:
 3632              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3633              		.align	1
 3634              		.syntax unified
 3635              		.thumb
 3636              		.thumb_func
 3637              		.fpu fpv4-sp-d16
 3639              	UART_DMATxOnlyAbortCallback:
 3640              	.LFB179:
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3641              		.loc 1 2866 0
 3642              		.cfi_startproc
 3643              		@ args = 0, pretend = 0, frame = 0
 3644              		@ frame_needed = 0, uses_anonymous_args = 0
 3645              	.LVL328:
 3646 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 129


 3647              	.LCFI44:
 3648              		.cfi_def_cfa_offset 8
 3649              		.cfi_offset 3, -8
 3650              		.cfi_offset 14, -4
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3651              		.loc 1 2867 0
 3652 0002 806B     		ldr	r0, [r0, #56]
 3653              	.LVL329:
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3654              		.loc 1 2869 0
 3655 0004 0023     		movs	r3, #0
 3656 0006 C384     		strh	r3, [r0, #38]	@ movhi
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3657              		.loc 1 2872 0
 3658 0008 2023     		movs	r3, #32
 3659 000a 80F83930 		strb	r3, [r0, #57]
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3660              		.loc 1 2880 0
 3661 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3662              	.LVL330:
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3663              		.loc 1 2882 0
 3664 0012 08BD     		pop	{r3, pc}
 3665              		.cfi_endproc
 3666              	.LFE179:
 3668              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3669              		.align	1
 3670              		.weak	HAL_UART_AbortReceiveCpltCallback
 3671              		.syntax unified
 3672              		.thumb
 3673              		.thumb_func
 3674              		.fpu fpv4-sp-d16
 3676              	HAL_UART_AbortReceiveCpltCallback:
 3677              	.LFB160:
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3678              		.loc 1 2270 0
 3679              		.cfi_startproc
 3680              		@ args = 0, pretend = 0, frame = 0
 3681              		@ frame_needed = 0, uses_anonymous_args = 0
 3682              		@ link register save eliminated.
 3683              	.LVL331:
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3684              		.loc 1 2277 0
 3685 0000 7047     		bx	lr
 3686              		.cfi_endproc
 3687              	.LFE160:
 3689              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3690              		.align	1
 3691              		.global	HAL_UART_AbortReceive_IT
 3692              		.syntax unified
 3693              		.thumb
 3694              		.thumb_func
 3695              		.fpu fpv4-sp-d16
 3697              	HAL_UART_AbortReceive_IT:
 3698              	.LFB151:
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3699              		.loc 1 1950 0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 130


 3700              		.cfi_startproc
 3701              		@ args = 0, pretend = 0, frame = 0
 3702              		@ frame_needed = 0, uses_anonymous_args = 0
 3703              	.LVL332:
 3704 0000 10B5     		push	{r4, lr}
 3705              	.LCFI45:
 3706              		.cfi_def_cfa_offset 8
 3707              		.cfi_offset 4, -8
 3708              		.cfi_offset 14, -4
 3709 0002 0446     		mov	r4, r0
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3710              		.loc 1 1952 0
 3711 0004 0268     		ldr	r2, [r0]
 3712 0006 D368     		ldr	r3, [r2, #12]
 3713 0008 23F49073 		bic	r3, r3, #288
 3714 000c D360     		str	r3, [r2, #12]
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3715              		.loc 1 1953 0
 3716 000e 0268     		ldr	r2, [r0]
 3717 0010 5369     		ldr	r3, [r2, #20]
 3718 0012 23F00103 		bic	r3, r3, #1
 3719 0016 5361     		str	r3, [r2, #20]
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3720              		.loc 1 1956 0
 3721 0018 0368     		ldr	r3, [r0]
 3722 001a 5A69     		ldr	r2, [r3, #20]
 3723 001c 12F0400F 		tst	r2, #64
 3724 0020 18D0     		beq	.L279
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3725              		.loc 1 1958 0
 3726 0022 5A69     		ldr	r2, [r3, #20]
 3727 0024 22F04002 		bic	r2, r2, #64
 3728 0028 5A61     		str	r2, [r3, #20]
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3729              		.loc 1 1961 0
 3730 002a 436B     		ldr	r3, [r0, #52]
 3731 002c 53B1     		cbz	r3, .L280
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3732              		.loc 1 1965 0
 3733 002e 0D4A     		ldr	r2, .L283
 3734 0030 1A65     		str	r2, [r3, #80]
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3735              		.loc 1 1968 0
 3736 0032 406B     		ldr	r0, [r0, #52]
 3737              	.LVL333:
 3738 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3739              	.LVL334:
 3740 0038 10B1     		cbz	r0, .L281
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3741              		.loc 1 1971 0
 3742 003a 606B     		ldr	r0, [r4, #52]
 3743 003c 036D     		ldr	r3, [r0, #80]
 3744 003e 9847     		blx	r3
 3745              	.LVL335:
 3746              	.L281:
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3747              		.loc 1 2011 0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 131


 3748 0040 0020     		movs	r0, #0
 3749 0042 10BD     		pop	{r4, pc}
 3750              	.LVL336:
 3751              	.L280:
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3752              		.loc 1 1977 0
 3753 0044 0023     		movs	r3, #0
 3754 0046 C385     		strh	r3, [r0, #46]	@ movhi
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3755              		.loc 1 1980 0
 3756 0048 2023     		movs	r3, #32
 3757 004a 80F83A30 		strb	r3, [r0, #58]
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3758              		.loc 1 1988 0
 3759 004e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3760              	.LVL337:
 3761 0052 F5E7     		b	.L281
 3762              	.LVL338:
 3763              	.L279:
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3764              		.loc 1 1995 0
 3765 0054 0023     		movs	r3, #0
 3766 0056 C385     		strh	r3, [r0, #46]	@ movhi
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3767              		.loc 1 1998 0
 3768 0058 2023     		movs	r3, #32
 3769 005a 80F83A30 		strb	r3, [r0, #58]
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3770              		.loc 1 2006 0
 3771 005e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3772              	.LVL339:
 3773 0062 EDE7     		b	.L281
 3774              	.L284:
 3775              		.align	2
 3776              	.L283:
 3777 0064 00000000 		.word	UART_DMARxOnlyAbortCallback
 3778              		.cfi_endproc
 3779              	.LFE151:
 3781              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3782              		.align	1
 3783              		.syntax unified
 3784              		.thumb
 3785              		.thumb_func
 3786              		.fpu fpv4-sp-d16
 3788              	UART_DMARxOnlyAbortCallback:
 3789              	.LFB180:
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3790              		.loc 1 2894 0
 3791              		.cfi_startproc
 3792              		@ args = 0, pretend = 0, frame = 0
 3793              		@ frame_needed = 0, uses_anonymous_args = 0
 3794              	.LVL340:
 3795 0000 08B5     		push	{r3, lr}
 3796              	.LCFI46:
 3797              		.cfi_def_cfa_offset 8
 3798              		.cfi_offset 3, -8
 3799              		.cfi_offset 14, -4
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 132


2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3800              		.loc 1 2895 0
 3801 0002 806B     		ldr	r0, [r0, #56]
 3802              	.LVL341:
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3803              		.loc 1 2897 0
 3804 0004 0023     		movs	r3, #0
 3805 0006 C385     		strh	r3, [r0, #46]	@ movhi
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3806              		.loc 1 2900 0
 3807 0008 2023     		movs	r3, #32
 3808 000a 80F83A30 		strb	r3, [r0, #58]
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3809              		.loc 1 2908 0
 3810 000e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3811              	.LVL342:
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3812              		.loc 1 2910 0
 3813 0012 08BD     		pop	{r3, pc}
 3814              		.cfi_endproc
 3815              	.LFE180:
 3817              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3818              		.align	1
 3819              		.global	HAL_LIN_SendBreak
 3820              		.syntax unified
 3821              		.thumb
 3822              		.thumb_func
 3823              		.fpu fpv4-sp-d16
 3825              	HAL_LIN_SendBreak:
 3826              	.LFB161:
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3827              		.loc 1 2309 0
 3828              		.cfi_startproc
 3829              		@ args = 0, pretend = 0, frame = 0
 3830              		@ frame_needed = 0, uses_anonymous_args = 0
 3831              		@ link register save eliminated.
 3832              	.LVL343:
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3833              		.loc 1 2314 0
 3834 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3835 0004 012B     		cmp	r3, #1
 3836 0006 12D0     		beq	.L289
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3837              		.loc 1 2314 0 is_stmt 0 discriminator 2
 3838 0008 0123     		movs	r3, #1
 3839 000a 80F83830 		strb	r3, [r0, #56]
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3840              		.loc 1 2316 0 is_stmt 1 discriminator 2
 3841 000e 2423     		movs	r3, #36
 3842 0010 80F83930 		strb	r3, [r0, #57]
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3843              		.loc 1 2319 0 discriminator 2
 3844 0014 0268     		ldr	r2, [r0]
 3845 0016 D368     		ldr	r3, [r2, #12]
 3846 0018 43F00103 		orr	r3, r3, #1
 3847 001c D360     		str	r3, [r2, #12]
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 133


 3848              		.loc 1 2321 0 discriminator 2
 3849 001e 2023     		movs	r3, #32
 3850 0020 80F83930 		strb	r3, [r0, #57]
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3851              		.loc 1 2324 0 discriminator 2
 3852 0024 0023     		movs	r3, #0
 3853 0026 80F83830 		strb	r3, [r0, #56]
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3854              		.loc 1 2326 0 discriminator 2
 3855 002a 1846     		mov	r0, r3
 3856              	.LVL344:
 3857 002c 7047     		bx	lr
 3858              	.LVL345:
 3859              	.L289:
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3860              		.loc 1 2314 0
 3861 002e 0220     		movs	r0, #2
 3862              	.LVL346:
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3863              		.loc 1 2327 0
 3864 0030 7047     		bx	lr
 3865              		.cfi_endproc
 3866              	.LFE161:
 3868              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3869              		.align	1
 3870              		.global	HAL_MultiProcessor_EnterMuteMode
 3871              		.syntax unified
 3872              		.thumb
 3873              		.thumb_func
 3874              		.fpu fpv4-sp-d16
 3876              	HAL_MultiProcessor_EnterMuteMode:
 3877              	.LFB162:
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3878              		.loc 1 2336 0
 3879              		.cfi_startproc
 3880              		@ args = 0, pretend = 0, frame = 0
 3881              		@ frame_needed = 0, uses_anonymous_args = 0
 3882              		@ link register save eliminated.
 3883              	.LVL347:
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3884              		.loc 1 2341 0
 3885 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3886 0004 012B     		cmp	r3, #1
 3887 0006 12D0     		beq	.L292
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3888              		.loc 1 2341 0 is_stmt 0 discriminator 2
 3889 0008 0123     		movs	r3, #1
 3890 000a 80F83830 		strb	r3, [r0, #56]
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3891              		.loc 1 2343 0 is_stmt 1 discriminator 2
 3892 000e 2423     		movs	r3, #36
 3893 0010 80F83930 		strb	r3, [r0, #57]
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3894              		.loc 1 2346 0 discriminator 2
 3895 0014 0268     		ldr	r2, [r0]
 3896 0016 D368     		ldr	r3, [r2, #12]
 3897 0018 43F00203 		orr	r3, r3, #2
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 134


 3898 001c D360     		str	r3, [r2, #12]
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3899              		.loc 1 2348 0 discriminator 2
 3900 001e 2023     		movs	r3, #32
 3901 0020 80F83930 		strb	r3, [r0, #57]
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3902              		.loc 1 2351 0 discriminator 2
 3903 0024 0023     		movs	r3, #0
 3904 0026 80F83830 		strb	r3, [r0, #56]
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3905              		.loc 1 2353 0 discriminator 2
 3906 002a 1846     		mov	r0, r3
 3907              	.LVL348:
 3908 002c 7047     		bx	lr
 3909              	.LVL349:
 3910              	.L292:
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3911              		.loc 1 2341 0
 3912 002e 0220     		movs	r0, #2
 3913              	.LVL350:
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3914              		.loc 1 2354 0
 3915 0030 7047     		bx	lr
 3916              		.cfi_endproc
 3917              	.LFE162:
 3919              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3920              		.align	1
 3921              		.global	HAL_MultiProcessor_ExitMuteMode
 3922              		.syntax unified
 3923              		.thumb
 3924              		.thumb_func
 3925              		.fpu fpv4-sp-d16
 3927              	HAL_MultiProcessor_ExitMuteMode:
 3928              	.LFB163:
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3929              		.loc 1 2363 0
 3930              		.cfi_startproc
 3931              		@ args = 0, pretend = 0, frame = 0
 3932              		@ frame_needed = 0, uses_anonymous_args = 0
 3933              		@ link register save eliminated.
 3934              	.LVL351:
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3935              		.loc 1 2368 0
 3936 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3937 0004 012B     		cmp	r3, #1
 3938 0006 12D0     		beq	.L295
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3939              		.loc 1 2368 0 is_stmt 0 discriminator 2
 3940 0008 0123     		movs	r3, #1
 3941 000a 80F83830 		strb	r3, [r0, #56]
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3942              		.loc 1 2370 0 is_stmt 1 discriminator 2
 3943 000e 2423     		movs	r3, #36
 3944 0010 80F83930 		strb	r3, [r0, #57]
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3945              		.loc 1 2373 0 discriminator 2
 3946 0014 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 135


 3947 0016 D368     		ldr	r3, [r2, #12]
 3948 0018 23F00203 		bic	r3, r3, #2
 3949 001c D360     		str	r3, [r2, #12]
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3950              		.loc 1 2375 0 discriminator 2
 3951 001e 2023     		movs	r3, #32
 3952 0020 80F83930 		strb	r3, [r0, #57]
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3953              		.loc 1 2378 0 discriminator 2
 3954 0024 0023     		movs	r3, #0
 3955 0026 80F83830 		strb	r3, [r0, #56]
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3956              		.loc 1 2380 0 discriminator 2
 3957 002a 1846     		mov	r0, r3
 3958              	.LVL352:
 3959 002c 7047     		bx	lr
 3960              	.LVL353:
 3961              	.L295:
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3962              		.loc 1 2368 0
 3963 002e 0220     		movs	r0, #2
 3964              	.LVL354:
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3965              		.loc 1 2381 0
 3966 0030 7047     		bx	lr
 3967              		.cfi_endproc
 3968              	.LFE163:
 3970              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3971              		.align	1
 3972              		.global	HAL_HalfDuplex_EnableTransmitter
 3973              		.syntax unified
 3974              		.thumb
 3975              		.thumb_func
 3976              		.fpu fpv4-sp-d16
 3978              	HAL_HalfDuplex_EnableTransmitter:
 3979              	.LFB164:
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3980              		.loc 1 2390 0
 3981              		.cfi_startproc
 3982              		@ args = 0, pretend = 0, frame = 0
 3983              		@ frame_needed = 0, uses_anonymous_args = 0
 3984              		@ link register save eliminated.
 3985              	.LVL355:
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3986              		.loc 1 2394 0
 3987 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3988 0004 012B     		cmp	r3, #1
 3989 0006 14D0     		beq	.L298
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3990              		.loc 1 2394 0 is_stmt 0 discriminator 2
 3991 0008 0123     		movs	r3, #1
 3992 000a 80F83830 		strb	r3, [r0, #56]
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3993              		.loc 1 2396 0 is_stmt 1 discriminator 2
 3994 000e 2423     		movs	r3, #36
 3995 0010 80F83930 		strb	r3, [r0, #57]
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 136


 3996              		.loc 1 2399 0 discriminator 2
 3997 0014 0268     		ldr	r2, [r0]
 3998 0016 D368     		ldr	r3, [r2, #12]
 3999              	.LVL356:
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4000              		.loc 1 2402 0 discriminator 2
 4001 0018 23F00C03 		bic	r3, r3, #12
 4002              	.LVL357:
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4003              		.loc 1 2405 0 discriminator 2
 4004 001c 43F00803 		orr	r3, r3, #8
 4005              	.LVL358:
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4006              		.loc 1 2408 0 discriminator 2
 4007 0020 D360     		str	r3, [r2, #12]
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4008              		.loc 1 2410 0 discriminator 2
 4009 0022 2023     		movs	r3, #32
 4010              	.LVL359:
 4011 0024 80F83930 		strb	r3, [r0, #57]
 4012              	.LVL360:
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4013              		.loc 1 2413 0 discriminator 2
 4014 0028 0023     		movs	r3, #0
 4015 002a 80F83830 		strb	r3, [r0, #56]
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4016              		.loc 1 2415 0 discriminator 2
 4017 002e 1846     		mov	r0, r3
 4018              	.LVL361:
 4019 0030 7047     		bx	lr
 4020              	.LVL362:
 4021              	.L298:
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4022              		.loc 1 2394 0
 4023 0032 0220     		movs	r0, #2
 4024              	.LVL363:
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4025              		.loc 1 2416 0
 4026 0034 7047     		bx	lr
 4027              		.cfi_endproc
 4028              	.LFE164:
 4030              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4031              		.align	1
 4032              		.global	HAL_HalfDuplex_EnableReceiver
 4033              		.syntax unified
 4034              		.thumb
 4035              		.thumb_func
 4036              		.fpu fpv4-sp-d16
 4038              	HAL_HalfDuplex_EnableReceiver:
 4039              	.LFB165:
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4040              		.loc 1 2425 0
 4041              		.cfi_startproc
 4042              		@ args = 0, pretend = 0, frame = 0
 4043              		@ frame_needed = 0, uses_anonymous_args = 0
 4044              		@ link register save eliminated.
 4045              	.LVL364:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 137


2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4046              		.loc 1 2429 0
 4047 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 4048 0004 012B     		cmp	r3, #1
 4049 0006 14D0     		beq	.L301
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4050              		.loc 1 2429 0 is_stmt 0 discriminator 2
 4051 0008 0123     		movs	r3, #1
 4052 000a 80F83830 		strb	r3, [r0, #56]
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4053              		.loc 1 2431 0 is_stmt 1 discriminator 2
 4054 000e 2423     		movs	r3, #36
 4055 0010 80F83930 		strb	r3, [r0, #57]
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4056              		.loc 1 2434 0 discriminator 2
 4057 0014 0268     		ldr	r2, [r0]
 4058 0016 D368     		ldr	r3, [r2, #12]
 4059              	.LVL365:
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4060              		.loc 1 2437 0 discriminator 2
 4061 0018 23F00C03 		bic	r3, r3, #12
 4062              	.LVL366:
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4063              		.loc 1 2440 0 discriminator 2
 4064 001c 43F00403 		orr	r3, r3, #4
 4065              	.LVL367:
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4066              		.loc 1 2443 0 discriminator 2
 4067 0020 D360     		str	r3, [r2, #12]
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4068              		.loc 1 2445 0 discriminator 2
 4069 0022 2023     		movs	r3, #32
 4070              	.LVL368:
 4071 0024 80F83930 		strb	r3, [r0, #57]
 4072              	.LVL369:
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4073              		.loc 1 2448 0 discriminator 2
 4074 0028 0023     		movs	r3, #0
 4075 002a 80F83830 		strb	r3, [r0, #56]
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4076              		.loc 1 2450 0 discriminator 2
 4077 002e 1846     		mov	r0, r3
 4078              	.LVL370:
 4079 0030 7047     		bx	lr
 4080              	.LVL371:
 4081              	.L301:
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4082              		.loc 1 2429 0
 4083 0032 0220     		movs	r0, #2
 4084              	.LVL372:
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4085              		.loc 1 2451 0
 4086 0034 7047     		bx	lr
 4087              		.cfi_endproc
 4088              	.LFE165:
 4090              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4091              		.align	1
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 138


 4092              		.global	HAL_UART_GetState
 4093              		.syntax unified
 4094              		.thumb
 4095              		.thumb_func
 4096              		.fpu fpv4-sp-d16
 4098              	HAL_UART_GetState:
 4099              	.LFB166:
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 4100              		.loc 1 2482 0
 4101              		.cfi_startproc
 4102              		@ args = 0, pretend = 0, frame = 0
 4103              		@ frame_needed = 0, uses_anonymous_args = 0
 4104              		@ link register save eliminated.
 4105              	.LVL373:
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 4106              		.loc 1 2484 0
 4107 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 4108              	.LVL374:
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4109              		.loc 1 2485 0
 4110 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 4111              	.LVL375:
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4112              		.loc 1 2488 0
 4113 0008 1843     		orrs	r0, r0, r3
 4114              	.LVL376:
 4115 000a 7047     		bx	lr
 4116              		.cfi_endproc
 4117              	.LFE166:
 4119              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4120              		.align	1
 4121              		.global	HAL_UART_GetError
 4122              		.syntax unified
 4123              		.thumb
 4124              		.thumb_func
 4125              		.fpu fpv4-sp-d16
 4127              	HAL_UART_GetError:
 4128              	.LFB167:
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 4129              		.loc 1 2497 0
 4130              		.cfi_startproc
 4131              		@ args = 0, pretend = 0, frame = 0
 4132              		@ frame_needed = 0, uses_anonymous_args = 0
 4133              		@ link register save eliminated.
 4134              	.LVL377:
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4135              		.loc 1 2498 0
 4136 0000 C06B     		ldr	r0, [r0, #60]
 4137              	.LVL378:
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4138              		.loc 1 2499 0
 4139 0002 7047     		bx	lr
 4140              		.cfi_endproc
 4141              	.LFE167:
 4143              		.text
 4144              	.Letext0:
 4145              		.file 2 "c:\\gnutoolsarmembedded\\7-2017-q4-major\\arm-none-eabi\\include\\machine\\_default_types
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 139


 4146              		.file 3 "c:\\gnutoolsarmembedded\\7-2017-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 4147              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 4148              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 4149              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f427xx.h"
 4150              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 4151              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4152              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4153              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4154              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 4155              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 140


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_uart.c
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:18     .text.UART_EndTxTransfer:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:24     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:47     .text.UART_EndRxTransfer:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:53     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:80     .text.UART_Transmit_IT:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:86     .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:174    .text.UART_SetConfig:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:180    .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:423    .text.UART_SetConfig:00000210 $d
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:429    .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:435    .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:510    .text.HAL_UART_MspInit:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:517    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:531    .text.HAL_UART_Init:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:538    .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:619    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:626    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:713    .text.HAL_LIN_Init:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:720    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:824    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:831    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:940    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:947    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:961    .text.HAL_UART_DeInit:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:968    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1021   .text.HAL_UART_Transmit:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1028   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1214   .text.HAL_UART_Receive:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1221   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1413   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1420   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1495   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1502   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1587   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1594   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1706   .text.HAL_UART_Transmit_DMA:00000080 $d
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2453   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2567   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2874   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1713   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1720   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1856   .text.HAL_UART_Receive_DMA:0000009c $d
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2618   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2823   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1863   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1870   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1957   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:1964   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2058   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2065   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2154   .text.HAL_UART_Abort:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2161   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2273   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2280   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2347   .text.HAL_UART_AbortReceive:00000000 $t
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 141


C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2354   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2426   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2433   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2447   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2504   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2510   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2540   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2547   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2561   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2591   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2598   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2612   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2671   .text.UART_Receive_IT:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2677   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2796   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2803   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2817   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2847   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2854   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2868   .text.UART_DMAError:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2956   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:2963   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3187   .text.HAL_UART_IRQHandler:00000124 $d
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3198   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3192   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3227   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3234   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3248   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3255   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3405   .text.HAL_UART_Abort_IT:000000bc $d
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3474   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3417   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3411   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3468   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3525   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3532   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3546   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3553   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3628   .text.HAL_UART_AbortTransmit_IT:0000005c $d
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3639   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3633   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3669   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3676   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3690   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3697   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3777   .text.HAL_UART_AbortReceive_IT:00000064 $d
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3788   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3782   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3818   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3825   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3869   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3876   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3920   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3927   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3971   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:3978   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:4031   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s 			page 142


C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:4038   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:4091   .text.HAL_UART_GetState:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:4098   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:4120   .text.HAL_UART_GetError:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccey1IAq.s:4127   .text.HAL_UART_GetError:00000000 HAL_UART_GetError

UNDEFINED SYMBOLS
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
