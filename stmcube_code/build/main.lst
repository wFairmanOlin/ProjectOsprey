ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB136:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** SPI_HandleTypeDef hspi1;
  46:Src/main.c    **** DMA_HandleTypeDef hdma_spi1_rx;
  47:Src/main.c    **** 
  48:Src/main.c    **** UART_HandleTypeDef huart7;
  49:Src/main.c    **** 
  50:Src/main.c    **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** static void MX_GPIO_Init(void);
  59:Src/main.c    **** static void MX_DMA_Init(void);
  60:Src/main.c    **** static void MX_SPI1_Init(void);
  61:Src/main.c    **** static void MX_USB_OTG_FS_PCD_Init(void);
  62:Src/main.c    **** static void MX_UART7_Init(void);
  63:Src/main.c    **** /* USER CODE BEGIN PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  68:Src/main.c    **** /* USER CODE BEGIN 0 */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END 0 */
  71:Src/main.c    **** 
  72:Src/main.c    **** /**
  73:Src/main.c    ****   * @brief  The application entry point.
  74:Src/main.c    ****   * @retval int
  75:Src/main.c    ****   */
  76:Src/main.c    **** int main(void)
  77:Src/main.c    **** {
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END 1 */
  81:Src/main.c    ****   
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Src/main.c    ****   HAL_Init();
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE BEGIN Init */
  89:Src/main.c    **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 3


  90:Src/main.c    ****   /* USER CODE END Init */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Configure the system clock */
  93:Src/main.c    ****   SystemClock_Config();
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END SysInit */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Initialize all configured peripherals */
 100:Src/main.c    ****   MX_GPIO_Init();
 101:Src/main.c    ****   MX_DMA_Init();
 102:Src/main.c    ****   MX_SPI1_Init();
 103:Src/main.c    ****   MX_USB_OTG_FS_PCD_Init();
 104:Src/main.c    ****   MX_UART7_Init();
 105:Src/main.c    ****   /* USER CODE BEGIN 2 */
 106:Src/main.c    ****     // CS pin should default high
 107:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 108:Src/main.c    ****   HAL_Delay(100);
 109:Src/main.c    ****   
 110:Src/main.c    ****   uint8_t spi_buf = 0x00;
 111:Src/main.c    **** 		  uint8_t transmit[] = "X:\n\r";
 112:Src/main.c    ****   //write to accel register
 113:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 114:Src/main.c    ****   HAL_SPI_Transmit(&hspi1, (uint8_t *)0x00, 1, 100);
 115:Src/main.c    ****   HAL_SPI_Receive(&hspi1, &spi_buf, 1, 100);
 116:Src/main.c    ****   HAL_Delay(100);
 117:Src/main.c    ****   HAL_SPI_Transmit(&hspi1, (uint8_t *)0x7D, 1, 100);
 118:Src/main.c    ****   HAL_SPI_Transmit(&hspi1, (uint8_t *)0x04, 1, 100);
 119:Src/main.c    ****   HAL_SPI_Receive(&hspi1, &spi_buf, 1, 100);
 120:Src/main.c    ****   HAL_UART_Transmit(&huart7, &spi_buf, 1, 10);
 121:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 122:Src/main.c    ****   HAL_Delay(300);
 123:Src/main.c    ****   // HAL_GPIO_WritePin(GPIOD, GPIO_PIN_8, GPIO_PIN_SET);
 124:Src/main.c    ****   // HAL_GPIO_WritePin(GPIOD, GPIO_PIN_9, GPIO_PIN_SET);
 125:Src/main.c    **** 
 126:Src/main.c    ****   // Say something
 127:Src/main.c    ****   // uart_buf_len = sprintf(uart_buf, "SPI Test\r\n");
 128:Src/main.c    ****   // HAL_UART_Transmit(&huart7, (uint8_t *)uart_buf, uart_buf_len, 100);
 129:Src/main.c    ****   // HAL_UART_Transmit(&huart7, (uint8_t *)uart_buf, uart_buf_len, 100);
 130:Src/main.c    ****   // HAL_UART_Transmit(&huart7, (uint8_t *)uart_buf, uart_buf_len, 100);
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE END 2 */
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* Infinite loop */
 135:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 136:Src/main.c    ****   while (1)
 137:Src/main.c    ****   {
 138:Src/main.c    ****   	HAL_Delay(500);
 139:Src/main.c    ****   	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 140:Src/main.c    ****     HAL_SPI_Transmit(&hspi1, (uint8_t *)0x12, 1, 100);
 141:Src/main.c    ****     HAL_SPI_Receive(&hspi1, &spi_buf, 1, 100);
 142:Src/main.c    ****     transmit[0] = spi_buf;
 143:Src/main.c    ****     HAL_UART_Transmit(&huart7, transmit, 4, 10);
 144:Src/main.c    ****     HAL_SPI_Transmit(&hspi1, (uint8_t *)0x13, 1, 100);
 145:Src/main.c    ****     HAL_SPI_Receive(&hspi1, &spi_buf, 1, 100);
 146:Src/main.c    ****     transmit[0] = spi_buf;
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 4


 147:Src/main.c    ****     HAL_UART_Transmit(&huart7, transmit, 4, 10);
 148:Src/main.c    **** 
 149:Src/main.c    **** 
 150:Src/main.c    ****  //  	HAL_Delay(900);
 151:Src/main.c    ****  //  	uint8_t message[] = "Hi Dan, I'm sentient\n\r";
 152:Src/main.c    **** 	// HAL_UART_Transmit(&huart7, message, sizeof(message), 10);
 153:Src/main.c    **** 	// HAL_GPIO_WritePin(GPIOD, GPIO_PIN_8, GPIO_PIN_SET);
 154:Src/main.c    **** 	// HAL_Delay(100);
 155:Src/main.c    **** 	// HAL_GPIO_WritePin(GPIOD, GPIO_PIN_8, GPIO_PIN_RESET);
 156:Src/main.c    **** 
 157:Src/main.c    **** 
 158:Src/main.c    ****     /* USER CODE END WHILE */
 159:Src/main.c    **** 
 160:Src/main.c    ****     /* USER CODE BEGIN 3 */
 161:Src/main.c    ****   }
 162:Src/main.c    ****   /* USER CODE END 3 */
 163:Src/main.c    **** }
 164:Src/main.c    **** 
 165:Src/main.c    **** /**
 166:Src/main.c    ****   * @brief System Clock Configuration
 167:Src/main.c    ****   * @retval None
 168:Src/main.c    ****   */
 169:Src/main.c    **** void SystemClock_Config(void)
 170:Src/main.c    **** {
 171:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 172:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173:Src/main.c    **** 
 174:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 175:Src/main.c    ****   */
 176:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 177:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 178:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 179:Src/main.c    ****   */
 180:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 181:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 182:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 183:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 186:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 12;
 187:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 190:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 191:Src/main.c    ****   {
 192:Src/main.c    ****     Error_Handler();
 193:Src/main.c    ****   }
 194:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 195:Src/main.c    ****   */
 196:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 197:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 198:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 199:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 200:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 201:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 202:Src/main.c    **** 
 203:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 5


 204:Src/main.c    ****   {
 205:Src/main.c    ****     Error_Handler();
 206:Src/main.c    ****   }
 207:Src/main.c    **** }
 208:Src/main.c    **** 
 209:Src/main.c    **** /**
 210:Src/main.c    ****   * @brief SPI1 Initialization Function
 211:Src/main.c    ****   * @param None
 212:Src/main.c    ****   * @retval None
 213:Src/main.c    ****   */
 214:Src/main.c    **** static void MX_SPI1_Init(void)
 215:Src/main.c    **** {
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 218:Src/main.c    **** 
 219:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 222:Src/main.c    **** 
 223:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 224:Src/main.c    ****   /* SPI1 parameter configuration*/
 225:Src/main.c    ****   hspi1.Instance = SPI1;
 226:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 227:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 228:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 229:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 230:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 231:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 232:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 233:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 234:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 235:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 236:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 237:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 238:Src/main.c    ****   {
 239:Src/main.c    ****     Error_Handler();
 240:Src/main.c    ****   }
 241:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 242:Src/main.c    **** 
 243:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 244:Src/main.c    **** 
 245:Src/main.c    **** }
 246:Src/main.c    **** 
 247:Src/main.c    **** /**
 248:Src/main.c    ****   * @brief UART7 Initialization Function
 249:Src/main.c    ****   * @param None
 250:Src/main.c    ****   * @retval None
 251:Src/main.c    ****   */
 252:Src/main.c    **** static void MX_UART7_Init(void)
 253:Src/main.c    **** {
 254:Src/main.c    **** 
 255:Src/main.c    ****   /* USER CODE BEGIN UART7_Init 0 */
 256:Src/main.c    **** 
 257:Src/main.c    ****   /* USER CODE END UART7_Init 0 */
 258:Src/main.c    **** 
 259:Src/main.c    ****   /* USER CODE BEGIN UART7_Init 1 */
 260:Src/main.c    **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 6


 261:Src/main.c    ****   /* USER CODE END UART7_Init 1 */
 262:Src/main.c    ****   huart7.Instance = UART7;
 263:Src/main.c    ****   huart7.Init.BaudRate = 115200;
 264:Src/main.c    ****   huart7.Init.WordLength = UART_WORDLENGTH_8B;
 265:Src/main.c    ****   huart7.Init.StopBits = UART_STOPBITS_1;
 266:Src/main.c    ****   huart7.Init.Parity = UART_PARITY_NONE;
 267:Src/main.c    ****   huart7.Init.Mode = UART_MODE_TX_RX;
 268:Src/main.c    ****   huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 269:Src/main.c    ****   huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 270:Src/main.c    ****   if (HAL_UART_Init(&huart7) != HAL_OK)
 271:Src/main.c    ****   {
 272:Src/main.c    ****     Error_Handler();
 273:Src/main.c    ****   }
 274:Src/main.c    ****   /* USER CODE BEGIN UART7_Init 2 */
 275:Src/main.c    **** 
 276:Src/main.c    ****   /* USER CODE END UART7_Init 2 */
 277:Src/main.c    **** 
 278:Src/main.c    **** }
 279:Src/main.c    **** 
 280:Src/main.c    **** /**
 281:Src/main.c    ****   * @brief USB_OTG_FS Initialization Function
 282:Src/main.c    ****   * @param None
 283:Src/main.c    ****   * @retval None
 284:Src/main.c    ****   */
 285:Src/main.c    **** static void MX_USB_OTG_FS_PCD_Init(void)
 286:Src/main.c    **** {
 287:Src/main.c    **** 
 288:Src/main.c    ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 289:Src/main.c    **** 
 290:Src/main.c    ****   /* USER CODE END USB_OTG_FS_Init 0 */
 291:Src/main.c    **** 
 292:Src/main.c    ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 293:Src/main.c    **** 
 294:Src/main.c    ****   /* USER CODE END USB_OTG_FS_Init 1 */
 295:Src/main.c    ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 296:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 297:Src/main.c    ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 298:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 299:Src/main.c    ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 300:Src/main.c    ****   hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 301:Src/main.c    ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 302:Src/main.c    ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 303:Src/main.c    ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 304:Src/main.c    ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 305:Src/main.c    ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 306:Src/main.c    ****   {
 307:Src/main.c    ****     Error_Handler();
 308:Src/main.c    ****   }
 309:Src/main.c    ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE END USB_OTG_FS_Init 2 */
 312:Src/main.c    **** 
 313:Src/main.c    **** }
 314:Src/main.c    **** 
 315:Src/main.c    **** /** 
 316:Src/main.c    ****   * Enable DMA controller clock
 317:Src/main.c    ****   */
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 7


 318:Src/main.c    **** static void MX_DMA_Init(void) 
 319:Src/main.c    **** {
 320:Src/main.c    ****   /* DMA controller clock enable */
 321:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 322:Src/main.c    **** 
 323:Src/main.c    ****   /* DMA interrupt init */
 324:Src/main.c    ****   /* DMA2_Stream0_IRQn interrupt configuration */
 325:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 326:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 327:Src/main.c    **** 
 328:Src/main.c    **** }
 329:Src/main.c    **** 
 330:Src/main.c    **** /**
 331:Src/main.c    ****   * @brief GPIO Initialization Function
 332:Src/main.c    ****   * @param None
 333:Src/main.c    ****   * @retval None
 334:Src/main.c    ****   */
 335:Src/main.c    **** static void MX_GPIO_Init(void)
 336:Src/main.c    **** {
  27              		.loc 1 336 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 8BB0     		sub	sp, sp, #44
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 64
 337:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 337 0
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
  49              	.LBB2:
 338:Src/main.c    **** 
 339:Src/main.c    ****   /* GPIO Ports Clock Enable */
 340:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  50              		.loc 1 340 0
  51 0010 0194     		str	r4, [sp, #4]
  52 0012 254B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F08002 		orr	r2, r2, #128
  55 001a 1A63     		str	r2, [r3, #48]
  56 001c 1A6B     		ldr	r2, [r3, #48]
  57 001e 02F08002 		and	r2, r2, #128
  58 0022 0192     		str	r2, [sp, #4]
  59 0024 019A     		ldr	r2, [sp, #4]
  60              	.LBE2:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 8


  61              	.LBB3:
 341:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 341 0
  63 0026 0294     		str	r4, [sp, #8]
  64 0028 1A6B     		ldr	r2, [r3, #48]
  65 002a 42F00102 		orr	r2, r2, #1
  66 002e 1A63     		str	r2, [r3, #48]
  67 0030 1A6B     		ldr	r2, [r3, #48]
  68 0032 02F00102 		and	r2, r2, #1
  69 0036 0292     		str	r2, [sp, #8]
  70 0038 029A     		ldr	r2, [sp, #8]
  71              	.LBE3:
  72              	.LBB4:
 342:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  73              		.loc 1 342 0
  74 003a 0394     		str	r4, [sp, #12]
  75 003c 1A6B     		ldr	r2, [r3, #48]
  76 003e 42F01002 		orr	r2, r2, #16
  77 0042 1A63     		str	r2, [r3, #48]
  78 0044 1A6B     		ldr	r2, [r3, #48]
  79 0046 02F01002 		and	r2, r2, #16
  80 004a 0392     		str	r2, [sp, #12]
  81 004c 039A     		ldr	r2, [sp, #12]
  82              	.LBE4:
  83              	.LBB5:
 343:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  84              		.loc 1 343 0
  85 004e 0494     		str	r4, [sp, #16]
  86 0050 1A6B     		ldr	r2, [r3, #48]
  87 0052 42F00802 		orr	r2, r2, #8
  88 0056 1A63     		str	r2, [r3, #48]
  89 0058 1B6B     		ldr	r3, [r3, #48]
  90 005a 03F00803 		and	r3, r3, #8
  91 005e 0493     		str	r3, [sp, #16]
  92 0060 049B     		ldr	r3, [sp, #16]
  93              	.LBE5:
 344:Src/main.c    **** 
 345:Src/main.c    ****   /*Configure GPIO pin Output Level */
 346:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3|GPIO_PIN_4, GPIO_PIN_RESET);
  94              		.loc 1 346 0
  95 0062 124F     		ldr	r7, .L3+4
  96 0064 2246     		mov	r2, r4
  97 0066 1821     		movs	r1, #24
  98 0068 3846     		mov	r0, r7
  99 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 100              	.LVL0:
 347:Src/main.c    **** 
 348:Src/main.c    ****   /*Configure GPIO pin Output Level */
 349:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 101              		.loc 1 349 0
 102 006e 104D     		ldr	r5, .L3+8
 103 0070 2246     		mov	r2, r4
 104 0072 4FF44071 		mov	r1, #768
 105 0076 2846     		mov	r0, r5
 106 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 107              	.LVL1:
 350:Src/main.c    **** 
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 9


 351:Src/main.c    ****   /*Configure GPIO pins : PA3 PA4 */
 352:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4;
 108              		.loc 1 352 0
 109 007c 1823     		movs	r3, #24
 110 007e 0593     		str	r3, [sp, #20]
 353:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 111              		.loc 1 353 0
 112 0080 0126     		movs	r6, #1
 113 0082 0696     		str	r6, [sp, #24]
 354:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 354 0
 115 0084 0794     		str	r4, [sp, #28]
 355:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 355 0
 117 0086 0894     		str	r4, [sp, #32]
 356:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 118              		.loc 1 356 0
 119 0088 05A9     		add	r1, sp, #20
 120 008a 3846     		mov	r0, r7
 121 008c FFF7FEFF 		bl	HAL_GPIO_Init
 122              	.LVL2:
 357:Src/main.c    **** 
 358:Src/main.c    ****   /*Configure GPIO pins : PD8 PD9 */
 359:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 123              		.loc 1 359 0
 124 0090 4FF44073 		mov	r3, #768
 125 0094 0593     		str	r3, [sp, #20]
 360:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 126              		.loc 1 360 0
 127 0096 0696     		str	r6, [sp, #24]
 361:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 128              		.loc 1 361 0
 129 0098 0794     		str	r4, [sp, #28]
 362:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 130              		.loc 1 362 0
 131 009a 0894     		str	r4, [sp, #32]
 363:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 132              		.loc 1 363 0
 133 009c 05A9     		add	r1, sp, #20
 134 009e 2846     		mov	r0, r5
 135 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 136              	.LVL3:
 364:Src/main.c    **** 
 365:Src/main.c    **** }
 137              		.loc 1 365 0
 138 00a4 0BB0     		add	sp, sp, #44
 139              	.LCFI2:
 140              		.cfi_def_cfa_offset 20
 141              		@ sp needed
 142 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 143              	.L4:
 144              		.align	2
 145              	.L3:
 146 00a8 00380240 		.word	1073887232
 147 00ac 00000240 		.word	1073872896
 148 00b0 000C0240 		.word	1073875968
 149              		.cfi_endproc
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 10


 150              	.LFE136:
 152              		.section	.text.MX_DMA_Init,"ax",%progbits
 153              		.align	1
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	MX_DMA_Init:
 160              	.LFB135:
 319:Src/main.c    ****   /* DMA controller clock enable */
 161              		.loc 1 319 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 8
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 00B5     		push	{lr}
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 4
 168              		.cfi_offset 14, -4
 169 0002 83B0     		sub	sp, sp, #12
 170              	.LCFI4:
 171              		.cfi_def_cfa_offset 16
 172              	.LBB6:
 321:Src/main.c    **** 
 173              		.loc 1 321 0
 174 0004 0021     		movs	r1, #0
 175 0006 0191     		str	r1, [sp, #4]
 176 0008 094B     		ldr	r3, .L7
 177 000a 1A6B     		ldr	r2, [r3, #48]
 178 000c 42F48002 		orr	r2, r2, #4194304
 179 0010 1A63     		str	r2, [r3, #48]
 180 0012 1B6B     		ldr	r3, [r3, #48]
 181 0014 03F48003 		and	r3, r3, #4194304
 182 0018 0193     		str	r3, [sp, #4]
 183 001a 019B     		ldr	r3, [sp, #4]
 184              	.LBE6:
 325:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 185              		.loc 1 325 0
 186 001c 0A46     		mov	r2, r1
 187 001e 3820     		movs	r0, #56
 188 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 189              	.LVL4:
 326:Src/main.c    **** 
 190              		.loc 1 326 0
 191 0024 3820     		movs	r0, #56
 192 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 193              	.LVL5:
 328:Src/main.c    **** 
 194              		.loc 1 328 0
 195 002a 03B0     		add	sp, sp, #12
 196              	.LCFI5:
 197              		.cfi_def_cfa_offset 4
 198              		@ sp needed
 199 002c 5DF804FB 		ldr	pc, [sp], #4
 200              	.L8:
 201              		.align	2
 202              	.L7:
 203 0030 00380240 		.word	1073887232
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 11


 204              		.cfi_endproc
 205              	.LFE135:
 207              		.section	.text.MX_SPI1_Init,"ax",%progbits
 208              		.align	1
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu fpv4-sp-d16
 214              	MX_SPI1_Init:
 215              	.LFB132:
 215:Src/main.c    **** 
 216              		.loc 1 215 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220 0000 08B5     		push	{r3, lr}
 221              	.LCFI6:
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 3, -8
 224              		.cfi_offset 14, -4
 225:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 225              		.loc 1 225 0
 226 0002 0B48     		ldr	r0, .L11
 227 0004 0B4B     		ldr	r3, .L11+4
 228 0006 0360     		str	r3, [r0]
 226:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 229              		.loc 1 226 0
 230 0008 4FF48273 		mov	r3, #260
 231 000c 4360     		str	r3, [r0, #4]
 227:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 232              		.loc 1 227 0
 233 000e 0023     		movs	r3, #0
 234 0010 8360     		str	r3, [r0, #8]
 228:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 235              		.loc 1 228 0
 236 0012 C360     		str	r3, [r0, #12]
 229:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 237              		.loc 1 229 0
 238 0014 0361     		str	r3, [r0, #16]
 230:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 239              		.loc 1 230 0
 240 0016 4361     		str	r3, [r0, #20]
 231:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 241              		.loc 1 231 0
 242 0018 4FF40072 		mov	r2, #512
 243 001c 8261     		str	r2, [r0, #24]
 232:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 244              		.loc 1 232 0
 245 001e C361     		str	r3, [r0, #28]
 233:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 246              		.loc 1 233 0
 247 0020 0362     		str	r3, [r0, #32]
 234:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 248              		.loc 1 234 0
 249 0022 4362     		str	r3, [r0, #36]
 235:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 250              		.loc 1 235 0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 12


 251 0024 8362     		str	r3, [r0, #40]
 236:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 252              		.loc 1 236 0
 253 0026 0A23     		movs	r3, #10
 254 0028 C362     		str	r3, [r0, #44]
 237:Src/main.c    ****   {
 255              		.loc 1 237 0
 256 002a FFF7FEFF 		bl	HAL_SPI_Init
 257              	.LVL6:
 245:Src/main.c    **** 
 258              		.loc 1 245 0
 259 002e 08BD     		pop	{r3, pc}
 260              	.L12:
 261              		.align	2
 262              	.L11:
 263 0030 00000000 		.word	hspi1
 264 0034 00300140 		.word	1073819648
 265              		.cfi_endproc
 266              	.LFE132:
 268              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 269              		.align	1
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	MX_USB_OTG_FS_PCD_Init:
 276              	.LFB134:
 286:Src/main.c    **** 
 277              		.loc 1 286 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 08B5     		push	{r3, lr}
 282              	.LCFI7:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 295:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 286              		.loc 1 295 0
 287 0002 0948     		ldr	r0, .L15
 288 0004 4FF0A043 		mov	r3, #1342177280
 289 0008 0360     		str	r3, [r0]
 296:Src/main.c    ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 290              		.loc 1 296 0
 291 000a 0423     		movs	r3, #4
 292 000c 4360     		str	r3, [r0, #4]
 297:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 293              		.loc 1 297 0
 294 000e 0222     		movs	r2, #2
 295 0010 C260     		str	r2, [r0, #12]
 298:Src/main.c    ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 296              		.loc 1 298 0
 297 0012 0023     		movs	r3, #0
 298 0014 0361     		str	r3, [r0, #16]
 299:Src/main.c    ****   hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 299              		.loc 1 299 0
 300 0016 8261     		str	r2, [r0, #24]
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 13


 300:Src/main.c    ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 301              		.loc 1 300 0
 302 0018 C361     		str	r3, [r0, #28]
 301:Src/main.c    ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 303              		.loc 1 301 0
 304 001a 0362     		str	r3, [r0, #32]
 302:Src/main.c    ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 305              		.loc 1 302 0
 306 001c 4362     		str	r3, [r0, #36]
 303:Src/main.c    ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 307              		.loc 1 303 0
 308 001e C362     		str	r3, [r0, #44]
 304:Src/main.c    ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 309              		.loc 1 304 0
 310 0020 0363     		str	r3, [r0, #48]
 305:Src/main.c    ****   {
 311              		.loc 1 305 0
 312 0022 FFF7FEFF 		bl	HAL_PCD_Init
 313              	.LVL7:
 313:Src/main.c    **** 
 314              		.loc 1 313 0
 315 0026 08BD     		pop	{r3, pc}
 316              	.L16:
 317              		.align	2
 318              	.L15:
 319 0028 00000000 		.word	hpcd_USB_OTG_FS
 320              		.cfi_endproc
 321              	.LFE134:
 323              		.section	.text.MX_UART7_Init,"ax",%progbits
 324              		.align	1
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.fpu fpv4-sp-d16
 330              	MX_UART7_Init:
 331              	.LFB133:
 253:Src/main.c    **** 
 332              		.loc 1 253 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 08B5     		push	{r3, lr}
 337              	.LCFI8:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 262:Src/main.c    ****   huart7.Init.BaudRate = 115200;
 341              		.loc 1 262 0
 342 0002 0848     		ldr	r0, .L19
 343 0004 084B     		ldr	r3, .L19+4
 344 0006 0360     		str	r3, [r0]
 263:Src/main.c    ****   huart7.Init.WordLength = UART_WORDLENGTH_8B;
 345              		.loc 1 263 0
 346 0008 4FF4E133 		mov	r3, #115200
 347 000c 4360     		str	r3, [r0, #4]
 264:Src/main.c    ****   huart7.Init.StopBits = UART_STOPBITS_1;
 348              		.loc 1 264 0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 14


 349 000e 0023     		movs	r3, #0
 350 0010 8360     		str	r3, [r0, #8]
 265:Src/main.c    ****   huart7.Init.Parity = UART_PARITY_NONE;
 351              		.loc 1 265 0
 352 0012 C360     		str	r3, [r0, #12]
 266:Src/main.c    ****   huart7.Init.Mode = UART_MODE_TX_RX;
 353              		.loc 1 266 0
 354 0014 0361     		str	r3, [r0, #16]
 267:Src/main.c    ****   huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 355              		.loc 1 267 0
 356 0016 0C22     		movs	r2, #12
 357 0018 4261     		str	r2, [r0, #20]
 268:Src/main.c    ****   huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 358              		.loc 1 268 0
 359 001a 8361     		str	r3, [r0, #24]
 269:Src/main.c    ****   if (HAL_UART_Init(&huart7) != HAL_OK)
 360              		.loc 1 269 0
 361 001c C361     		str	r3, [r0, #28]
 270:Src/main.c    ****   {
 362              		.loc 1 270 0
 363 001e FFF7FEFF 		bl	HAL_UART_Init
 364              	.LVL8:
 278:Src/main.c    **** 
 365              		.loc 1 278 0
 366 0022 08BD     		pop	{r3, pc}
 367              	.L20:
 368              		.align	2
 369              	.L19:
 370 0024 00000000 		.word	huart7
 371 0028 00780040 		.word	1073772544
 372              		.cfi_endproc
 373              	.LFE133:
 375              		.section	.text.SystemClock_Config,"ax",%progbits
 376              		.align	1
 377              		.global	SystemClock_Config
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv4-sp-d16
 383              	SystemClock_Config:
 384              	.LFB131:
 170:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 385              		.loc 1 170 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 80
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389 0000 10B5     		push	{r4, lr}
 390              	.LCFI9:
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 4, -8
 393              		.cfi_offset 14, -4
 394 0002 94B0     		sub	sp, sp, #80
 395              	.LCFI10:
 396              		.cfi_def_cfa_offset 88
 171:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 397              		.loc 1 171 0
 398 0004 3022     		movs	r2, #48
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 15


 399 0006 0021     		movs	r1, #0
 400 0008 08A8     		add	r0, sp, #32
 401 000a FFF7FEFF 		bl	memset
 402              	.LVL9:
 172:Src/main.c    **** 
 403              		.loc 1 172 0
 404 000e 0024     		movs	r4, #0
 405 0010 0394     		str	r4, [sp, #12]
 406 0012 0494     		str	r4, [sp, #16]
 407 0014 0594     		str	r4, [sp, #20]
 408 0016 0694     		str	r4, [sp, #24]
 409 0018 0794     		str	r4, [sp, #28]
 410              	.LBB7:
 176:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 411              		.loc 1 176 0
 412 001a 0194     		str	r4, [sp, #4]
 413 001c 1C4B     		ldr	r3, .L23
 414 001e 1A6C     		ldr	r2, [r3, #64]
 415 0020 42F08052 		orr	r2, r2, #268435456
 416 0024 1A64     		str	r2, [r3, #64]
 417 0026 1B6C     		ldr	r3, [r3, #64]
 418 0028 03F08053 		and	r3, r3, #268435456
 419 002c 0193     		str	r3, [sp, #4]
 420 002e 019B     		ldr	r3, [sp, #4]
 421              	.LBE7:
 422              	.LBB8:
 177:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 423              		.loc 1 177 0
 424 0030 0294     		str	r4, [sp, #8]
 425 0032 184A     		ldr	r2, .L23+4
 426 0034 1368     		ldr	r3, [r2]
 427 0036 23F44043 		bic	r3, r3, #49152
 428 003a 43F48043 		orr	r3, r3, #16384
 429 003e 1360     		str	r3, [r2]
 430 0040 1368     		ldr	r3, [r2]
 431 0042 03F44043 		and	r3, r3, #49152
 432 0046 0293     		str	r3, [sp, #8]
 433 0048 029B     		ldr	r3, [sp, #8]
 434              	.LBE8:
 180:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 435              		.loc 1 180 0
 436 004a 0323     		movs	r3, #3
 437 004c 0893     		str	r3, [sp, #32]
 181:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 438              		.loc 1 181 0
 439 004e 4FF48032 		mov	r2, #65536
 440 0052 0992     		str	r2, [sp, #36]
 182:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 441              		.loc 1 182 0
 442 0054 0122     		movs	r2, #1
 443 0056 0B92     		str	r2, [sp, #44]
 183:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 444              		.loc 1 183 0
 445 0058 1022     		movs	r2, #16
 446 005a 0C92     		str	r2, [sp, #48]
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 447              		.loc 1 184 0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 16


 448 005c 0222     		movs	r2, #2
 449 005e 0E92     		str	r2, [sp, #56]
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 12;
 450              		.loc 1 185 0
 451 0060 4FF48001 		mov	r1, #4194304
 452 0064 0F91     		str	r1, [sp, #60]
 186:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 453              		.loc 1 186 0
 454 0066 0C21     		movs	r1, #12
 455 0068 1091     		str	r1, [sp, #64]
 187:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 456              		.loc 1 187 0
 457 006a 4821     		movs	r1, #72
 458 006c 1191     		str	r1, [sp, #68]
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 459              		.loc 1 188 0
 460 006e 1292     		str	r2, [sp, #72]
 189:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 461              		.loc 1 189 0
 462 0070 1393     		str	r3, [sp, #76]
 190:Src/main.c    ****   {
 463              		.loc 1 190 0
 464 0072 08A8     		add	r0, sp, #32
 465 0074 FFF7FEFF 		bl	HAL_RCC_OscConfig
 466              	.LVL10:
 196:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 467              		.loc 1 196 0
 468 0078 0F23     		movs	r3, #15
 469 007a 0393     		str	r3, [sp, #12]
 198:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 470              		.loc 1 198 0
 471 007c 0494     		str	r4, [sp, #16]
 199:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 472              		.loc 1 199 0
 473 007e 0594     		str	r4, [sp, #20]
 200:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 474              		.loc 1 200 0
 475 0080 0694     		str	r4, [sp, #24]
 201:Src/main.c    **** 
 476              		.loc 1 201 0
 477 0082 0794     		str	r4, [sp, #28]
 203:Src/main.c    ****   {
 478              		.loc 1 203 0
 479 0084 2146     		mov	r1, r4
 480 0086 03A8     		add	r0, sp, #12
 481 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 482              	.LVL11:
 207:Src/main.c    **** 
 483              		.loc 1 207 0
 484 008c 14B0     		add	sp, sp, #80
 485              	.LCFI11:
 486              		.cfi_def_cfa_offset 8
 487              		@ sp needed
 488 008e 10BD     		pop	{r4, pc}
 489              	.L24:
 490              		.align	2
 491              	.L23:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 17


 492 0090 00380240 		.word	1073887232
 493 0094 00700040 		.word	1073770496
 494              		.cfi_endproc
 495              	.LFE131:
 497              		.section	.text.main,"ax",%progbits
 498              		.align	1
 499              		.global	main
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu fpv4-sp-d16
 505              	main:
 506              	.LFB130:
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
 507              		.loc 1 77 0
 508              		.cfi_startproc
 509              		@ Volatile: function does not return.
 510              		@ args = 0, pretend = 0, frame = 8
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512 0000 00B5     		push	{lr}
 513              	.LCFI12:
 514              		.cfi_def_cfa_offset 4
 515              		.cfi_offset 14, -4
 516 0002 83B0     		sub	sp, sp, #12
 517              	.LCFI13:
 518              		.cfi_def_cfa_offset 16
  86:Src/main.c    **** 
 519              		.loc 1 86 0
 520 0004 FFF7FEFF 		bl	HAL_Init
 521              	.LVL12:
  93:Src/main.c    **** 
 522              		.loc 1 93 0
 523 0008 FFF7FEFF 		bl	SystemClock_Config
 524              	.LVL13:
 100:Src/main.c    ****   MX_DMA_Init();
 525              		.loc 1 100 0
 526 000c FFF7FEFF 		bl	MX_GPIO_Init
 527              	.LVL14:
 101:Src/main.c    ****   MX_SPI1_Init();
 528              		.loc 1 101 0
 529 0010 FFF7FEFF 		bl	MX_DMA_Init
 530              	.LVL15:
 102:Src/main.c    ****   MX_USB_OTG_FS_PCD_Init();
 531              		.loc 1 102 0
 532 0014 FFF7FEFF 		bl	MX_SPI1_Init
 533              	.LVL16:
 103:Src/main.c    ****   MX_UART7_Init();
 534              		.loc 1 103 0
 535 0018 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 536              	.LVL17:
 104:Src/main.c    ****   /* USER CODE BEGIN 2 */
 537              		.loc 1 104 0
 538 001c FFF7FEFF 		bl	MX_UART7_Init
 539              	.LVL18:
 107:Src/main.c    ****   HAL_Delay(100);
 540              		.loc 1 107 0
 541 0020 424D     		ldr	r5, .L28
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 18


 542 0022 0122     		movs	r2, #1
 543 0024 0821     		movs	r1, #8
 544 0026 2846     		mov	r0, r5
 545 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 546              	.LVL19:
 108:Src/main.c    ****   
 547              		.loc 1 108 0
 548 002c 6420     		movs	r0, #100
 549 002e FFF7FEFF 		bl	HAL_Delay
 550              	.LVL20:
 110:Src/main.c    **** 		  uint8_t transmit[] = "X:\n\r";
 551              		.loc 1 110 0
 552 0032 0026     		movs	r6, #0
 553 0034 8DF80760 		strb	r6, [sp, #7]
 111:Src/main.c    ****   //write to accel register
 554              		.loc 1 111 0
 555 0038 3D4B     		ldr	r3, .L28+4
 556 003a 93E80300 		ldm	r3, {r0, r1}
 557 003e 0090     		str	r0, [sp]
 558 0040 8DF80410 		strb	r1, [sp, #4]
 113:Src/main.c    ****   HAL_SPI_Transmit(&hspi1, (uint8_t *)0x00, 1, 100);
 559              		.loc 1 113 0
 560 0044 3246     		mov	r2, r6
 561 0046 0821     		movs	r1, #8
 562 0048 2846     		mov	r0, r5
 563 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 564              	.LVL21:
 114:Src/main.c    ****   HAL_SPI_Receive(&hspi1, &spi_buf, 1, 100);
 565              		.loc 1 114 0
 566 004e 394C     		ldr	r4, .L28+8
 567 0050 6423     		movs	r3, #100
 568 0052 0122     		movs	r2, #1
 569 0054 3146     		mov	r1, r6
 570 0056 2046     		mov	r0, r4
 571 0058 FFF7FEFF 		bl	HAL_SPI_Transmit
 572              	.LVL22:
 115:Src/main.c    ****   HAL_Delay(100);
 573              		.loc 1 115 0
 574 005c 6423     		movs	r3, #100
 575 005e 0122     		movs	r2, #1
 576 0060 0DF10701 		add	r1, sp, #7
 577 0064 2046     		mov	r0, r4
 578 0066 FFF7FEFF 		bl	HAL_SPI_Receive
 579              	.LVL23:
 116:Src/main.c    ****   HAL_SPI_Transmit(&hspi1, (uint8_t *)0x7D, 1, 100);
 580              		.loc 1 116 0
 581 006a 6420     		movs	r0, #100
 582 006c FFF7FEFF 		bl	HAL_Delay
 583              	.LVL24:
 117:Src/main.c    ****   HAL_SPI_Transmit(&hspi1, (uint8_t *)0x04, 1, 100);
 584              		.loc 1 117 0
 585 0070 6423     		movs	r3, #100
 586 0072 0122     		movs	r2, #1
 587 0074 7D21     		movs	r1, #125
 588 0076 2046     		mov	r0, r4
 589 0078 FFF7FEFF 		bl	HAL_SPI_Transmit
 590              	.LVL25:
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 19


 118:Src/main.c    ****   HAL_SPI_Receive(&hspi1, &spi_buf, 1, 100);
 591              		.loc 1 118 0
 592 007c 6423     		movs	r3, #100
 593 007e 0122     		movs	r2, #1
 594 0080 0421     		movs	r1, #4
 595 0082 2046     		mov	r0, r4
 596 0084 FFF7FEFF 		bl	HAL_SPI_Transmit
 597              	.LVL26:
 119:Src/main.c    ****   HAL_UART_Transmit(&huart7, &spi_buf, 1, 10);
 598              		.loc 1 119 0
 599 0088 6423     		movs	r3, #100
 600 008a 0122     		movs	r2, #1
 601 008c 0DF10701 		add	r1, sp, #7
 602 0090 2046     		mov	r0, r4
 603 0092 FFF7FEFF 		bl	HAL_SPI_Receive
 604              	.LVL27:
 120:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 605              		.loc 1 120 0
 606 0096 0A23     		movs	r3, #10
 607 0098 0122     		movs	r2, #1
 608 009a 0DF10701 		add	r1, sp, #7
 609 009e 2648     		ldr	r0, .L28+12
 610 00a0 FFF7FEFF 		bl	HAL_UART_Transmit
 611              	.LVL28:
 121:Src/main.c    ****   HAL_Delay(300);
 612              		.loc 1 121 0
 613 00a4 0122     		movs	r2, #1
 614 00a6 0821     		movs	r1, #8
 615 00a8 2846     		mov	r0, r5
 616 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 617              	.LVL29:
 122:Src/main.c    ****   // HAL_GPIO_WritePin(GPIOD, GPIO_PIN_8, GPIO_PIN_SET);
 618              		.loc 1 122 0
 619 00ae 4FF49670 		mov	r0, #300
 620 00b2 FFF7FEFF 		bl	HAL_Delay
 621              	.LVL30:
 622              	.L26:
 138:Src/main.c    ****   	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 623              		.loc 1 138 0 discriminator 1
 624 00b6 4FF4FA70 		mov	r0, #500
 625 00ba FFF7FEFF 		bl	HAL_Delay
 626              	.LVL31:
 139:Src/main.c    ****     HAL_SPI_Transmit(&hspi1, (uint8_t *)0x12, 1, 100);
 627              		.loc 1 139 0 discriminator 1
 628 00be 0022     		movs	r2, #0
 629 00c0 0821     		movs	r1, #8
 630 00c2 1A48     		ldr	r0, .L28
 631 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 632              	.LVL32:
 140:Src/main.c    ****     HAL_SPI_Receive(&hspi1, &spi_buf, 1, 100);
 633              		.loc 1 140 0 discriminator 1
 634 00c8 1A4D     		ldr	r5, .L28+8
 635 00ca 6423     		movs	r3, #100
 636 00cc 0122     		movs	r2, #1
 637 00ce 1221     		movs	r1, #18
 638 00d0 2846     		mov	r0, r5
 639 00d2 FFF7FEFF 		bl	HAL_SPI_Transmit
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 20


 640              	.LVL33:
 141:Src/main.c    ****     transmit[0] = spi_buf;
 641              		.loc 1 141 0 discriminator 1
 642 00d6 6423     		movs	r3, #100
 643 00d8 0122     		movs	r2, #1
 644 00da 0DF10701 		add	r1, sp, #7
 645 00de 2846     		mov	r0, r5
 646 00e0 FFF7FEFF 		bl	HAL_SPI_Receive
 647              	.LVL34:
 142:Src/main.c    ****     HAL_UART_Transmit(&huart7, transmit, 4, 10);
 648              		.loc 1 142 0 discriminator 1
 649 00e4 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 650 00e8 02AC     		add	r4, sp, #8
 651 00ea 04F8083D 		strb	r3, [r4, #-8]!
 143:Src/main.c    ****     HAL_SPI_Transmit(&hspi1, (uint8_t *)0x13, 1, 100);
 652              		.loc 1 143 0 discriminator 1
 653 00ee 124E     		ldr	r6, .L28+12
 654 00f0 0A23     		movs	r3, #10
 655 00f2 0422     		movs	r2, #4
 656 00f4 2146     		mov	r1, r4
 657 00f6 3046     		mov	r0, r6
 658 00f8 FFF7FEFF 		bl	HAL_UART_Transmit
 659              	.LVL35:
 144:Src/main.c    ****     HAL_SPI_Receive(&hspi1, &spi_buf, 1, 100);
 660              		.loc 1 144 0 discriminator 1
 661 00fc 6423     		movs	r3, #100
 662 00fe 0122     		movs	r2, #1
 663 0100 1321     		movs	r1, #19
 664 0102 2846     		mov	r0, r5
 665 0104 FFF7FEFF 		bl	HAL_SPI_Transmit
 666              	.LVL36:
 145:Src/main.c    ****     transmit[0] = spi_buf;
 667              		.loc 1 145 0 discriminator 1
 668 0108 6423     		movs	r3, #100
 669 010a 0122     		movs	r2, #1
 670 010c 0DF10701 		add	r1, sp, #7
 671 0110 2846     		mov	r0, r5
 672 0112 FFF7FEFF 		bl	HAL_SPI_Receive
 673              	.LVL37:
 146:Src/main.c    ****     HAL_UART_Transmit(&huart7, transmit, 4, 10);
 674              		.loc 1 146 0 discriminator 1
 675 0116 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 676 011a 8DF80030 		strb	r3, [sp]
 147:Src/main.c    **** 
 677              		.loc 1 147 0 discriminator 1
 678 011e 0A23     		movs	r3, #10
 679 0120 0422     		movs	r2, #4
 680 0122 2146     		mov	r1, r4
 681 0124 3046     		mov	r0, r6
 682 0126 FFF7FEFF 		bl	HAL_UART_Transmit
 683              	.LVL38:
 684 012a C4E7     		b	.L26
 685              	.L29:
 686              		.align	2
 687              	.L28:
 688 012c 00000240 		.word	1073872896
 689 0130 00000000 		.word	.LC0
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 21


 690 0134 00000000 		.word	hspi1
 691 0138 00000000 		.word	huart7
 692              		.cfi_endproc
 693              	.LFE130:
 695              		.section	.text.Error_Handler,"ax",%progbits
 696              		.align	1
 697              		.global	Error_Handler
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu fpv4-sp-d16
 703              	Error_Handler:
 704              	.LFB137:
 366:Src/main.c    **** 
 367:Src/main.c    **** /* USER CODE BEGIN 4 */
 368:Src/main.c    **** 
 369:Src/main.c    **** /* USER CODE END 4 */
 370:Src/main.c    **** 
 371:Src/main.c    **** /**
 372:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 373:Src/main.c    ****   * @retval None
 374:Src/main.c    ****   */
 375:Src/main.c    **** void Error_Handler(void)
 376:Src/main.c    **** {
 705              		.loc 1 376 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 377:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 378:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 379:Src/main.c    **** 
 380:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 381:Src/main.c    **** }
 710              		.loc 1 381 0
 711 0000 7047     		bx	lr
 712              		.cfi_endproc
 713              	.LFE137:
 715              		.comm	hpcd_USB_OTG_FS,1032,4
 716              		.comm	huart7,64,4
 717              		.comm	hdma_spi1_rx,96,4
 718              		.comm	hspi1,88,4
 719              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 720              		.align	2
 721              	.LC0:
 722 0000 583A0A0D 		.ascii	"X:\012\015\000"
 722      00
 723              		.text
 724              	.Letext0:
 725              		.file 2 "c:\\gnutoolsarmembedded\\7-2017-q4-major\\arm-none-eabi\\include\\machine\\_default_types
 726              		.file 3 "c:\\gnutoolsarmembedded\\7-2017-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 727              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 728              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 729              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f427xx.h"
 730              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 731              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 732              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 22


 733              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 734              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 735              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 736              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 737              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 738              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 739              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 740              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 741              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 742              		.file 19 "<built-in>"
ARM GAS  C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:146    .text.MX_GPIO_Init:000000a8 $d
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:153    .text.MX_DMA_Init:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:159    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:203    .text.MX_DMA_Init:00000030 $d
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:208    .text.MX_SPI1_Init:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:214    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:263    .text.MX_SPI1_Init:00000030 $d
                            *COM*:00000058 hspi1
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:269    .text.MX_USB_OTG_FS_PCD_Init:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:275    .text.MX_USB_OTG_FS_PCD_Init:00000000 MX_USB_OTG_FS_PCD_Init
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:319    .text.MX_USB_OTG_FS_PCD_Init:00000028 $d
                            *COM*:00000408 hpcd_USB_OTG_FS
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:324    .text.MX_UART7_Init:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:330    .text.MX_UART7_Init:00000000 MX_UART7_Init
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:370    .text.MX_UART7_Init:00000024 $d
                            *COM*:00000040 huart7
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:376    .text.SystemClock_Config:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:383    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:492    .text.SystemClock_Config:00000090 $d
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:498    .text.main:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:505    .text.main:00000000 main
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:688    .text.main:0000012c $d
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:696    .text.Error_Handler:00000000 $t
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:703    .text.Error_Handler:00000000 Error_Handler
                            *COM*:00000060 hdma_spi1_rx
C:\Users\wfairman\AppData\Local\Temp\ccfReIUj.s:720    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_SPI_Init
HAL_PCD_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
HAL_SPI_Transmit
HAL_SPI_Receive
HAL_UART_Transmit
